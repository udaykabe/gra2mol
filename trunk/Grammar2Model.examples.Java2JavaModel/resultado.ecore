<?xml version="1.0" encoding="ISO-8859-1"?>
<javas:JavaModel xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:javas="gts.inf.um.es/javaSimplified">
  <classes>
    <name strValue="ActionLogin" identifier="ActionLogin"/>
    <imports>import beansstruts . BeanLogin ; </imports>
    <imports>import javax . servlet . http . HttpServletRequest ; </imports>
    <imports>import javax . servlet . http . HttpServletResponse ; </imports>
    <imports>import org . apache . struts . action . Action ; </imports>
    <imports>import org . apache . struts . action . ActionForm ; </imports>
    <imports>import org . apache . struts . action . ActionForward ; </imports>
    <imports>import org . apache . struts . action . ActionMapping ; </imports>
    <methods strValue="public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( &quot;user&quot; ) &amp;&amp; bean . getClave ( ) . equals ( &quot;user&quot; ) ) { System . out . println ( &quot;Usuario logged-in&quot; ) ; } request . getSession ( ) . setAttribute ( &quot;usuario&quot; , &quot;invitado&quot; ) ; if ( request . getSession ( ) . getAttribute ( &quot;datosPublicacion&quot; ) != null ) return actionMapping . findForward ( &quot;publicar&quot; ) ; else return actionMapping . findForward ( &quot;exito&quot; ) ; } " returnType="//@types.1">
      <name strValue="execute" identifier="execute"/>
      <parameters type="//@types.2">
        <name strValue="actionMapping" identifier="actionMapping"/>
      </parameters>
      <parameters type="//@types.3">
        <name strValue="actionForm" identifier="actionForm"/>
      </parameters>
      <parameters type="//@types.4">
        <name strValue="request" identifier="request"/>
      </parameters>
      <parameters type="//@types.5">
        <name strValue="response" identifier="response"/>
      </parameters>
      <statements xsi:type="javas:VariableDeclarationStatement" strValue="BeanLogin bean = ( BeanLogin ) actionForm ; " type="//@types.6">
        <name strValue="bean" identifier="bean"/>
        <expr xsi:type="javas:CastExpression" strValue="( BeanLogin ) actionForm " type="//@types.6">
          <expr xsi:type="javas:Name" strValue="actionForm" identifier="actionForm"/>
        </expr>
      </statements>
      <statements xsi:type="javas:IfStatement" strValue="if ( bean . getUsuario ( ) . equals ( &quot;user&quot; ) &amp;&amp; bean . getClave ( ) . equals ( &quot;user&quot; ) ) { System . out . println ( &quot;Usuario logged-in&quot; ) ; } ">
        <expr xsi:type="javas:MethodInvocation" strValue="bean . getUsuario ( ) . equals ( &quot;user&quot; ) &amp;&amp; bean . getClave ( ) . equals ( &quot;user&quot; ) ">
          <object strValue="bean" identifier="bean"/>
          <method>
            <childCall>
              <arguments xsi:type="javas:Literal" strValue="user" value="user"/>
              <methodName strValue="equals" identifier="equals"/>
            </childCall>
            <methodName strValue="getUsuario" identifier="getUsuario"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:ExpressionStatement" strValue="request . getSession ( ) . setAttribute ( &quot;usuario&quot; , &quot;invitado&quot; ) ">
        <expr xsi:type="javas:MethodInvocation" strValue="request . getSession ( ) . setAttribute ( &quot;usuario&quot; , &quot;invitado&quot; ) ">
          <object strValue="request" identifier="request"/>
          <method>
            <childCall>
              <arguments xsi:type="javas:Literal" strValue="usuario" value="usuario"/>
              <arguments xsi:type="javas:Literal" strValue="invitado" value="invitado"/>
              <methodName strValue="setAttribute" identifier="setAttribute"/>
            </childCall>
            <methodName strValue="getSession" identifier="getSession"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:IfStatement" strValue="if ( request . getSession ( ) . getAttribute ( &quot;datosPublicacion&quot; ) != null ) return actionMapping . findForward ( &quot;publicar&quot; ) ; else return actionMapping . findForward ( &quot;exito&quot; ) ; ">
        <expr xsi:type="javas:MethodInvocation" strValue="request . getSession ( ) . getAttribute ( &quot;datosPublicacion&quot; ) != null ">
          <object strValue="request" identifier="request"/>
          <method>
            <childCall>
              <arguments xsi:type="javas:Literal" strValue="datosPublicacion" value="datosPublicacion"/>
              <methodName strValue="getAttribute" identifier="getAttribute"/>
            </childCall>
            <methodName strValue="getSession" identifier="getSession"/>
          </method>
        </expr>
        <ifst xsi:type="javas:ReturnStatement">
          <expr xsi:type="javas:MethodInvocation" strValue="actionMapping . findForward ( &quot;exito&quot; ) ">
            <object strValue="actionMapping" identifier="actionMapping"/>
            <method>
              <arguments xsi:type="javas:Literal" strValue="exito" value="exito"/>
              <methodName strValue="findForward" identifier="findForward"/>
            </method>
          </expr>
        </ifst>
      </statements>
    </methods>
  </classes>
  <classes>
    <name strValue="ActionPublicarNoticia" identifier="ActionPublicarNoticia"/>
    <imports>import beansstruts . BeanTablon ; </imports>
    <imports>import controladores . ControladorNoticias ; </imports>
    <imports>import javax . servlet . http . HttpServletRequest ; </imports>
    <imports>import javax . servlet . http . HttpServletResponse ; </imports>
    <imports>import org . apache . struts . action . * ; </imports>
    <methods strValue="public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( &quot;usuario&quot; ) == null ) { request . getSession ( ) . setAttribute ( &quot;datosPublicacion&quot; , bean ) ; return ( actionMapping . findForward ( &quot;login&quot; ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( &quot;datosPublicacion&quot; ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( &quot;datosPublicacion&quot; , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( &quot;exito&quot; ) ) ; } " returnType="//@types.1">
      <name strValue="execute" identifier="execute"/>
      <parameters type="//@types.2">
        <name strValue="actionMapping" identifier="actionMapping"/>
      </parameters>
      <parameters type="//@types.3">
        <name strValue="actionForm" identifier="actionForm"/>
      </parameters>
      <parameters type="//@types.4">
        <name strValue="request" identifier="request"/>
      </parameters>
      <parameters type="//@types.5">
        <name strValue="response" identifier="response"/>
      </parameters>
      <statements xsi:type="javas:VariableDeclarationStatement" strValue="BeanTablon bean = ( BeanTablon ) actionForm ; " type="//@types.7">
        <name strValue="bean" identifier="bean"/>
        <expr xsi:type="javas:CastExpression" strValue="( BeanTablon ) actionForm " type="//@types.7">
          <expr xsi:type="javas:Name" strValue="actionForm" identifier="actionForm"/>
        </expr>
      </statements>
      <statements xsi:type="javas:IfStatement" strValue="if ( request . getSession ( ) . getAttribute ( &quot;usuario&quot; ) == null ) { request . getSession ( ) . setAttribute ( &quot;datosPublicacion&quot; , bean ) ; return ( actionMapping . findForward ( &quot;login&quot; ) ) ; } ">
        <expr xsi:type="javas:MethodInvocation" strValue="request . getSession ( ) . getAttribute ( &quot;usuario&quot; ) == null ">
          <object strValue="request" identifier="request"/>
          <method>
            <childCall>
              <arguments xsi:type="javas:Literal" strValue="usuario" value="usuario"/>
              <methodName strValue="getAttribute" identifier="getAttribute"/>
            </childCall>
            <methodName strValue="getSession" identifier="getSession"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:VariableDeclarationStatement" strValue="BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( &quot;datosPublicacion&quot; ) ; " type="//@types.7">
        <name strValue="datos" identifier="datos"/>
        <expr xsi:type="javas:MethodInvocation" strValue="( BeanTablon ) request . getSession ( ) . getAttribute ( &quot;datosPublicacion&quot; ) ">
          <object strValue="request" identifier="request"/>
          <method>
            <methodName strValue="getSession" identifier="getSession"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:IfStatement" strValue="if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( &quot;datosPublicacion&quot; , null ) ; } ">
        <expr xsi:type="javas:Name" strValue="datos" identifier="datos"/>
      </statements>
      <statements xsi:type="javas:ExpressionStatement" strValue="ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ">
        <expr xsi:type="javas:MethodInvocation" strValue="ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ">
          <object strValue="ControladorNoticias" identifier="ControladorNoticias"/>
          <method>
            <childCall>
              <arguments xsi:type="javas:MethodInvocation" strValue="bean . getTitulo ( ) ">
                <object strValue="bean" identifier="bean"/>
                <method>
                  <methodName strValue="getTitulo" identifier="getTitulo"/>
                </method>
              </arguments>
              <arguments xsi:type="javas:MethodInvocation" strValue="bean . getContenido ( ) ">
                <object strValue="bean" identifier="bean"/>
                <method>
                  <methodName strValue="getContenido" identifier="getContenido"/>
                </method>
              </arguments>
              <arguments xsi:type="javas:MethodInvocation" strValue="bean . getAutor ( ) ">
                <object strValue="bean" identifier="bean"/>
                <method>
                  <methodName strValue="getAutor" identifier="getAutor"/>
                </method>
              </arguments>
              <methodName strValue="addNoticia" identifier="addNoticia"/>
            </childCall>
            <methodName strValue="getInstancia" identifier="getInstancia"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:ReturnStatement">
        <expr xsi:type="javas:MethodInvocation" strValue="( actionMapping . findForward ( &quot;exito&quot; ) ) ">
          <object strValue="actionMapping" identifier="actionMapping"/>
          <method>
            <arguments xsi:type="javas:Literal" strValue="exito" value="exito"/>
            <methodName strValue="findForward" identifier="findForward"/>
          </method>
        </expr>
      </statements>
    </methods>
  </classes>
  <classes>
    <name strValue="ActionVerNoticia" identifier="ActionVerNoticia"/>
    <imports>import beansstruts . BeanTablon ; </imports>
    <imports>import controladores . ControladorNoticias ; </imports>
    <imports>import javax . servlet . http . * ; </imports>
    <imports>import logicaNegocio . Noticia ; </imports>
    <imports>import org . apache . struts . action . * ; </imports>
    <methods strValue="public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( &quot;&quot; ) ; bean . setContenido ( &quot;&quot; ) ; bean . setAutor ( &quot;&quot; ) ; request . setAttribute ( &quot;noticia&quot; , noticia ) ; return ( actionMapping . findForward ( &quot;verNoticia&quot; ) ) ; } " returnType="//@types.1">
      <name strValue="execute" identifier="execute"/>
      <parameters type="//@types.2">
        <name strValue="actionMapping" identifier="actionMapping"/>
      </parameters>
      <parameters type="//@types.3">
        <name strValue="actionForm" identifier="actionForm"/>
      </parameters>
      <parameters type="//@types.4">
        <name strValue="request" identifier="request"/>
      </parameters>
      <parameters type="//@types.5">
        <name strValue="response" identifier="response"/>
      </parameters>
      <statements xsi:type="javas:VariableDeclarationStatement" strValue="BeanTablon bean = ( BeanTablon ) actionForm ; " type="//@types.7">
        <name strValue="bean" identifier="bean"/>
        <expr xsi:type="javas:CastExpression" strValue="( BeanTablon ) actionForm " type="//@types.7">
          <expr xsi:type="javas:Name" strValue="actionForm" identifier="actionForm"/>
        </expr>
      </statements>
      <statements xsi:type="javas:VariableDeclarationStatement" strValue="Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; " type="//@types.8">
        <name strValue="noticia" identifier="noticia"/>
        <expr xsi:type="javas:MethodInvocation" strValue="ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ">
          <object strValue="ControladorNoticias" identifier="ControladorNoticias"/>
          <method>
            <childCall>
              <arguments xsi:type="javas:MethodInvocation" strValue="bean . getTituloSeleccionado ( ) ">
                <object strValue="bean" identifier="bean"/>
                <method>
                  <methodName strValue="getTituloSeleccionado" identifier="getTituloSeleccionado"/>
                </method>
              </arguments>
              <methodName strValue="findNoticia" identifier="findNoticia"/>
            </childCall>
            <methodName strValue="getInstancia" identifier="getInstancia"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:ExpressionStatement" strValue="bean . setTitulo ( &quot;&quot; ) ">
        <expr xsi:type="javas:MethodInvocation" strValue="bean . setTitulo ( &quot;&quot; ) ">
          <object strValue="bean" identifier="bean"/>
          <method>
            <arguments xsi:type="javas:Literal" strValue="" value=""/>
            <methodName strValue="setTitulo" identifier="setTitulo"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:ExpressionStatement" strValue="bean . setContenido ( &quot;&quot; ) ">
        <expr xsi:type="javas:MethodInvocation" strValue="bean . setContenido ( &quot;&quot; ) ">
          <object strValue="bean" identifier="bean"/>
          <method>
            <arguments xsi:type="javas:Literal" strValue="" value=""/>
            <methodName strValue="setContenido" identifier="setContenido"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:ExpressionStatement" strValue="bean . setAutor ( &quot;&quot; ) ">
        <expr xsi:type="javas:MethodInvocation" strValue="bean . setAutor ( &quot;&quot; ) ">
          <object strValue="bean" identifier="bean"/>
          <method>
            <arguments xsi:type="javas:Literal" strValue="" value=""/>
            <methodName strValue="setAutor" identifier="setAutor"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:ExpressionStatement" strValue="request . setAttribute ( &quot;noticia&quot; , noticia ) ">
        <expr xsi:type="javas:MethodInvocation" strValue="request . setAttribute ( &quot;noticia&quot; , noticia ) ">
          <object strValue="request" identifier="request"/>
          <method>
            <arguments xsi:type="javas:Literal" strValue="noticia" value="noticia"/>
            <arguments xsi:type="javas:Name" strValue="noticia" identifier="noticia"/>
            <methodName strValue="setAttribute" identifier="setAttribute"/>
          </method>
        </expr>
      </statements>
      <statements xsi:type="javas:ReturnStatement">
        <expr xsi:type="javas:MethodInvocation" strValue="( actionMapping . findForward ( &quot;verNoticia&quot; ) ) ">
          <object strValue="actionMapping" identifier="actionMapping"/>
          <method>
            <arguments xsi:type="javas:Literal" strValue="verNoticia" value="verNoticia"/>
            <methodName strValue="findForward" identifier="findForward"/>
          </method>
        </expr>
      </statements>
    </methods>
  </classes>
  <classes>
    <name strValue="BeanTablon" identifier="BeanTablon"/>
    <imports>import javax . servlet . http . HttpServletRequest ; </imports>
    <imports>import org . apache . struts . action . * ; </imports>
    <fields type="//@types.9" strValue="private String tituloSeleccionado = &quot;&quot; ; " visibility="PRIVATE">
      <name strValue="tituloSeleccionado" identifier="tituloSeleccionado"/>
    </fields>
    <fields type="//@types.9" strValue="private String titulo = &quot;&quot; ; " visibility="PRIVATE">
      <name strValue="titulo" identifier="titulo"/>
    </fields>
    <fields type="//@types.9" strValue="private String contenido = &quot;&quot; ; " visibility="PRIVATE">
      <name strValue="contenido" identifier="contenido"/>
    </fields>
    <fields type="//@types.9" strValue="private String autor = &quot;&quot; ; " visibility="PRIVATE">
      <name strValue="autor" identifier="autor"/>
    </fields>
    <methods strValue="public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( &quot;tablon.error&quot; ) ) ; return errores ; } " returnType="//@types.10">
      <name strValue="validate" identifier="validate"/>
      <parameters type="//@types.2">
        <name strValue="mapping" identifier="mapping"/>
      </parameters>
      <parameters type="//@types.4">
        <name strValue="request" identifier="request"/>
      </parameters>
      <statements xsi:type="javas:VariableDeclarationStatement" strValue="ActionErrors errores = new ActionErrors ( ) ; " type="//@types.10">
        <name strValue="errores" identifier="errores"/>
        <expr xsi:type="javas:ClassInstanceCreation" strValue="new ActionErrors ( ) "/>
      </statements>
      <statements xsi:type="javas:IfStatement" strValue="if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( &quot;tablon.error&quot; ) ) ; ">
        <expr xsi:type="javas:MethodInvocation" strValue="isTituloNoValido ( getTitulo ( ) ) ">
          <method>
            <arguments xsi:type="javas:MethodInvocation" strValue="getTitulo ( ) ">
              <method>
                <methodName strValue="getTitulo" identifier="getTitulo"/>
              </method>
            </arguments>
            <methodName strValue="isTituloNoValido" identifier="isTituloNoValido"/>
          </method>
        </expr>
        <ifst xsi:type="javas:ExpressionStatement" strValue="errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( &quot;tablon.error&quot; ) ) ">
          <expr xsi:type="javas:MethodInvocation" strValue="errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( &quot;tablon.error&quot; ) ) ">
            <object strValue="errores" identifier="errores"/>
            <method>
              <arguments xsi:type="javas:Name" strValue="ActionErrors . GLOBAL_ERROR " identifier="ActionErrors . GLOBAL_ERROR "/>
              <arguments xsi:type="javas:ClassInstanceCreation" strValue="new ActionError ( &quot;tablon.error&quot; ) ">
                <arguments xsi:type="javas:Literal" strValue="tablon.error" value="tablon.error"/>
              </arguments>
              <methodName strValue="add" identifier="add"/>
            </method>
          </expr>
        </ifst>
      </statements>
      <statements xsi:type="javas:ReturnStatement">
        <expr xsi:type="javas:Name" strValue="errores" identifier="errores"/>
      </statements>
    </methods>
    <methods strValue="private boolean isTituloNoValido ( String t ) { if ( t . contains ( &quot;$&quot; ) || t . contains ( &quot;#&quot; ) ) return true ; return false ; } " returnType="//@types.11">
      <name strValue="isTituloNoValido" identifier="isTituloNoValido"/>
      <parameters type="//@types.9">
        <name strValue="t" identifier="t"/>
      </parameters>
      <statements xsi:type="javas:IfStatement" strValue="if ( t . contains ( &quot;$&quot; ) || t . contains ( &quot;#&quot; ) ) return true ; ">
        <expr xsi:type="javas:InfixExpression" operator="CONDITIONAL_OR">
          <expr1 xsi:type="javas:MethodInvocation" strValue="t . contains ( &quot;$&quot; ) ">
            <object strValue="t" identifier="t"/>
            <method>
              <arguments xsi:type="javas:Literal" strValue="$" value="$"/>
              <methodName strValue="contains" identifier="contains"/>
            </method>
          </expr1>
          <expr2 xsi:type="javas:MethodInvocation" strValue="t . contains ( &quot;#&quot; ) ">
            <object strValue="t" identifier="t"/>
            <method>
              <arguments xsi:type="javas:Literal" strValue="#" value="#"/>
              <methodName strValue="contains" identifier="contains"/>
            </method>
          </expr2>
        </expr>
        <ifst xsi:type="javas:ReturnStatement">
          <expr xsi:type="javas:Literal" strValue="true" type="BOOLEAN" value="true"/>
        </ifst>
      </statements>
      <statements xsi:type="javas:ReturnStatement">
        <expr xsi:type="javas:Literal" strValue="false" type="BOOLEAN" value="false"/>
      </statements>
    </methods>
    <methods strValue="public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } ">
      <name strValue="setTituloSeleccionado" identifier="setTituloSeleccionado"/>
      <parameters type="//@types.9">
        <name strValue="tituloSeleccionado" identifier="tituloSeleccionado"/>
      </parameters>
      <statements xsi:type="javas:ExpressionStatement" strValue="this . tituloSeleccionado = tituloSeleccionado ">
        <expr xsi:type="javas:Assignment">
          <expr1 xsi:type="javas:FieldAccess">
            <expr xsi:type="javas:ThisExpression"/>
            <name strValue="tituloSeleccionado" identifier="tituloSeleccionado"/>
          </expr1>
          <expr2 xsi:type="javas:Name" strValue="tituloSeleccionado" identifier="tituloSeleccionado"/>
        </expr>
      </statements>
    </methods>
    <methods strValue="public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } " returnType="//@types.9">
      <name strValue="getTituloSeleccionado" identifier="getTituloSeleccionado"/>
      <statements xsi:type="javas:ReturnStatement">
        <expr xsi:type="javas:Name" strValue="tituloSeleccionado" identifier="tituloSeleccionado"/>
      </statements>
    </methods>
    <methods strValue="public void setTitulo ( String titulo ) { this . titulo = titulo ; } ">
      <name strValue="setTitulo" identifier="setTitulo"/>
      <parameters type="//@types.9">
        <name strValue="titulo" identifier="titulo"/>
      </parameters>
      <statements xsi:type="javas:ExpressionStatement" strValue="this . titulo = titulo ">
        <expr xsi:type="javas:Assignment">
          <expr1 xsi:type="javas:FieldAccess">
            <expr xsi:type="javas:ThisExpression"/>
            <name strValue="titulo" identifier="titulo"/>
          </expr1>
          <expr2 xsi:type="javas:Name" strValue="titulo" identifier="titulo"/>
        </expr>
      </statements>
    </methods>
    <methods strValue="public String getTitulo ( ) { return titulo ; } " returnType="//@types.9">
      <name strValue="getTitulo" identifier="getTitulo"/>
      <statements xsi:type="javas:ReturnStatement">
        <expr xsi:type="javas:Name" strValue="titulo" identifier="titulo"/>
      </statements>
    </methods>
    <methods strValue="public void setContenido ( String contenido ) { this . contenido = contenido ; } ">
      <name strValue="setContenido" identifier="setContenido"/>
      <parameters type="//@types.9">
        <name strValue="contenido" identifier="contenido"/>
      </parameters>
      <statements xsi:type="javas:ExpressionStatement" strValue="this . contenido = contenido ">
        <expr xsi:type="javas:Assignment">
          <expr1 xsi:type="javas:FieldAccess">
            <expr xsi:type="javas:ThisExpression"/>
            <name strValue="contenido" identifier="contenido"/>
          </expr1>
          <expr2 xsi:type="javas:Name" strValue="contenido" identifier="contenido"/>
        </expr>
      </statements>
    </methods>
    <methods strValue="public String getContenido ( ) { return contenido ; } " returnType="//@types.9">
      <name strValue="getContenido" identifier="getContenido"/>
      <statements xsi:type="javas:ReturnStatement">
        <expr xsi:type="javas:Name" strValue="contenido" identifier="contenido"/>
      </statements>
    </methods>
    <methods strValue="public void setAutor ( String autor ) { this . autor = autor ; } ">
      <name strValue="setAutor" identifier="setAutor"/>
      <parameters type="//@types.9">
        <name strValue="autor" identifier="autor"/>
      </parameters>
      <statements xsi:type="javas:ExpressionStatement" strValue="this . autor = autor ">
        <expr xsi:type="javas:Assignment">
          <expr1 xsi:type="javas:FieldAccess">
            <expr xsi:type="javas:ThisExpression"/>
            <name strValue="autor" identifier="autor"/>
          </expr1>
          <expr2 xsi:type="javas:Name" strValue="autor" identifier="autor"/>
        </expr>
      </statements>
    </methods>
    <methods strValue="public String getAutor ( ) { return autor ; } " returnType="//@types.9">
      <name strValue="getAutor" identifier="getAutor"/>
      <statements xsi:type="javas:ReturnStatement">
        <expr xsi:type="javas:Name" strValue="autor" identifier="autor"/>
      </statements>
    </methods>
  </classes>
  <types type="Action"/>
  <types type="ActionForward"/>
  <types type="ActionMapping"/>
  <types type="ActionForm"/>
  <types type="HttpServletRequest"/>
  <types type="HttpServletResponse"/>
  <types type="BeanLogin"/>
  <types type="BeanTablon"/>
  <types type="Noticia"/>
  <types type="String"/>
  <types type="ActionErrors"/>
  <types type="boolean"/>
  <types type="ActionError"/>
</javas:JavaModel>
