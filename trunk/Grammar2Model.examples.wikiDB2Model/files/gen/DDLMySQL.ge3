grammar DDLMySQL;

options {
	backtrack=true;

	output=template;
}  


// Autogenerated import
@header {
	import gts.modernization.model.CST.impl.*;
	import gts.modernization.model.CST.*;
	import java.util.Iterator;
}

// Rules
data_definition returns [Node returnNode] 
: 	(data_definition_statementsGen+=data_definition_statements | data_manipulation_statementsGen+=data_manipulation_statements | administration_statementsGen+=administration_statements | utility_statementsGen+=utility_statements)* 
	{
		// Create return CST Node
		Node data_definitionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_definitionReturnNode.setKind("data_definition");
	
		// Create a special CST Node for terminal data_definition_statementsGen aggregation
		if($data_definition_statementsGen != null) {
	    for(int pos = 0; pos < $data_definition_statementsGen.size(); pos++ )  { 
		// No Terminal extractor
	    if($data_definition_statementsGen != null) {		
	    	DDLMySQLParser.data_definition_statements_return r = (DDLMySQLParser.data_definition_statements_return) $data_definition_statementsGen.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("data_definition_statements");
	    		data_definitionReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	
		// Create a special CST Node for terminal data_manipulation_statementsGen aggregation
		if($data_manipulation_statementsGen != null) {
	    for(int pos = 0; pos < $data_manipulation_statementsGen.size(); pos++ )  { 
		// No Terminal extractor
	    if($data_manipulation_statementsGen != null) {		
	    	DDLMySQLParser.data_manipulation_statements_return r = (DDLMySQLParser.data_manipulation_statements_return) $data_manipulation_statementsGen.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("data_manipulation_statements");
	    		data_definitionReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	
		// Create a special CST Node for terminal administration_statementsGen aggregation
		if($administration_statementsGen != null) {
	    for(int pos = 0; pos < $administration_statementsGen.size(); pos++ )  { 
		// No Terminal extractor
	    if($administration_statementsGen != null) {		
	    	DDLMySQLParser.administration_statements_return r = (DDLMySQLParser.administration_statements_return) $administration_statementsGen.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("administration_statements");
	    		data_definitionReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	
		// Create a special CST Node for terminal utility_statementsGen aggregation
		if($utility_statementsGen != null) {
	    for(int pos = 0; pos < $utility_statementsGen.size(); pos++ )  { 
		// No Terminal extractor
	    if($utility_statementsGen != null) {		
	    	DDLMySQLParser.utility_statements_return r = (DDLMySQLParser.utility_statements_return) $utility_statementsGen.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("utility_statements");
	    		data_definitionReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
		// Returns the Node with CST Leaves/Nodes
		$data_definition.returnNode = data_definitionReturnNode;
	}
	;

administration_statements returns [Node returnNode] 
:	set_definitionGen+=set_definition 
	{
		// Create return CST Node
		Node administration_statementsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		administration_statementsReturnNode.setKind("administration_statements");
	    // Create a CST Node
		if($set_definitionGen != null) {
	        for(Iterator it = $set_definitionGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.set_definition_return r = (DDLMySQLParser.set_definition_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("set_definition");
	            	administration_statementsReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$administration_statements.returnNode = administration_statementsReturnNode;
	}
	;

set_definition returns [Node returnNode] 
:	TK_0='SET' variable_assignmentGen+=variable_assignment (TK_1=',' variable_assignmentGen_1+=variable_assignment)* TK_2=';' 
	{
		// Create return CST Node
		Node set_definitionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		set_definitionReturnNode.setKind("set_definition");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		set_definitionReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Node
		if($variable_assignmentGen != null) {
	        for(Iterator it = $variable_assignmentGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.variable_assignment_return r = (DDLMySQLParser.variable_assignment_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("variable_assignment");
	            	set_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	
		// Create a special CST Node for terminal variable_assignmentGen_1 aggregation
		if($variable_assignmentGen_1 != null) {
	    for(int pos = 0; pos < $variable_assignmentGen_1.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		set_definitionReturnNode.getChildren().add(TK_1Leaf);
	 	}
		// No Terminal extractor
	    if($variable_assignmentGen_1 != null) {		
	    	DDLMySQLParser.variable_assignment_return r = (DDLMySQLParser.variable_assignment_return) $variable_assignmentGen_1.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("variable_assignment");
	    		set_definitionReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		set_definitionReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$set_definition.returnNode = set_definitionReturnNode;
	}
	; 

variable_assignment returns [Node returnNode] 
:	IDGen=ID TK_0='=' DQVALUEGen=DQVALUE 
	{
		// Create return CST Node
		Node variable_assignmentReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		variable_assignmentReturnNode.setKind("variable_assignment");
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			variable_assignmentReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Leaf
		if($DQVALUEGen != null) {
			Leaf DQVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DQVALUEGenLeaf.setKind("DQVALUE");
			DQVALUEGenLeaf.setValue($DQVALUEGen.text);
			DQVALUEGenLeaf.setPos(DQVALUEGen.getCharPositionInLine());
			DQVALUEGenLeaf.setLine(DQVALUEGen.getLine());
			variable_assignmentReturnNode.getChildren().add(DQVALUEGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$variable_assignment.returnNode = variable_assignmentReturnNode;
	}
    | 	(TK_0='GLOBAL' | TK_1='SESSION') IDGen=ID TK_2='=' DQVALUEGen=DQVALUE 
	{
		// Create return CST Node
		Node variable_assignmentReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		variable_assignmentReturnNode.setKind("variable_assignment");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			variable_assignmentReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($DQVALUEGen != null) {
			Leaf DQVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DQVALUEGenLeaf.setKind("DQVALUE");
			DQVALUEGenLeaf.setValue($DQVALUEGen.text);
			DQVALUEGenLeaf.setPos(DQVALUEGen.getCharPositionInLine());
			DQVALUEGenLeaf.setLine(DQVALUEGen.getLine());
			variable_assignmentReturnNode.getChildren().add(DQVALUEGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$variable_assignment.returnNode = variable_assignmentReturnNode;
	}
    | 	TK_0='@' TK_1='@' IDGen=ID TK_2='=' (DQVALUEGen=DQVALUE | TK_3='@' TK_4='@' IDGen_1=ID) 
	{
		// Create return CST Node
		Node variable_assignmentReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		variable_assignmentReturnNode.setKind("variable_assignment");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			variable_assignmentReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($DQVALUEGen != null) {
			Leaf DQVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DQVALUEGenLeaf.setKind("DQVALUE");
			DQVALUEGenLeaf.setValue($DQVALUEGen.text);
			DQVALUEGenLeaf.setPos(DQVALUEGen.getCharPositionInLine());
			DQVALUEGenLeaf.setLine(DQVALUEGen.getLine());
			variable_assignmentReturnNode.getChildren().add(DQVALUEGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		variable_assignmentReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			variable_assignmentReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$variable_assignment.returnNode = variable_assignmentReturnNode;
	}
    ;
    
utility_statements returns [Node returnNode] 
: 	use_statementGen+=use_statement 
	{
		// Create return CST Node
		Node utility_statementsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		utility_statementsReturnNode.setKind("utility_statements");
	    // Create a CST Node
		if($use_statementGen != null) {
	        for(Iterator it = $use_statementGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.use_statement_return r = (DDLMySQLParser.use_statement_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("use_statement");
	            	utility_statementsReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$utility_statements.returnNode = utility_statementsReturnNode;
	}
	;

use_statement returns [Node returnNode] 
: 	TK_0='USE' IDGen=ID TK_1=';' 
	{
		// Create return CST Node
		Node use_statementReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		use_statementReturnNode.setKind("use_statement");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		use_statementReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			use_statementReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		use_statementReturnNode.getChildren().add(TK_1Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$use_statement.returnNode = use_statementReturnNode;
	}
	;
	
data_definition_statements returns [Node returnNode] 
: 	create_databaseGen+=create_database 
	{
		// Create return CST Node
		Node data_definition_statementsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_definition_statementsReturnNode.setKind("data_definition_statements");
	    // Create a CST Node
		if($create_databaseGen != null) {
	        for(Iterator it = $create_databaseGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.create_database_return r = (DDLMySQLParser.create_database_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("create_database");
	            	data_definition_statementsReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$data_definition_statements.returnNode = data_definition_statementsReturnNode;
	}
	| 	create_tableGen+=create_table 
	{
		// Create return CST Node
		Node data_definition_statementsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_definition_statementsReturnNode.setKind("data_definition_statements");
	    // Create a CST Node
		if($create_tableGen != null) {
	        for(Iterator it = $create_tableGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.create_table_return r = (DDLMySQLParser.create_table_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("create_table");
	            	data_definition_statementsReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$data_definition_statements.returnNode = data_definition_statementsReturnNode;
	}
	|	drop_tableGen+=drop_table 
	{
		// Create return CST Node
		Node data_definition_statementsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_definition_statementsReturnNode.setKind("data_definition_statements");
	    // Create a CST Node
		if($drop_tableGen != null) {
	        for(Iterator it = $drop_tableGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.drop_table_return r = (DDLMySQLParser.drop_table_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("drop_table");
	            	data_definition_statementsReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$data_definition_statements.returnNode = data_definition_statementsReturnNode;
	}
	;	

create_database returns [Node returnNode] 
:	TK_0='CREATE' (TK_1='DATABASE' | TK_2='SCHEMA') (TK_3='IF' TK_4='NOT' TK_5='EXISTS')? IDGen=ID (create_specificationGen+=create_specification)? TK_6=';' 
	{
		// Create return CST Node
		Node create_databaseReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		create_databaseReturnNode.setKind("create_database");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		create_databaseReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		create_databaseReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		create_databaseReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		create_databaseReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		create_databaseReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		create_databaseReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			create_databaseReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Node
		if($create_specificationGen != null) {
	        for(Iterator it = $create_specificationGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.create_specification_return r = (DDLMySQLParser.create_specification_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("create_specification");
	            	create_databaseReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		create_databaseReturnNode.getChildren().add(TK_6Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$create_database.returnNode = create_databaseReturnNode;
	}
	;

create_specification returns [Node returnNode] 
:	(TK_0='DEFAULT')? TK_1='CHARACTER' TK_2='SET' (TK_3='=')? IDGen=ID 
	{
		// Create return CST Node
		Node create_specificationReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		create_specificationReturnNode.setKind("create_specification");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		create_specificationReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		create_specificationReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		create_specificationReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		create_specificationReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			create_specificationReturnNode.getChildren().add(IDGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$create_specification.returnNode = create_specificationReturnNode;
	}
  	|	(TK_0='DEFAULT')? TK_1='COLLATE' (TK_2='=')? IDGen=ID 
	{
		// Create return CST Node
		Node create_specificationReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		create_specificationReturnNode.setKind("create_specification");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		create_specificationReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		create_specificationReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		create_specificationReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			create_specificationReturnNode.getChildren().add(IDGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$create_specification.returnNode = create_specificationReturnNode;
	}
  	;

create_table returns [Node returnNode] 
:	TK_0='CREATE' (TK_1='TEMPORARY')? TK_2='TABLE' (TK_3='IF' TK_4='NOT' TK_5='EXISTS')? OQUOTEGen=OQUOTE IDGen=ID OQUOTEGen_1=OQUOTE
		TK_6='(' 
			create_definitionGen+=create_definition (TK_7=',' create_definitionGen_1+=create_definition)* 
		TK_8=')' (table_optionsGen+=table_options)* TK_9=';' 
	{
		// Create return CST Node
		Node create_tableReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		create_tableReturnNode.setKind("create_table");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		create_tableReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		create_tableReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		create_tableReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		create_tableReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		create_tableReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		create_tableReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a CST Leaf
		if($OQUOTEGen != null) {
			Leaf OQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGenLeaf.setKind("OQUOTE");
			OQUOTEGenLeaf.setValue($OQUOTEGen.text);
			OQUOTEGenLeaf.setPos(OQUOTEGen.getCharPositionInLine());
			OQUOTEGenLeaf.setLine(OQUOTEGen.getLine());
			create_tableReturnNode.getChildren().add(OQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			create_tableReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Leaf
		if($OQUOTEGen_1 != null) {
			Leaf OQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_1Leaf.setKind("OQUOTE");
			OQUOTEGen_1Leaf.setValue($OQUOTEGen_1.text);
			OQUOTEGen_1Leaf.setPos(OQUOTEGen_1.getCharPositionInLine());
			OQUOTEGen_1Leaf.setLine(OQUOTEGen_1.getLine());
			create_tableReturnNode.getChildren().add(OQUOTEGen_1Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		create_tableReturnNode.getChildren().add(TK_6Leaf);
	 	}
	    // Create a CST Node
		if($create_definitionGen != null) {
	        for(Iterator it = $create_definitionGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.create_definition_return r = (DDLMySQLParser.create_definition_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("create_definition");
	            	create_tableReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	
		// Create a special CST Node for terminal create_definitionGen_1 aggregation
		if($create_definitionGen_1 != null) {
	    for(int pos = 0; pos < $create_definitionGen_1.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_7 != null) {
			Leaf TK_7Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_7Leaf.setKind("TOKEN");
	 		TK_7Leaf.setValue($TK_7.text);
			TK_7Leaf.setPos(TK_7.getCharPositionInLine());
			TK_7Leaf.setLine(TK_7.getLine());
	 		create_tableReturnNode.getChildren().add(TK_7Leaf);
	 	}
		// No Terminal extractor
	    if($create_definitionGen_1 != null) {		
	    	DDLMySQLParser.create_definition_return r = (DDLMySQLParser.create_definition_return) $create_definitionGen_1.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("create_definition");
	    		create_tableReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_8 != null) {
			Leaf TK_8Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_8Leaf.setKind("TOKEN");
	 		TK_8Leaf.setValue($TK_8.text);
			TK_8Leaf.setPos(TK_8.getCharPositionInLine());
			TK_8Leaf.setLine(TK_8.getLine());
	 		create_tableReturnNode.getChildren().add(TK_8Leaf);
	 	}
	    // Create a CST Node
		if($table_optionsGen != null) {
	        for(Iterator it = $table_optionsGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.table_options_return r = (DDLMySQLParser.table_options_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("table_options");
	            	create_tableReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a Token CST Leaf	
	    if($TK_9 != null) {
			Leaf TK_9Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_9Leaf.setKind("TOKEN");
	 		TK_9Leaf.setValue($TK_9.text);
			TK_9Leaf.setPos(TK_9.getCharPositionInLine());
			TK_9Leaf.setLine(TK_9.getLine());
	 		create_tableReturnNode.getChildren().add(TK_9Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$create_table.returnNode = create_tableReturnNode;
	}
	;

create_definition returns [Node returnNode] 
: 	col_nameGen+=col_name column_definitionGen+=column_definition 
	{
		// Create return CST Node
		Node create_definitionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		create_definitionReturnNode.setKind("create_definition");
	    // Create a CST Node
		if($col_nameGen != null) {
	        for(Iterator it = $col_nameGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.col_name_return r = (DDLMySQLParser.col_name_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("col_name");
	            	create_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a CST Node
		if($column_definitionGen != null) {
	        for(Iterator it = $column_definitionGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.column_definition_return r = (DDLMySQLParser.column_definition_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("column_definition");
	            	create_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$create_definition.returnNode = create_definitionReturnNode;
	}
	| 	(TK_0='UNIQUE' | TK_1='PRIMARY' | TK_2='FULLTEXT')? (TK_3='INDEX' | TK_4='KEY') (OQUOTEGen=OQUOTE IDGen=ID OQUOTEGen_1=OQUOTE)? (index_typeGen+=index_type)? 
		(TK_5='(' index_col_nameGen+=index_col_name (TK_6=',' index_col_nameGen_1+=index_col_name)* TK_7=')')? (index_optionGen+=index_option)? 
	{
		// Create return CST Node
		Node create_definitionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		create_definitionReturnNode.setKind("create_definition");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		create_definitionReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		create_definitionReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		create_definitionReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		create_definitionReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		create_definitionReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($OQUOTEGen != null) {
			Leaf OQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGenLeaf.setKind("OQUOTE");
			OQUOTEGenLeaf.setValue($OQUOTEGen.text);
			OQUOTEGenLeaf.setPos(OQUOTEGen.getCharPositionInLine());
			OQUOTEGenLeaf.setLine(OQUOTEGen.getLine());
			create_definitionReturnNode.getChildren().add(OQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			create_definitionReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Leaf
		if($OQUOTEGen_1 != null) {
			Leaf OQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_1Leaf.setKind("OQUOTE");
			OQUOTEGen_1Leaf.setValue($OQUOTEGen_1.text);
			OQUOTEGen_1Leaf.setPos(OQUOTEGen_1.getCharPositionInLine());
			OQUOTEGen_1Leaf.setLine(OQUOTEGen_1.getLine());
			create_definitionReturnNode.getChildren().add(OQUOTEGen_1Leaf);
		}
	    // Create a CST Node
		if($index_typeGen != null) {
	        for(Iterator it = $index_typeGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.index_type_return r = (DDLMySQLParser.index_type_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("index_type");
	            	create_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		create_definitionReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a CST Node
		if($index_col_nameGen != null) {
	        for(Iterator it = $index_col_nameGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.index_col_name_return r = (DDLMySQLParser.index_col_name_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("index_col_name");
	            	create_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	
		// Create a special CST Node for terminal index_col_nameGen_1 aggregation
		if($index_col_nameGen_1 != null) {
	    for(int pos = 0; pos < $index_col_nameGen_1.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		create_definitionReturnNode.getChildren().add(TK_6Leaf);
	 	}
		// No Terminal extractor
	    if($index_col_nameGen_1 != null) {		
	    	DDLMySQLParser.index_col_name_return r = (DDLMySQLParser.index_col_name_return) $index_col_nameGen_1.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("index_col_name");
	    		create_definitionReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_7 != null) {
			Leaf TK_7Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_7Leaf.setKind("TOKEN");
	 		TK_7Leaf.setValue($TK_7.text);
			TK_7Leaf.setPos(TK_7.getCharPositionInLine());
			TK_7Leaf.setLine(TK_7.getLine());
	 		create_definitionReturnNode.getChildren().add(TK_7Leaf);
	 	}
	    // Create a CST Node
		if($index_optionGen != null) {
	        for(Iterator it = $index_optionGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.index_option_return r = (DDLMySQLParser.index_option_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("index_option");
	            	create_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$create_definition.returnNode = create_definitionReturnNode;
	} 
	;
	
column_definition returns [Node returnNode] 
: 	data_typeGen+=data_type (TK_0='NOT')? (TK_1='NULL')? (TK_2='DEFAULT' (IDGen=ID | QVALUEGen=QVALUE | TK_3='NULL'))? (TK_4='ON' (TK_5='UPDATE' | TK_6='DELETE') IDGen_1=ID)?
      	(TK_7='AUTO_INCREMENT')? ((TK_8='UNIQUE' | TK_9='PRIMARY') TK_10='KEY')?
      	(TK_11='COMMENT' IDGen_2=ID)?
      	(TK_12='COLUMN_FORMAT' (TK_13='FIXED' | TK_14='DYNAMIC' | TK_15='DEFAULT'))?
      	(TK_16='STORAGE' (TK_17='DISK'|TK_18='DEFAULT'))? // Falta 'MEMORY' dentro del OR
      	(reference_definitionGen+=reference_definition)? 
	{
		// Create return CST Node
		Node column_definitionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		column_definitionReturnNode.setKind("column_definition");
	    // Create a CST Node
		if($data_typeGen != null) {
	        for(Iterator it = $data_typeGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.data_type_return r = (DDLMySQLParser.data_type_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("data_type");
	            	column_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			column_definitionReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Leaf
		if($QVALUEGen != null) {
			Leaf QVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			QVALUEGenLeaf.setKind("QVALUE");
			QVALUEGenLeaf.setValue($QVALUEGen.text);
			QVALUEGenLeaf.setPos(QVALUEGen.getCharPositionInLine());
			QVALUEGenLeaf.setLine(QVALUEGen.getLine());
			column_definitionReturnNode.getChildren().add(QVALUEGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_6Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			column_definitionReturnNode.getChildren().add(IDGen_1Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_7 != null) {
			Leaf TK_7Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_7Leaf.setKind("TOKEN");
	 		TK_7Leaf.setValue($TK_7.text);
			TK_7Leaf.setPos(TK_7.getCharPositionInLine());
			TK_7Leaf.setLine(TK_7.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_7Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_8 != null) {
			Leaf TK_8Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_8Leaf.setKind("TOKEN");
	 		TK_8Leaf.setValue($TK_8.text);
			TK_8Leaf.setPos(TK_8.getCharPositionInLine());
			TK_8Leaf.setLine(TK_8.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_8Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_9 != null) {
			Leaf TK_9Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_9Leaf.setKind("TOKEN");
	 		TK_9Leaf.setValue($TK_9.text);
			TK_9Leaf.setPos(TK_9.getCharPositionInLine());
			TK_9Leaf.setLine(TK_9.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_9Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_10 != null) {
			Leaf TK_10Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_10Leaf.setKind("TOKEN");
	 		TK_10Leaf.setValue($TK_10.text);
			TK_10Leaf.setPos(TK_10.getCharPositionInLine());
			TK_10Leaf.setLine(TK_10.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_10Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_11 != null) {
			Leaf TK_11Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_11Leaf.setKind("TOKEN");
	 		TK_11Leaf.setValue($TK_11.text);
			TK_11Leaf.setPos(TK_11.getCharPositionInLine());
			TK_11Leaf.setLine(TK_11.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_11Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_2 != null) {
			Leaf IDGen_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_2Leaf.setKind("ID");
			IDGen_2Leaf.setValue($IDGen_2.text);
			IDGen_2Leaf.setPos(IDGen_2.getCharPositionInLine());
			IDGen_2Leaf.setLine(IDGen_2.getLine());
			column_definitionReturnNode.getChildren().add(IDGen_2Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_12 != null) {
			Leaf TK_12Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_12Leaf.setKind("TOKEN");
	 		TK_12Leaf.setValue($TK_12.text);
			TK_12Leaf.setPos(TK_12.getCharPositionInLine());
			TK_12Leaf.setLine(TK_12.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_12Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_13 != null) {
			Leaf TK_13Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_13Leaf.setKind("TOKEN");
	 		TK_13Leaf.setValue($TK_13.text);
			TK_13Leaf.setPos(TK_13.getCharPositionInLine());
			TK_13Leaf.setLine(TK_13.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_13Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_14 != null) {
			Leaf TK_14Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_14Leaf.setKind("TOKEN");
	 		TK_14Leaf.setValue($TK_14.text);
			TK_14Leaf.setPos(TK_14.getCharPositionInLine());
			TK_14Leaf.setLine(TK_14.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_14Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_15 != null) {
			Leaf TK_15Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_15Leaf.setKind("TOKEN");
	 		TK_15Leaf.setValue($TK_15.text);
			TK_15Leaf.setPos(TK_15.getCharPositionInLine());
			TK_15Leaf.setLine(TK_15.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_15Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_16 != null) {
			Leaf TK_16Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_16Leaf.setKind("TOKEN");
	 		TK_16Leaf.setValue($TK_16.text);
			TK_16Leaf.setPos(TK_16.getCharPositionInLine());
			TK_16Leaf.setLine(TK_16.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_16Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_17 != null) {
			Leaf TK_17Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_17Leaf.setKind("TOKEN");
	 		TK_17Leaf.setValue($TK_17.text);
			TK_17Leaf.setPos(TK_17.getCharPositionInLine());
			TK_17Leaf.setLine(TK_17.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_17Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_18 != null) {
			Leaf TK_18Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_18Leaf.setKind("TOKEN");
	 		TK_18Leaf.setValue($TK_18.text);
			TK_18Leaf.setPos(TK_18.getCharPositionInLine());
			TK_18Leaf.setLine(TK_18.getLine());
	 		column_definitionReturnNode.getChildren().add(TK_18Leaf);
	 	}
	    // Create a CST Node
		if($reference_definitionGen != null) {
	        for(Iterator it = $reference_definitionGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.reference_definition_return r = (DDLMySQLParser.reference_definition_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("reference_definition");
	            	column_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$column_definition.returnNode = column_definitionReturnNode;
	}
	;
	
index_col_name returns [Node returnNode] 
:	col_nameGen+=col_name (TK_0='(' NUMBERGen=NUMBER TK_1=')')? (TK_2='ASC' | TK_3='DESC')? 
	{
		// Create return CST Node
		Node index_col_nameReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		index_col_nameReturnNode.setKind("index_col_name");
	    // Create a CST Node
		if($col_nameGen != null) {
	        for(Iterator it = $col_nameGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.col_name_return r = (DDLMySQLParser.col_name_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("col_name");
	            	index_col_nameReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		index_col_nameReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			index_col_nameReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		index_col_nameReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		index_col_nameReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		index_col_nameReturnNode.getChildren().add(TK_3Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$index_col_name.returnNode = index_col_nameReturnNode;
	}
	;

index_type returns [Node returnNode] 
:	TK_0='USING' (TK_1='BTREE' | TK_2='HASH' | TK_3='RTREE') 
	{
		// Create return CST Node
		Node index_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		index_typeReturnNode.setKind("index_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		index_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		index_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		index_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		index_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$index_type.returnNode = index_typeReturnNode;
	}
	;
	
index_option returns [Node returnNode] 
:	TK_0='KEY_BLOCK_SIZE' (TK_1='=')? NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node index_optionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		index_optionReturnNode.setKind("index_option");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		index_optionReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		index_optionReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			index_optionReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$index_option.returnNode = index_optionReturnNode;
	}
  	| 	index_typeGen+=index_type 
	{
		// Create return CST Node
		Node index_optionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		index_optionReturnNode.setKind("index_option");
	    // Create a CST Node
		if($index_typeGen != null) {
	        for(Iterator it = $index_typeGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.index_type_return r = (DDLMySQLParser.index_type_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("index_type");
	            	index_optionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$index_option.returnNode = index_optionReturnNode;
	}
  	| 	TK_0='WITH' TK_1='PARSER' OQUOTEGen=OQUOTE IDGen=ID OQUOTEGen_1=OQUOTE 
	{
		// Create return CST Node
		Node index_optionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		index_optionReturnNode.setKind("index_option");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		index_optionReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		index_optionReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($OQUOTEGen != null) {
			Leaf OQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGenLeaf.setKind("OQUOTE");
			OQUOTEGenLeaf.setValue($OQUOTEGen.text);
			OQUOTEGenLeaf.setPos(OQUOTEGen.getCharPositionInLine());
			OQUOTEGenLeaf.setLine(OQUOTEGen.getLine());
			index_optionReturnNode.getChildren().add(OQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			index_optionReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Leaf
		if($OQUOTEGen_1 != null) {
			Leaf OQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_1Leaf.setKind("OQUOTE");
			OQUOTEGen_1Leaf.setValue($OQUOTEGen_1.text);
			OQUOTEGen_1Leaf.setPos(OQUOTEGen_1.getCharPositionInLine());
			OQUOTEGen_1Leaf.setLine(OQUOTEGen_1.getLine());
			index_optionReturnNode.getChildren().add(OQUOTEGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$index_option.returnNode = index_optionReturnNode;
	}
	;

data_type returns [Node returnNode] 
:	TK_0='BIT' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='TINYINT' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='SMALLINT' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='MEDIUMINT' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='INT' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='INTEGER' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='BIGINT' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='REAL' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
 	| 	TK_0='DOUBLE' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
 	| 	TK_0='FLOAT' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='UNSIGNED')? (TK_4='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='DECIMAL' (TK_1='(' NUMBERGen=NUMBER (TK_2=',' NUMBERGen_1=NUMBER)? TK_3=')')? (TK_4='UNSIGNED')? (TK_5='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen_1 != null) {
			Leaf NUMBERGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGen_1Leaf.setKind("NUMBER");
			NUMBERGen_1Leaf.setValue($NUMBERGen_1.text);
			NUMBERGen_1Leaf.setPos(NUMBERGen_1.getCharPositionInLine());
			NUMBERGen_1Leaf.setLine(NUMBERGen_1.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGen_1Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		data_typeReturnNode.getChildren().add(TK_5Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='NUMERIC' (TK_1='(' NUMBERGen=NUMBER (TK_2=',' NUMBERGen_1=NUMBER)?TK_3=')')? (TK_4='UNSIGNED')? (TK_5='ZEROFILL')? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen_1 != null) {
			Leaf NUMBERGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGen_1Leaf.setKind("NUMBER");
			NUMBERGen_1Leaf.setValue($NUMBERGen_1.text);
			NUMBERGen_1Leaf.setPos(NUMBERGen_1.getCharPositionInLine());
			NUMBERGen_1Leaf.setLine(NUMBERGen_1.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGen_1Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		data_typeReturnNode.getChildren().add(TK_5Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='DATE' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='TIME' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='TIMESTAMP' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	|	TK_0='DATETIME' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='YEAR' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='CHAR' (TK_1='(' NUMBERGen=NUMBER TK_2=')')? (TK_3='CHARACTER' TK_4='SET' IDGen=ID)? (TK_5='COLLATE' IDGen_1=ID)? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			data_typeReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		data_typeReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			data_typeReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='VARCHAR' TK_1='(' NUMBERGen=NUMBER TK_2=')' (TK_3='CHARACTER' TK_4='SET' IDGen=ID)? (TK_5='COLLATE' IDGen_1=ID)? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			data_typeReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		data_typeReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			data_typeReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='BINARYTYPE' TK_1='(' NUMBERGen=NUMBER TK_2=')' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='VARBINARY' TK_1='(' NUMBERGen=NUMBER TK_2=')' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			data_typeReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='TINYBLOB' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='BLOB' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='MEDIUMBLOB' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='LONGBLOB' 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='TINYTEXT' (TK_1='BYNARY')? (TK_2='CHARACTER' TK_3='SET' IDGen=ID)? (TK_4='COLLATE' IDGen_1=ID)? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			data_typeReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			data_typeReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
   	| 	TK_0='TEXTVAR' (TK_1='BYNARY')? (TK_2='CHARACTER' TK_3='SET' IDGen=ID)? (TK_4='COLLATE' IDGen_1=ID)? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			data_typeReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			data_typeReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='MEDIUMTEXT' (TK_1='BYNARY')? (TK_2='CHARACTER' TK_3='SET' IDGen=ID)? (TK_4='COLLATE' IDGen_1=ID)? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			data_typeReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			data_typeReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='LONGTEXT' (TK_1='BYNARY')? (TK_2='CHARACTER' TK_3='SET' IDGen=ID)? (TK_4='COLLATE' IDGen_1=ID)? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			data_typeReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			data_typeReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='ENUM' TK_1='(' QVALUEGen=QVALUE (TK_2=',' QVALUEGen_1_List+=QVALUE)* TK_3=')' (TK_4='CHARACTER' TK_5='SET' IDGen=ID)? (TK_6='COLLATE' IDGen_1=ID)? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($QVALUEGen != null) {
			Leaf QVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			QVALUEGenLeaf.setKind("QVALUE");
			QVALUEGenLeaf.setValue($QVALUEGen.text);
			QVALUEGenLeaf.setPos(QVALUEGen.getCharPositionInLine());
			QVALUEGenLeaf.setLine(QVALUEGen.getLine());
			data_typeReturnNode.getChildren().add(QVALUEGenLeaf);
		}
	
		// Create a special CST Node for terminal QVALUEGen_1_List aggregation
		if($QVALUEGen_1_List != null) {
	    for(int pos = 0; pos < $QVALUEGen_1_List.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Terminal extractor
	    if($QVALUEGen_1_List != null) {
		    Token t = (Token) $QVALUEGen_1_List.get(pos); 
		    Leaf QVALUEGen_1_ListLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			QVALUEGen_1_ListLeaf.setKind("QVALUE");
			QVALUEGen_1_ListLeaf.setValue(t.getText());
			QVALUEGen_1_ListLeaf.setPos(t.getCharPositionInLine());
			QVALUEGen_1_ListLeaf.setLine(t.getLine());
			data_typeReturnNode.getChildren().add(QVALUEGen_1_ListLeaf);
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		data_typeReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			data_typeReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		data_typeReturnNode.getChildren().add(TK_6Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			data_typeReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
  	| 	TK_0='SET' TK_1='(' QVALUEGen=QVALUE (TK_2=',' QVALUEGen_1_List+=QVALUE)* TK_3=')'  (TK_4='CHARACTER' TK_5='SET' IDGen=ID)? (TK_6='COLLATE' IDGen_1=ID)? 
	{
		// Create return CST Node
		Node data_typeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_typeReturnNode.setKind("data_type");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		data_typeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		data_typeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($QVALUEGen != null) {
			Leaf QVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			QVALUEGenLeaf.setKind("QVALUE");
			QVALUEGenLeaf.setValue($QVALUEGen.text);
			QVALUEGenLeaf.setPos(QVALUEGen.getCharPositionInLine());
			QVALUEGenLeaf.setLine(QVALUEGen.getLine());
			data_typeReturnNode.getChildren().add(QVALUEGenLeaf);
		}
	
		// Create a special CST Node for terminal QVALUEGen_1_List aggregation
		if($QVALUEGen_1_List != null) {
	    for(int pos = 0; pos < $QVALUEGen_1_List.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		data_typeReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Terminal extractor
	    if($QVALUEGen_1_List != null) {
		    Token t = (Token) $QVALUEGen_1_List.get(pos); 
		    Leaf QVALUEGen_1_ListLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			QVALUEGen_1_ListLeaf.setKind("QVALUE");
			QVALUEGen_1_ListLeaf.setValue(t.getText());
			QVALUEGen_1_ListLeaf.setPos(t.getCharPositionInLine());
			QVALUEGen_1_ListLeaf.setLine(t.getLine());
			data_typeReturnNode.getChildren().add(QVALUEGen_1_ListLeaf);
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		data_typeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		data_typeReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		data_typeReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			data_typeReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		data_typeReturnNode.getChildren().add(TK_6Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen_1 != null) {
			Leaf IDGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1Leaf.setKind("ID");
			IDGen_1Leaf.setValue($IDGen_1.text);
			IDGen_1Leaf.setPos(IDGen_1.getCharPositionInLine());
			IDGen_1Leaf.setLine(IDGen_1.getLine());
			data_typeReturnNode.getChildren().add(IDGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$data_type.returnNode = data_typeReturnNode;
	}
;

table_options returns [Node returnNode] 
:	TK_0='ENGINE' (TK_1='=')? IDGen=ID 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			table_optionsReturnNode.getChildren().add(IDGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='AUTO_INCREMENT' (TK_1='=')? NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			table_optionsReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='AVG_ROW_LENGTH' (TK_1='=')? NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			table_optionsReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	(TK_0='DEFAULT')? TK_1='CHARACTER' TK_2='SET' (TK_3='=')? IDGen=ID 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			table_optionsReturnNode.getChildren().add(IDGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	(TK_0='DEFAULT')? TK_1='CHARSET' (TK_2='=')? IDGen=ID 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			table_optionsReturnNode.getChildren().add(IDGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='CHECKSUM' (TK_1='=')? NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			table_optionsReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	(TK_0='DEFAULT')? TK_1='COLLATE' (TK_2='=')? IDGen=ID 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			table_optionsReturnNode.getChildren().add(IDGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	|	TK_0='COMMENT' (TK_1='=')? DOUBLEQUOTEGen=DOUBLEQUOTE DQVALUEGen=DQVALUE DOUBLEQUOTEGen_1=DOUBLEQUOTE 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($DOUBLEQUOTEGen != null) {
			Leaf DOUBLEQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DOUBLEQUOTEGenLeaf.setKind("DOUBLEQUOTE");
			DOUBLEQUOTEGenLeaf.setValue($DOUBLEQUOTEGen.text);
			DOUBLEQUOTEGenLeaf.setPos(DOUBLEQUOTEGen.getCharPositionInLine());
			DOUBLEQUOTEGenLeaf.setLine(DOUBLEQUOTEGen.getLine());
			table_optionsReturnNode.getChildren().add(DOUBLEQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($DQVALUEGen != null) {
			Leaf DQVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DQVALUEGenLeaf.setKind("DQVALUE");
			DQVALUEGenLeaf.setValue($DQVALUEGen.text);
			DQVALUEGenLeaf.setPos(DQVALUEGen.getCharPositionInLine());
			DQVALUEGenLeaf.setLine(DQVALUEGen.getLine());
			table_optionsReturnNode.getChildren().add(DQVALUEGenLeaf);
		}
	    // Create a CST Leaf
		if($DOUBLEQUOTEGen_1 != null) {
			Leaf DOUBLEQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DOUBLEQUOTEGen_1Leaf.setKind("DOUBLEQUOTE");
			DOUBLEQUOTEGen_1Leaf.setValue($DOUBLEQUOTEGen_1.text);
			DOUBLEQUOTEGen_1Leaf.setPos(DOUBLEQUOTEGen_1.getCharPositionInLine());
			DOUBLEQUOTEGen_1Leaf.setLine(DOUBLEQUOTEGen_1.getLine());
			table_optionsReturnNode.getChildren().add(DOUBLEQUOTEGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='CONNECTION' (TK_1='=')? DOUBLEQUOTEGen=DOUBLEQUOTE DQVALUEGen=DQVALUE DOUBLEQUOTEGen_1=DOUBLEQUOTE 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($DOUBLEQUOTEGen != null) {
			Leaf DOUBLEQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DOUBLEQUOTEGenLeaf.setKind("DOUBLEQUOTE");
			DOUBLEQUOTEGenLeaf.setValue($DOUBLEQUOTEGen.text);
			DOUBLEQUOTEGenLeaf.setPos(DOUBLEQUOTEGen.getCharPositionInLine());
			DOUBLEQUOTEGenLeaf.setLine(DOUBLEQUOTEGen.getLine());
			table_optionsReturnNode.getChildren().add(DOUBLEQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($DQVALUEGen != null) {
			Leaf DQVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DQVALUEGenLeaf.setKind("DQVALUE");
			DQVALUEGenLeaf.setValue($DQVALUEGen.text);
			DQVALUEGenLeaf.setPos(DQVALUEGen.getCharPositionInLine());
			DQVALUEGenLeaf.setLine(DQVALUEGen.getLine());
			table_optionsReturnNode.getChildren().add(DQVALUEGenLeaf);
		}
	    // Create a CST Leaf
		if($DOUBLEQUOTEGen_1 != null) {
			Leaf DOUBLEQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DOUBLEQUOTEGen_1Leaf.setKind("DOUBLEQUOTE");
			DOUBLEQUOTEGen_1Leaf.setValue($DOUBLEQUOTEGen_1.text);
			DOUBLEQUOTEGen_1Leaf.setPos(DOUBLEQUOTEGen_1.getCharPositionInLine());
			DOUBLEQUOTEGen_1Leaf.setLine(DOUBLEQUOTEGen_1.getLine());
			table_optionsReturnNode.getChildren().add(DOUBLEQUOTEGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	//| 	'DATA DIRECTORY' ('=')? DOUBLEQUOTE DQVALUE DOUBLEQUOTE
  	| 	TK_0='DELAY_KEY_WRITE' (TK_1='=')?  NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			table_optionsReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	|	TK_0='INDEX DIRECTORY' (TK_1='=')? DOUBLEQUOTEGen=DOUBLEQUOTE DQVALUEGen=DQVALUE DOUBLEQUOTEGen_1=DOUBLEQUOTE 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($DOUBLEQUOTEGen != null) {
			Leaf DOUBLEQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DOUBLEQUOTEGenLeaf.setKind("DOUBLEQUOTE");
			DOUBLEQUOTEGenLeaf.setValue($DOUBLEQUOTEGen.text);
			DOUBLEQUOTEGenLeaf.setPos(DOUBLEQUOTEGen.getCharPositionInLine());
			DOUBLEQUOTEGenLeaf.setLine(DOUBLEQUOTEGen.getLine());
			table_optionsReturnNode.getChildren().add(DOUBLEQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($DQVALUEGen != null) {
			Leaf DQVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DQVALUEGenLeaf.setKind("DQVALUE");
			DQVALUEGenLeaf.setValue($DQVALUEGen.text);
			DQVALUEGenLeaf.setPos(DQVALUEGen.getCharPositionInLine());
			DQVALUEGenLeaf.setLine(DQVALUEGen.getLine());
			table_optionsReturnNode.getChildren().add(DQVALUEGenLeaf);
		}
	    // Create a CST Leaf
		if($DOUBLEQUOTEGen_1 != null) {
			Leaf DOUBLEQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DOUBLEQUOTEGen_1Leaf.setKind("DOUBLEQUOTE");
			DOUBLEQUOTEGen_1Leaf.setValue($DOUBLEQUOTEGen_1.text);
			DOUBLEQUOTEGen_1Leaf.setPos(DOUBLEQUOTEGen_1.getCharPositionInLine());
			DOUBLEQUOTEGen_1Leaf.setLine(DOUBLEQUOTEGen_1.getLine());
			table_optionsReturnNode.getChildren().add(DOUBLEQUOTEGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='INSERT_METHOD' (TK_1='=')? (TK_2='NO' | TK_3='FIRST' | TK_4='LAST') 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='KEY_BLOCK_SIZE' (TK_1='=')? NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			table_optionsReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='MAX_ROWS' (TK_1='=')? NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			table_optionsReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='MIN_ROWS' (TK_1='=')? NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			table_optionsReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='PACK_KEYS' (TK_1='=')? (NUMBERGen=NUMBER | TK_2='DEFAULT') 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			table_optionsReturnNode.getChildren().add(NUMBERGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	//| 	'PASSWORD' ('=')? DOUBLEQUOTE DQVALUE DOUBLEQUOTE
  	| 	TK_0='ROW_FORMAT' (TK_1='=')? (TK_2='DEFAULT'|TK_3='DYNAMIC'|TK_4='FIXED'|TK_5='COMPRESSED'|TK_6='REDUNDANT'|TK_7='COMPACT') 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_6Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_7 != null) {
			Leaf TK_7Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_7Leaf.setKind("TOKEN");
	 		TK_7Leaf.setValue($TK_7.text);
			TK_7Leaf.setPos(TK_7.getCharPositionInLine());
			TK_7Leaf.setLine(TK_7.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_7Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
  	| 	TK_0='TABLESPACE' IDGen=ID (TK_1='STORAGE' (TK_2='DISK'|TK_3='DEFAULT'))? 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			table_optionsReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_3Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	} // Falta 'MEMORY' dentro del OR
  	| 	TK_0='UNION' (TK_1='=')? IDGen=ID (TK_2=',' IDGen_1_List+=ID)* 
	{
		// Create return CST Node
		Node table_optionsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		table_optionsReturnNode.setKind("table_options");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			table_optionsReturnNode.getChildren().add(IDGenLeaf);
		}
	
		// Create a special CST Node for terminal IDGen_1_List aggregation
		if($IDGen_1_List != null) {
	    for(int pos = 0; pos < $IDGen_1_List.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		table_optionsReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Terminal extractor
	    if($IDGen_1_List != null) {
		    Token t = (Token) $IDGen_1_List.get(pos); 
		    Leaf IDGen_1_ListLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1_ListLeaf.setKind("ID");
			IDGen_1_ListLeaf.setValue(t.getText());
			IDGen_1_ListLeaf.setPos(t.getCharPositionInLine());
			IDGen_1_ListLeaf.setLine(t.getLine());
			table_optionsReturnNode.getChildren().add(IDGen_1_ListLeaf);
		}
		}
		}
	
		// Returns the Node with CST Leaves/Nodes
		$table_options.returnNode = table_optionsReturnNode;
	}
	;


reference_definition returns [Node returnNode] 
:	TK_0='REFERENCES' OQUOTEGen=OQUOTE IDGen=ID OQUOTEGen_1=OQUOTE TK_1='(' index_col_nameGen+=index_col_name (TK_2=',' index_col_nameGen_1+=index_col_name)* TK_3=')'
      	(TK_4='MATCH' TK_5='FULL' | TK_6='MATCH' TK_7='PARTIAL' | TK_8='MATCH' TK_9='SIMPLE')?
      	(TK_10='ON' TK_11='DELETE' reference_optionGen+=reference_option)?
      	(TK_12='ON' TK_13='UPDATE' reference_optionGen_1+=reference_option)? 
	{
		// Create return CST Node
		Node reference_definitionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		reference_definitionReturnNode.setKind("reference_definition");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Leaf
		if($OQUOTEGen != null) {
			Leaf OQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGenLeaf.setKind("OQUOTE");
			OQUOTEGenLeaf.setValue($OQUOTEGen.text);
			OQUOTEGenLeaf.setPos(OQUOTEGen.getCharPositionInLine());
			OQUOTEGenLeaf.setLine(OQUOTEGen.getLine());
			reference_definitionReturnNode.getChildren().add(OQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			reference_definitionReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Leaf
		if($OQUOTEGen_1 != null) {
			Leaf OQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_1Leaf.setKind("OQUOTE");
			OQUOTEGen_1Leaf.setValue($OQUOTEGen_1.text);
			OQUOTEGen_1Leaf.setPos(OQUOTEGen_1.getCharPositionInLine());
			OQUOTEGen_1Leaf.setLine(OQUOTEGen_1.getLine());
			reference_definitionReturnNode.getChildren().add(OQUOTEGen_1Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Node
		if($index_col_nameGen != null) {
	        for(Iterator it = $index_col_nameGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.index_col_name_return r = (DDLMySQLParser.index_col_name_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("index_col_name");
	            	reference_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	
		// Create a special CST Node for terminal index_col_nameGen_1 aggregation
		if($index_col_nameGen_1 != null) {
	    for(int pos = 0; pos < $index_col_nameGen_1.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// No Terminal extractor
	    if($index_col_nameGen_1 != null) {		
	    	DDLMySQLParser.index_col_name_return r = (DDLMySQLParser.index_col_name_return) $index_col_nameGen_1.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("index_col_name");
	    		reference_definitionReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_6Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_7 != null) {
			Leaf TK_7Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_7Leaf.setKind("TOKEN");
	 		TK_7Leaf.setValue($TK_7.text);
			TK_7Leaf.setPos(TK_7.getCharPositionInLine());
			TK_7Leaf.setLine(TK_7.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_7Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_8 != null) {
			Leaf TK_8Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_8Leaf.setKind("TOKEN");
	 		TK_8Leaf.setValue($TK_8.text);
			TK_8Leaf.setPos(TK_8.getCharPositionInLine());
			TK_8Leaf.setLine(TK_8.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_8Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_9 != null) {
			Leaf TK_9Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_9Leaf.setKind("TOKEN");
	 		TK_9Leaf.setValue($TK_9.text);
			TK_9Leaf.setPos(TK_9.getCharPositionInLine());
			TK_9Leaf.setLine(TK_9.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_9Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_10 != null) {
			Leaf TK_10Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_10Leaf.setKind("TOKEN");
	 		TK_10Leaf.setValue($TK_10.text);
			TK_10Leaf.setPos(TK_10.getCharPositionInLine());
			TK_10Leaf.setLine(TK_10.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_10Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_11 != null) {
			Leaf TK_11Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_11Leaf.setKind("TOKEN");
	 		TK_11Leaf.setValue($TK_11.text);
			TK_11Leaf.setPos(TK_11.getCharPositionInLine());
			TK_11Leaf.setLine(TK_11.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_11Leaf);
	 	}
	    // Create a CST Node
		if($reference_optionGen != null) {
	        for(Iterator it = $reference_optionGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.reference_option_return r = (DDLMySQLParser.reference_option_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("reference_option");
	            	reference_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a Token CST Leaf	
	    if($TK_12 != null) {
			Leaf TK_12Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_12Leaf.setKind("TOKEN");
	 		TK_12Leaf.setValue($TK_12.text);
			TK_12Leaf.setPos(TK_12.getCharPositionInLine());
			TK_12Leaf.setLine(TK_12.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_12Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_13 != null) {
			Leaf TK_13Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_13Leaf.setKind("TOKEN");
	 		TK_13Leaf.setValue($TK_13.text);
			TK_13Leaf.setPos(TK_13.getCharPositionInLine());
			TK_13Leaf.setLine(TK_13.getLine());
	 		reference_definitionReturnNode.getChildren().add(TK_13Leaf);
	 	}
	    // Create a CST Node
		if($reference_optionGen_1 != null) {
	        for(Iterator it = $reference_optionGen_1.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.reference_option_return r = (DDLMySQLParser.reference_option_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("reference_option");
	            	reference_definitionReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$reference_definition.returnNode = reference_definitionReturnNode;
	}
    ;
reference_option returns [Node returnNode] 
:	TK_0='RESTRICT' 
	{
		// Create return CST Node
		Node reference_optionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		reference_optionReturnNode.setKind("reference_option");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		reference_optionReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$reference_option.returnNode = reference_optionReturnNode;
	} 
	| 	TK_0='CASCADE' 
	{
		// Create return CST Node
		Node reference_optionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		reference_optionReturnNode.setKind("reference_option");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		reference_optionReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$reference_option.returnNode = reference_optionReturnNode;
	} 
	| 	TK_0='SET' TK_1='NULL' 
	{
		// Create return CST Node
		Node reference_optionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		reference_optionReturnNode.setKind("reference_option");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		reference_optionReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		reference_optionReturnNode.getChildren().add(TK_1Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$reference_option.returnNode = reference_optionReturnNode;
	}
	| 	TK_0='NO' TK_1='ACTION' 
	{
		// Create return CST Node
		Node reference_optionReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		reference_optionReturnNode.setKind("reference_option");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		reference_optionReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		reference_optionReturnNode.getChildren().add(TK_1Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$reference_option.returnNode = reference_optionReturnNode;
	}
	;

drop_table returns [Node returnNode] 
: 	TK_0='DROP' (TK_1='TEMPORARY')? TK_2='TABLE' (TK_3='IF' TK_4='EXISTS')? OQUOTEGen=OQUOTE IDGen=ID OQUOTEGen_1=OQUOTE (TK_5=',' OQUOTEGen_2_List+=OQUOTE IDGen_1_List+=ID OQUOTEGen_3_List+=OQUOTE)*
    	(TK_6='RESTRICT' | TK_7='CASCADE')? TK_8=';' 
	{
		// Create return CST Node
		Node drop_tableReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		drop_tableReturnNode.setKind("drop_table");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a CST Leaf
		if($OQUOTEGen != null) {
			Leaf OQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGenLeaf.setKind("OQUOTE");
			OQUOTEGenLeaf.setValue($OQUOTEGen.text);
			OQUOTEGenLeaf.setPos(OQUOTEGen.getCharPositionInLine());
			OQUOTEGenLeaf.setLine(OQUOTEGen.getLine());
			drop_tableReturnNode.getChildren().add(OQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			drop_tableReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Leaf
		if($OQUOTEGen_1 != null) {
			Leaf OQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_1Leaf.setKind("OQUOTE");
			OQUOTEGen_1Leaf.setValue($OQUOTEGen_1.text);
			OQUOTEGen_1Leaf.setPos(OQUOTEGen_1.getCharPositionInLine());
			OQUOTEGen_1Leaf.setLine(OQUOTEGen_1.getLine());
			drop_tableReturnNode.getChildren().add(OQUOTEGen_1Leaf);
		}
	
		// Create a special CST Node for terminal OQUOTEGen_2_List aggregation
		if($OQUOTEGen_2_List != null) {
	    for(int pos = 0; pos < $OQUOTEGen_2_List.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_5Leaf);
	 	}
		// Terminal extractor
	    if($OQUOTEGen_2_List != null) {
		    Token t = (Token) $OQUOTEGen_2_List.get(pos); 
		    Leaf OQUOTEGen_2_ListLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_2_ListLeaf.setKind("OQUOTE");
			OQUOTEGen_2_ListLeaf.setValue(t.getText());
			OQUOTEGen_2_ListLeaf.setPos(t.getCharPositionInLine());
			OQUOTEGen_2_ListLeaf.setLine(t.getLine());
			drop_tableReturnNode.getChildren().add(OQUOTEGen_2_ListLeaf);
		}
		// Terminal extractor
	    if($IDGen_1_List != null) {
		    Token t = (Token) $IDGen_1_List.get(pos); 
		    Leaf IDGen_1_ListLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGen_1_ListLeaf.setKind("ID");
			IDGen_1_ListLeaf.setValue(t.getText());
			IDGen_1_ListLeaf.setPos(t.getCharPositionInLine());
			IDGen_1_ListLeaf.setLine(t.getLine());
			drop_tableReturnNode.getChildren().add(IDGen_1_ListLeaf);
		}
		// Terminal extractor
	    if($OQUOTEGen_3_List != null) {
		    Token t = (Token) $OQUOTEGen_3_List.get(pos); 
		    Leaf OQUOTEGen_3_ListLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_3_ListLeaf.setKind("OQUOTE");
			OQUOTEGen_3_ListLeaf.setValue(t.getText());
			OQUOTEGen_3_ListLeaf.setPos(t.getCharPositionInLine());
			OQUOTEGen_3_ListLeaf.setLine(t.getLine());
			drop_tableReturnNode.getChildren().add(OQUOTEGen_3_ListLeaf);
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_6Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_7 != null) {
			Leaf TK_7Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_7Leaf.setKind("TOKEN");
	 		TK_7Leaf.setValue($TK_7.text);
			TK_7Leaf.setPos(TK_7.getCharPositionInLine());
			TK_7Leaf.setLine(TK_7.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_7Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_8 != null) {
			Leaf TK_8Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_8Leaf.setKind("TOKEN");
	 		TK_8Leaf.setValue($TK_8.text);
			TK_8Leaf.setPos(TK_8.getCharPositionInLine());
			TK_8Leaf.setLine(TK_8.getLine());
	 		drop_tableReturnNode.getChildren().add(TK_8Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$drop_table.returnNode = drop_tableReturnNode;
	}
	;
	
data_manipulation_statements returns [Node returnNode] 
:	insert_statementGen+=insert_statement 
	{
		// Create return CST Node
		Node data_manipulation_statementsReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		data_manipulation_statementsReturnNode.setKind("data_manipulation_statements");
	    // Create a CST Node
		if($insert_statementGen != null) {
	        for(Iterator it = $insert_statementGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.insert_statement_return r = (DDLMySQLParser.insert_statement_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("insert_statement");
	            	data_manipulation_statementsReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$data_manipulation_statements.returnNode = data_manipulation_statementsReturnNode;
	}
	;

insert_statement returns [Node returnNode] 
: 	TK_0='INSERT' (TK_1='LOW_PRIORITY' | TK_2='DELAYED' | TK_3='HIGH_PRIORITY')? (TK_4='IGNORE')?
    	(TK_5='INTO')? OQUOTEGen=OQUOTE IDGen=ID OQUOTEGen_1=OQUOTE (TK_6='(' col_nameGen+=col_name (TK_7=',' col_nameGen_1+=col_name)* TK_8=')')?
    	(TK_9='VALUES') insert_valueGen+=insert_value (TK_10=',' insert_valueGen_1+=insert_value)* TK_11=';' 
	{
		// Create return CST Node
		Node insert_statementReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		insert_statementReturnNode.setKind("insert_statement");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_4Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_5 != null) {
			Leaf TK_5Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_5Leaf.setKind("TOKEN");
	 		TK_5Leaf.setValue($TK_5.text);
			TK_5Leaf.setPos(TK_5.getCharPositionInLine());
			TK_5Leaf.setLine(TK_5.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_5Leaf);
	 	}
	    // Create a CST Leaf
		if($OQUOTEGen != null) {
			Leaf OQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGenLeaf.setKind("OQUOTE");
			OQUOTEGenLeaf.setValue($OQUOTEGen.text);
			OQUOTEGenLeaf.setPos(OQUOTEGen.getCharPositionInLine());
			OQUOTEGenLeaf.setLine(OQUOTEGen.getLine());
			insert_statementReturnNode.getChildren().add(OQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			insert_statementReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Leaf
		if($OQUOTEGen_1 != null) {
			Leaf OQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_1Leaf.setKind("OQUOTE");
			OQUOTEGen_1Leaf.setValue($OQUOTEGen_1.text);
			OQUOTEGen_1Leaf.setPos(OQUOTEGen_1.getCharPositionInLine());
			OQUOTEGen_1Leaf.setLine(OQUOTEGen_1.getLine());
			insert_statementReturnNode.getChildren().add(OQUOTEGen_1Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_6 != null) {
			Leaf TK_6Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_6Leaf.setKind("TOKEN");
	 		TK_6Leaf.setValue($TK_6.text);
			TK_6Leaf.setPos(TK_6.getCharPositionInLine());
			TK_6Leaf.setLine(TK_6.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_6Leaf);
	 	}
	    // Create a CST Node
		if($col_nameGen != null) {
	        for(Iterator it = $col_nameGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.col_name_return r = (DDLMySQLParser.col_name_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("col_name");
	            	insert_statementReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	
		// Create a special CST Node for terminal col_nameGen_1 aggregation
		if($col_nameGen_1 != null) {
	    for(int pos = 0; pos < $col_nameGen_1.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_7 != null) {
			Leaf TK_7Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_7Leaf.setKind("TOKEN");
	 		TK_7Leaf.setValue($TK_7.text);
			TK_7Leaf.setPos(TK_7.getCharPositionInLine());
			TK_7Leaf.setLine(TK_7.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_7Leaf);
	 	}
		// No Terminal extractor
	    if($col_nameGen_1 != null) {		
	    	DDLMySQLParser.col_name_return r = (DDLMySQLParser.col_name_return) $col_nameGen_1.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("col_name");
	    		insert_statementReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_8 != null) {
			Leaf TK_8Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_8Leaf.setKind("TOKEN");
	 		TK_8Leaf.setValue($TK_8.text);
			TK_8Leaf.setPos(TK_8.getCharPositionInLine());
			TK_8Leaf.setLine(TK_8.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_8Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_9 != null) {
			Leaf TK_9Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_9Leaf.setKind("TOKEN");
	 		TK_9Leaf.setValue($TK_9.text);
			TK_9Leaf.setPos(TK_9.getCharPositionInLine());
			TK_9Leaf.setLine(TK_9.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_9Leaf);
	 	}
	    // Create a CST Node
		if($insert_valueGen != null) {
	        for(Iterator it = $insert_valueGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.insert_value_return r = (DDLMySQLParser.insert_value_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("insert_value");
	            	insert_statementReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	
		// Create a special CST Node for terminal insert_valueGen_1 aggregation
		if($insert_valueGen_1 != null) {
	    for(int pos = 0; pos < $insert_valueGen_1.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_10 != null) {
			Leaf TK_10Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_10Leaf.setKind("TOKEN");
	 		TK_10Leaf.setValue($TK_10.text);
			TK_10Leaf.setPos(TK_10.getCharPositionInLine());
			TK_10Leaf.setLine(TK_10.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_10Leaf);
	 	}
		// No Terminal extractor
	    if($insert_valueGen_1 != null) {		
	    	DDLMySQLParser.insert_value_return r = (DDLMySQLParser.insert_value_return) $insert_valueGen_1.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("insert_value");
	    		insert_statementReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_11 != null) {
			Leaf TK_11Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_11Leaf.setKind("TOKEN");
	 		TK_11Leaf.setValue($TK_11.text);
			TK_11Leaf.setPos(TK_11.getCharPositionInLine());
			TK_11Leaf.setLine(TK_11.getLine());
	 		insert_statementReturnNode.getChildren().add(TK_11Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$insert_statement.returnNode = insert_statementReturnNode;
	} // falta 'VALUE' en el primer parentesis
    ;

col_name returns [Node returnNode] 
:  	OQUOTEGen=OQUOTE IDGen=ID OQUOTEGen_1=OQUOTE 
	{
		// Create return CST Node
		Node col_nameReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		col_nameReturnNode.setKind("col_name");
	    // Create a CST Leaf
		if($OQUOTEGen != null) {
			Leaf OQUOTEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGenLeaf.setKind("OQUOTE");
			OQUOTEGenLeaf.setValue($OQUOTEGen.text);
			OQUOTEGenLeaf.setPos(OQUOTEGen.getCharPositionInLine());
			OQUOTEGenLeaf.setLine(OQUOTEGen.getLine());
			col_nameReturnNode.getChildren().add(OQUOTEGenLeaf);
		}
	    // Create a CST Leaf
		if($IDGen != null) {
			Leaf IDGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			IDGenLeaf.setKind("ID");
			IDGenLeaf.setValue($IDGen.text);
			IDGenLeaf.setPos(IDGen.getCharPositionInLine());
			IDGenLeaf.setLine(IDGen.getLine());
			col_nameReturnNode.getChildren().add(IDGenLeaf);
		}
	    // Create a CST Leaf
		if($OQUOTEGen_1 != null) {
			Leaf OQUOTEGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			OQUOTEGen_1Leaf.setKind("OQUOTE");
			OQUOTEGen_1Leaf.setValue($OQUOTEGen_1.text);
			OQUOTEGen_1Leaf.setPos(OQUOTEGen_1.getCharPositionInLine());
			OQUOTEGen_1Leaf.setLine(OQUOTEGen_1.getLine());
			col_nameReturnNode.getChildren().add(OQUOTEGen_1Leaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$col_name.returnNode = col_nameReturnNode;
	}
	;

insert_value returns [Node returnNode] 
:	TK_0='(' insert_dataGen+=insert_data (TK_1=',' insert_dataGen_1+=insert_data)* TK_2=')' 
	{
		// Create return CST Node
		Node insert_valueReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		insert_valueReturnNode.setKind("insert_value");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		insert_valueReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Node
		if($insert_dataGen != null) {
	        for(Iterator it = $insert_dataGen.iterator(); it.hasNext(); )  { 
	            DDLMySQLParser.insert_data_return r = (DDLMySQLParser.insert_data_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("insert_data");
	            	insert_valueReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	
		// Create a special CST Node for terminal insert_dataGen_1 aggregation
		if($insert_dataGen_1 != null) {
	    for(int pos = 0; pos < $insert_dataGen_1.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		insert_valueReturnNode.getChildren().add(TK_1Leaf);
	 	}
		// No Terminal extractor
	    if($insert_dataGen_1 != null) {		
	    	DDLMySQLParser.insert_data_return r = (DDLMySQLParser.insert_data_return) $insert_dataGen_1.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("insert_data");
	    		insert_valueReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}
	
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		insert_valueReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$insert_value.returnNode = insert_valueReturnNode;
	}
	;

insert_data returns [Node returnNode] 
:	QVALUEGen=QVALUE* 
	{
		// Create return CST Node
		Node insert_dataReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		insert_dataReturnNode.setKind("insert_data");
	    // Create a CST Leaf
		if($QVALUEGen != null) {
			Leaf QVALUEGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			QVALUEGenLeaf.setKind("QVALUE");
			QVALUEGenLeaf.setValue($QVALUEGen.text);
			QVALUEGenLeaf.setPos(QVALUEGen.getCharPositionInLine());
			QVALUEGenLeaf.setLine(QVALUEGen.getLine());
			insert_dataReturnNode.getChildren().add(QVALUEGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$insert_data.returnNode = insert_dataReturnNode;
	}
	| 	NUMBERGen=NUMBER 
	{
		// Create return CST Node
		Node insert_dataReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		insert_dataReturnNode.setKind("insert_data");
	    // Create a CST Leaf
		if($NUMBERGen != null) {
			Leaf NUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			NUMBERGenLeaf.setKind("NUMBER");
			NUMBERGenLeaf.setValue($NUMBERGen.text);
			NUMBERGenLeaf.setPos(NUMBERGen.getCharPositionInLine());
			NUMBERGenLeaf.setLine(NUMBERGen.getLine());
			insert_dataReturnNode.getChildren().add(NUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$insert_data.returnNode = insert_dataReturnNode;
	}
	|	DECNUMBERGen=DECNUMBER 
	{
		// Create return CST Node
		Node insert_dataReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		insert_dataReturnNode.setKind("insert_data");
	    // Create a CST Leaf
		if($DECNUMBERGen != null) {
			Leaf DECNUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			DECNUMBERGenLeaf.setKind("DECNUMBER");
			DECNUMBERGenLeaf.setValue($DECNUMBERGen.text);
			DECNUMBERGenLeaf.setPos(DECNUMBERGen.getCharPositionInLine());
			DECNUMBERGenLeaf.setLine(DECNUMBERGen.getLine());
			insert_dataReturnNode.getChildren().add(DECNUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$insert_data.returnNode = insert_dataReturnNode;
	}
	| 	HEXNUMBERGen=HEXNUMBER 
	{
		// Create return CST Node
		Node insert_dataReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		insert_dataReturnNode.setKind("insert_data");
	    // Create a CST Leaf
		if($HEXNUMBERGen != null) {
			Leaf HEXNUMBERGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			HEXNUMBERGenLeaf.setKind("HEXNUMBER");
			HEXNUMBERGenLeaf.setValue($HEXNUMBERGen.text);
			HEXNUMBERGenLeaf.setPos(HEXNUMBERGen.getCharPositionInLine());
			HEXNUMBERGenLeaf.setLine(HEXNUMBERGen.getLine());
			insert_dataReturnNode.getChildren().add(HEXNUMBERGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$insert_data.returnNode = insert_dataReturnNode;
	}
	| 	TK_0='DEFAULT' 
	{
		// Create return CST Node
		Node insert_dataReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		insert_dataReturnNode.setKind("insert_data");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		insert_dataReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$insert_data.returnNode = insert_dataReturnNode;
	}
	| 	TK_0='NULL' 
	{
		// Create return CST Node
		Node insert_dataReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		insert_dataReturnNode.setKind("insert_data");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		insert_dataReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$insert_data.returnNode = insert_dataReturnNode;
	}
	;
	
DOT			: '\u002E';
SLASH		: '\u005C';
OQUOTE		: '\u0060';
QUOTE		: '\u0027';
QVALUE 		: QUOTE (options {greedy=false;} : .)* QUOTE;
DOUBLEQUOTE	: '\u0022';
DQVALUE		: DOUBLEQUOTE (options {greedy=false;} : .)* DOUBLEQUOTE;
NUMBER 		: ('+' | '-')? ('0'..'9')+;
DECNUMBER	: ('+' | '-')?  NUMBER DOT NUMBER+;
HEXNUMBER	: ('+' | '-')?  '0' ('x' | 'X') ('0'..'9' | 'a'..'f' | 'A'..'F')+;
ID 			: ('a'..'z' | 'A'..'Z') ( 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_' | '$' | '#' | SLASH | '-')*;
IDNUMBER 	: ('a'..'z' | 'A'..'Z' | '0'..'9') ( 'a' .. 'z' | 'A' .. 'Z' | '0' .. '9' | '_' | '$' | '#' )*;

WS 			: (' ' | '\t' | '\n' | '\r')+ {$channel=HIDDEN;};
ML_COMMENT:
	'/*' (options {greedy=false;} : .)* '*/' (';')? { $channel=HIDDEN;}
	;
	
OL_COMMENT: '--' ( options {greedy=false;} : . )* '\n'+ { $channel=HIDDEN;}
	;
