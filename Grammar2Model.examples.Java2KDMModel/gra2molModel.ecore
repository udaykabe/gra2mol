<?xml version="1.0" encoding="UTF-8"?>
<Core:ViewDefinition xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:Core="http://gts.inf.um.es/modernization/gra2mol/core" xmlns:Query="http://gts.inf.um.es/modernization/gra2mol/query">
  <hashes name="exportAtt">
    <content fromElement="public" toElement="public"/>
    <content fromElement="protected" toElement="protected"/>
    <content fromElement="private" toElement="private"/>
    <content fromElement="final" toElement="final"/>
    <content fromElement="DEFAULT" fromElementType="DEFAULT" toElement="unknown"/>
  </hashes>
  <rules name="createSegment">
    <from name="compilationUnit"/>
    <to name="kdm::kdm::Segment"/>
    <queries variable="cu">
      <filter type="INDIRECT">
        <element name="compilationUnit" mark="true"/>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value value="StrutsSegment"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="model">
        <value type="QUERY_RESULT" value="cu"/>
      </inits>
    </inits>
  </rules>
  <rules name="createModel">
    <from name="compilationUnit" alias="cu"/>
    <to name="code::CodeModel"/>
    <queries variable="classes">
      <filter>
        <element name="cu"/>
        <next type="INDIRECT">
          <element name="normalClassDeclaration" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="superclasses">
      <filter>
        <element name="cu"/>
        <next type="INDIRECT">
          <element name="normalClassDeclaration"/>
          <expression xsi:type="Query:FilterExpressionComplex">
            <expressions xsi:type="Query:FilterExpressionUnit" operation="EXISTS">
              <element name="TOKEN" position="1"/>
            </expressions>
            <expressions xsi:type="Query:FilterExpressionUnit">
              <element name="TOKEN" position="1"/>
              <parameters value="extends"/>
            </expressions>
          </expression>
          <next>
            <element name="type" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="createdclasses">
      <filter>
        <element name="cu"/>
        <next type="INDIRECT">
          <element name="primary" mark="true"/>
          <expression xsi:type="Query:FilterExpressionUnit">
            <element name="TOKEN"/>
            <parameters value="new"/>
          </expression>
        </next>
      </filter>
    </queries>
    <queries variable="typeDecls">
      <filter>
        <element name="compilationUnit"/>
        <next type="INDIRECT" operation="POSITION">
          <element name="typeDeclaration" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value value="codeModel"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="typeDecls"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="classes"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="superclasses"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="createdclasses"/>
      </inits>
    </inits>
  </rules>
  <rules name="createLanguageUnit">
    <from name="typeDeclaration" alias="td"/>
    <to name="code::LanguageUnit"/>
    <queries variable="ts">
      <filter>
        <element name="td"/>
        <next type="INDIRECT">
          <element name="type" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value value="Java Datatypes"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="ts"/>
      </inits>
    </inits>
  </rules>
  <rules name="StringType">
    <from name="type" alias="t">
      <filter operation="UNIQUE">
        <element name="type" mark="true"/>
        <expression xsi:type="Query:FilterExpressionComplex">
          <expressions xsi:type="Query:FilterExpressionUnit" operation="EXISTS">
            <element name="Identifier"/>
          </expressions>
          <expressions xsi:type="Query:FilterExpressionUnit">
            <element name="Identifier"/>
            <parameters value="String"/>
          </expressions>
        </expression>
      </filter>
    </from>
    <to name="code::StringType"/>
    <inits/>
  </rules>
  <rules name="BooleanType">
    <from name="type" alias="t">
      <filter operation="UNIQUE">
        <element name="type" mark="true"/>
        <next>
          <element name="primitiveType"/>
          <expression xsi:type="Query:FilterExpressionUnit">
            <element name="TOKEN"/>
            <parameters value="boolean"/>
          </expression>
        </next>
      </filter>
    </from>
    <to name="code::BooleanType"/>
    <inits/>
  </rules>
  <rules name="createClass">
    <from name="normalClassDeclaration" alias="nc"/>
    <to name="code::ClassUnit"/>
    <context>createModel</context>
    <context>extendsPart</context>
    <queries variable="elements">
      <filter>
        <element name="nc"/>
        <next type="INDIRECT">
          <element name="classBodyDeclaration" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="extends">
      <filter>
        <element name="nc" mark="true"/>
        <expression xsi:type="Query:FilterExpressionComplex">
          <expressions xsi:type="Query:FilterExpressionUnit" operation="EXISTS">
            <element name="TOKEN" position="1"/>
          </expressions>
          <expressions xsi:type="Query:FilterExpressionUnit">
            <element name="TOKEN" position="1"/>
            <parameters value="extends"/>
          </expressions>
        </expression>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="codeRelation">
        <value type="QUERY_RESULT" value="extends"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value type="QUERY_ACCESS" value="nc" extension="Identifier"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="elements"/>
      </inits>
    </inits>
  </rules>
  <rules name="createEmptyClass">
    <from name="type" alias="t"/>
    <to name="code::ClassUnit"/>
    <context>createModel</context>
    <context>extendsPart</context>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value type="QUERY_ACCESS" value="t" extension="Identifier"/>
      </inits>
    </inits>
  </rules>
  <rules name="createEmptyClass2">
    <from name="primary" alias="p"/>
    <to name="code::ClassUnit"/>
    <context>createModel</context>
    <context>createsobjectcreation</context>
    <queries variable="n">
      <filter>
        <element name="p"/>
        <next>
          <element name="creator"/>
          <next>
            <element name="createdName" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value type="QUERY_ACCESS" value="n" extension="Identifier"/>
      </inits>
    </inits>
  </rules>
  <rules name="extendsPart">
    <from name="normalClassDeclaration" alias="ncd">
      <filter>
        <element name="normalClassDeclaration" mark="true"/>
        <expression xsi:type="Query:FilterExpressionComplex">
          <expressions xsi:type="Query:FilterExpressionUnit" operation="EXISTS">
            <element name="TOKEN" position="1"/>
          </expressions>
          <expressions xsi:type="Query:FilterExpressionUnit">
            <element name="TOKEN" position="1"/>
            <parameters value="extends"/>
          </expressions>
        </expression>
      </filter>
    </from>
    <to name="code::Extends"/>
    <context>createClass</context>
    <queries variable="father">
      <filter>
        <element name="ncd"/>
        <next>
          <element name="type" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="class">
      <filter>
        <element name="compilationUnit"/>
        <next type="INDIRECT">
          <element name="normalClassDeclaration" mark="true"/>
          <expression xsi:type="Query:FilterExpressionUnit">
            <element name="Identifier"/>
            <parameters value="father" valuePosition="0" extension="Identifier" extensionPosition="0"
                type="QUERY_ACCESS"/>
          </expression>
        </next>
      </filter>
    </queries>
    <queries variable="extendedClass">
      <filter>
        <element name="ncd"/>
        <next>
          <element name="type" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="from">
        <value type="QUERY_RESULT" value="ncd"/>
      </inits>
      <inits xsi:type="Core:InitUnitGroup" type="IF">
        <inits xsi:type="Core:InitUnitElement" element="to">
          <value type="QUERY_RESULT" value="class"/>
        </inits>
        <expression xsi:type="Query:FilterExpressionUnit" operation="HASRESULTS">
          <element name="class"/>
        </expression>
      </inits>
      <inits xsi:type="Core:InitUnitGroup" type="IF">
        <inits xsi:type="Core:InitUnitElement" element="to">
          <value type="QUERY_RESULT" value="extendedClass"/>
        </inits>
        <expression xsi:type="Query:FilterExpressionComplex" type="NOT">
          <expressions xsi:type="Query:FilterExpressionUnit" operation="HASRESULTS">
            <element name="class"/>
          </expressions>
        </expression>
      </inits>
    </inits>
  </rules>
  <rules name="field">
    <from name="classBodyDeclaration" alias="cbd">
      <filter>
        <element name="classBodyDeclaration" mark="true"/>
        <next type="INDIRECT">
          <element name="fieldDeclaration"/>
        </next>
      </filter>
    </from>
    <to name="code::MemberUnit"/>
    <queries variable="vd">
      <filter>
        <element name="cbd"/>
        <next type="INDIRECT" operation="POSITION">
          <element name="variableDeclarator" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="md">
      <filter>
        <element name="cbd"/>
        <next operation="POSITION">
          <element name="modifier" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value type="QUERY_ACCESS" value="vd" extension="Identifier"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="export">
        <value type="HASH" value="exportAtt">
          <params value="md" valuePosition="0" extension="TOKEN" extensionPosition="0"
              type="QUERY_ACCESS"/>
        </value>
      </inits>
    </inits>
  </rules>
  <rules name="typedMethod">
    <from name="classBodyDeclaration" alias="cbd">
      <filter>
        <element name="classBodyDeclaration" mark="true"/>
        <next>
          <element name="memberDecl"/>
          <next>
            <element name="methodDeclaration"/>
          </next>
        </next>
      </filter>
    </from>
    <to name="code::MethodUnit"/>
    <queries variable="n">
      <filter>
        <element name="cbd"/>
        <next>
          <element name="memberDecl"/>
          <next>
            <element name="methodDeclaration" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="va">
      <filter>
        <element name="cbd"/>
        <next type="INDIRECT">
          <element name="blockStatement"/>
          <next>
            <element name="localVariableDeclaration" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="iva">
      <filter>
        <element name="cbd"/>
        <next type="INDIRECT">
          <element name="blockStatement"/>
          <next>
            <element name="localVariableDeclaration"/>
            <next type="INDIRECT">
              <element name="variableInitializer" mark="true"/>
            </next>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="st">
      <filter>
        <element name="cbd"/>
        <next type="INDIRECT">
          <element name="blockStatement"/>
          <next>
            <element name="statement" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="entry">
      <filter>
        <element name="cbd"/>
        <next>
          <element name="memberDecl" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value type="QUERY_ACCESS" value="n" extension="Identifier"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="n"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="va"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="iva"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="st"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="entryFlow">
        <value type="QUERY_RESULT" value="entry"/>
      </inits>
    </inits>
  </rules>
  <rules name="voidMethod">
    <from name="classBodyDeclaration" alias="cbd">
      <filter>
        <element name="classBodyDeclaration" mark="true"/>
        <next>
          <element name="memberDecl"/>
          <expression xsi:type="Query:FilterExpressionUnit" operation="EXISTS">
            <element name="Identifier"/>
          </expression>
        </next>
      </filter>
    </from>
    <to name="code::MethodUnit"/>
    <queries variable="n">
      <filter>
        <element name="cbd"/>
        <next>
          <element name="memberDecl" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="p" cast="methodDeclaration">
      <filter>
        <element name="cbd"/>
        <next>
          <element name="memberDecl" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="va">
      <filter>
        <element name="cbd"/>
        <next type="INDIRECT">
          <element name="blockStatement"/>
          <next>
            <element name="localVariableDeclaration" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="iva">
      <filter>
        <element name="cbd"/>
        <next type="INDIRECT">
          <element name="blockStatement"/>
          <next>
            <element name="localVariableDeclaration"/>
            <next type="INDIRECT">
              <element name="variableInitializer" mark="true"/>
            </next>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="st">
      <filter>
        <element name="cbd"/>
        <next type="INDIRECT">
          <element name="blockStatement"/>
          <next>
            <element name="statement" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value type="QUERY_ACCESS" value="n" extension="Identifier"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="p"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="va"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="iva"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="codeElement">
        <value type="QUERY_RESULT" value="st"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="entryFlow">
        <value type="QUERY_RESULT" value="n"/>
      </inits>
    </inits>
  </rules>
  <rules name="entryFlow">
    <from name="memberDecl" alias="md"/>
    <to name="action::EntryFlow"/>
    <context>typedMethod</context>
    <context>voidMethod</context>
    <queries variable="f">
      <filter type="INDIRECT">
        <element name="compilationUnit"/>
        <next type="INDIRECT">
          <element name="classBodyDeclaration" mark="true"/>
          <next type="INDIRECT">
            <element name="memberDecl"/>
            <expression xsi:type="Query:FilterExpressionUnit" operation="CHECK">
              <element name="this"/>
              <parameters value="md" type="VARIABLE"/>
            </expression>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="t">
      <filter>
        <element name="md"/>
        <next type="INDIRECT" operation="POSITION">
          <element name="blockStatement"/>
          <next>
            <element name="statement" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="from">
        <value type="QUERY_RESULT" value="f"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="to">
        <value type="QUERY_RESULT" value="t"/>
      </inits>
    </inits>
  </rules>
  <rules name="localVariable">
    <from name="localVariableDeclaration" alias="lvd"/>
    <to name="code::StorableUnit"/>
    <queries variable="n">
      <filter>
        <element name="lvd"/>
        <next type="INDIRECT">
          <element name="variableDeclarator" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value type="QUERY_ACCESS" value="n" extension="Identifier"/>
      </inits>
    </inits>
  </rules>
  <rules name="writesobjectcreation">
    <from name="variableDeclarator" alias="vd">
      <filter>
        <element name="variableDeclarator" mark="true"/>
        <next type="INDIRECT">
          <element name="primary"/>
          <expression xsi:type="Query:FilterExpressionUnit">
            <element name="TOKEN"/>
            <parameters value="new"/>
          </expression>
        </next>
      </filter>
    </from>
    <to name="action::Writes"/>
    <context>objectcreation</context>
    <queries variable="f">
      <filter>
        <element name="vd"/>
        <next type="INDIRECT">
          <element name="variableInitializer" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="t">
      <filter type="INDIRECT">
        <element name="compilationUnit"/>
        <next type="INDIRECT">
          <element name="localVariableDeclaration" mark="true"/>
          <next type="INDIRECT">
            <element name="variableDeclarator"/>
            <expression xsi:type="Query:FilterExpressionUnit">
              <element name="Identifier"/>
              <parameters value="vd" valuePosition="0" extension="Identifier" extensionPosition="0"
                  type="QUERY_ACCESS"/>
            </expression>
          </next>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="from">
        <value type="QUERY_RESULT" value="f"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="to">
        <value type="QUERY_RESULT" value="t"/>
      </inits>
    </inits>
  </rules>
  <rules name="createsobjectcreation">
    <from name="variableDeclarator" alias="vd">
      <filter>
        <element name="variableDeclarator" mark="true"/>
        <next type="INDIRECT">
          <element name="primary"/>
          <expression xsi:type="Query:FilterExpressionUnit">
            <element name="TOKEN"/>
            <parameters value="new"/>
          </expression>
        </next>
      </filter>
    </from>
    <to name="action::Creates"/>
    <context>objectcreation</context>
    <queries variable="f">
      <filter>
        <element name="vd"/>
        <next type="INDIRECT">
          <element name="variableInitializer" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="t" cast="primary">
      <filter>
        <element name="vd"/>
        <next type="INDIRECT">
          <element name="createdName" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="from">
        <value type="QUERY_RESULT" value="f"/>
      </inits>
    </inits>
  </rules>
  <rules name="objectcreation">
    <from name="variableInitializer" alias="vi">
      <filter>
        <element name="variableInitializer" mark="true"/>
        <next type="INDIRECT">
          <element name="primary"/>
          <expression xsi:type="Query:FilterExpressionUnit">
            <element name="TOKEN"/>
            <parameters value="new"/>
          </expression>
        </next>
      </filter>
    </from>
    <to name="action::ActionElement"/>
    <queries variable="elem">
      <filter type="INDIRECT">
        <element name="compilationUnit"/>
        <next type="INDIRECT">
          <element name="variableDeclarator" mark="true"/>
          <next type="INDIRECT">
            <element name="variableInitializer"/>
            <expression xsi:type="Query:FilterExpressionUnit" operation="CHECK">
              <element name="this"/>
              <parameters value="vi" type="VARIABLE"/>
            </expression>
          </next>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="actionRelation">
        <value type="OPERATION_CALL" value="writesobjectcreation" extension="elem"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="actionRelation">
        <value type="OPERATION_CALL" value="createsobjectcreation" extension="elem"/>
      </inits>
    </inits>
  </rules>
  <rules name="createSignature">
    <from name="methodDeclaration" alias="md"/>
    <to name="code::Signature"/>
    <queries variable="ps">
      <filter>
        <element name="md"/>
        <next type="INDIRECT">
          <element name="formalParameters"/>
          <next type="RECURSIVE">
            <element name="formalParameterDecls" mark="true"/>
          </next>
        </next>
      </filter>
    </queries>
    <queries variable="re">
      <filter>
        <element name="md"/>
        <next>
          <element name="type" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="parameterUnit">
        <value type="QUERY_RESULT" value="ps"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="parameterUnit">
        <value type="QUERY_RESULT" value="re"/>
      </inits>
    </inits>
  </rules>
  <rules name="createParameterUnit">
    <from name="formalParameterDecls" alias="fpd"/>
    <to name="code::ParameterUnit"/>
    <queries variable="nq">
      <filter>
        <element name="fpd"/>
        <next type="RECURSIVE" operation="POSITION">
          <element name="variableDeclaratorId" mark="true"/>
        </next>
      </filter>
    </queries>
    <queries variable="t">
      <filter>
        <element name="fpd"/>
        <next>
          <element name="type" mark="true"/>
        </next>
      </filter>
    </queries>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="name">
        <value type="QUERY_ACCESS" value="nq" extension="Identifier"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="type">
        <value type="QUERY_RESULT" value="t"/>
      </inits>
    </inits>
  </rules>
  <rules name="createParameterUnitReturn">
    <from name="type" alias="t"/>
    <to name="code::ParameterUnit"/>
    <context>createSignature</context>
    <inits>
      <inits xsi:type="Core:InitUnitElement" element="type">
        <value type="QUERY_RESULT" value="t"/>
      </inits>
      <inits xsi:type="Core:InitUnitElement" element="kind">
        <value value="return"/>
      </inits>
    </inits>
  </rules>
</Core:ViewDefinition>
