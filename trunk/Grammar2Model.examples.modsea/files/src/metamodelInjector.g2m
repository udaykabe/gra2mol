-- *******************************************************************************
-- * Copyright (c) 2012
-- * All rights reserved. This program and the accompanying materials
-- * are made available under the terms of the Eclipse Public License v1.0
-- * which accompanies this distribution, and is available at
-- * http://www.eclipse.org/legal/epl-v10.html
-- *
-- * Contributors:
-- *    Javier Canovas (jlcanovas@um.es) 
-- *******************************************************************************

rule 'mapEPackage'
	from CST tree
	to   EPackage
	queries
		elems : //#file{filename.endsWith("accessorSpecs.json")};
	mappings
		name         = "modsea";
		nsURI        = "http://modsea/1.0";
		nsPrefix     = "modsea";
		eClassifiers = elems;
end_rule

rule 'mapEClass'
	from file f
	to   EClass
	queries
		attrs : //file{filename.endsWith("settingSpecs.json")}//#pairValue;
		refs  : //file{filename.endsWith("accessorSpecs.json")}///#pairValue/lhs/value{ID.equals("attributeName")};
	mappings
		name                = ext digestFilename(f);
		eStructuralFeatures = attrs;
		eStructuralFeatures = refs;
end_rule

rule 'mapEAttributes'
	from pairValue/lhs/value{!ID.equals("attributeName")} pv
	to	 EAttribute
	queries
		lhs   : /pv//lhs/#value;
		typeL : /pv//rhs//#pairValue/lhs/value{ID.eq("type")};
		typeR : /typeL/rhs/#value;
		defVL : /pv//rhs//#pairValue/lhs/value{ID.eq("defaultValue")};
		defVR : /defVL/rhs/#value;
	mappings
		name  = removeQuotes lhs.DQVALUE;
		eType = ext typeHelper(typeR);
		defaultValueLiteral = extract defVR;
end_rule

rule 'mapEReference'
	from pairValue/lhs/value{ID.equals("attributeName")} pv
	to	 EReference
	queries
		rhs   : /pv/rhs/#value;
	mappings
		name  = removeQuotes rhs.DQVALUE;
		eType = ext typeInitializer(rhs);
end_rule



