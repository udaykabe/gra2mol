GVQ Interpreter version 0.3

Executing...
Models created.
Initializing indexRules...
Initializing packages...
Initializing hashes...

Executing rules...
RULE: mapProject
RULE: mapProject... executing!
  Model Element astm::gastm::Project created
  Executing queries...
    Query sf with 1 result nodes - CONTENT : [Module OTG_PEUROPEOS WHEN-NEW-FORM-INSTANCE Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ; Module OTG_PEUROPEOS PRE-FORM : global . item := NULL ; : global . query := 'FALSE' ; Module OTG_PEUROPEOS POST-TEXT-ITEM set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ; set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ; Module OTG_PEUROPEOS KEY-LISTVAL declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ; Module OTG_PEUROPEOS WHEN-NEW-ITEM-INSTANCE LISTA_VALORES ; Module OTG_PEUROPEOS WHEN-MOUSE-DOUBLECLICK GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ; Module OTG_PEUROPEOS KEY-HELP NULL ; Module OTG_PEUROPEOS KEY-MENU NULL ; Module OTG_PEUROPEOS ON-ERROR Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ; Module OTG_PEUROPEOS KEY-ENTQRY activa_consulta ; Module OTG_PEUROPEOS KEY-EXEQRY lista_valores ; ejecuta_consulta ; Module OTG_PEUROPEOS KEY-EXIT : system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ; Module OTG_PEUROPEOS ON-CLEAR-DETAILS BEGIN Clear_All_Master_Details ; END ; Module OTG_PEUROPEOS WHEN-TAB-PAGE-CHANGED DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ; Block OTG_PEUROPEOS PRE-QUERY declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ; Block OTG_PEUROPEOS PRE-INSERT select s_peu_codigo . nextval into : peu_codigo from dual ; Block OTG_PEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_PEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ; Block OTG_PEUROPEOS WHEN-NEW-RECORD-INSTANCE : PEU_CG IS NULL THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; ELSE DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ; END IF ; BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; : peu_seu_codigo is not null then select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ; end if ; Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PEU_CG POST-CHANGE : WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ; Item WPEU_CG KEY-PREV-ITEM NULL ; Item WPEU_CG WHEN-VALIDATE-ITEM : PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ; Item WPEU_CG KEY-LISTVAL SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ; Item GENERAR_CG WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR OR Item VER_CG WHEN-BUTTON-PRESSED DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ; Item PEU_SEU_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item WGO_PEU_SEU_CODIGO WHEN-BUTTON-PRESSED Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace replace Item PEU_APR_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_SUP_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ; Item WGO_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace replace Item PEU_ACC_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_ACC_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_ACC_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ; Item PEU_SCO_CODIGO WHEN-LIST-CHANGED BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; Item ACEPTAR WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ; Item CANCELAR WHEN-BUTTON-PRESSED GO_ITEM ( 'WPEU_CG' ) ; Item UPE_UOR_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item UPE_UOR_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item UPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WUPE_UOR_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item PPE_PER_ID POST-CHANGE Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ; Item PPE_PER_ID WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WDNI_PPE_PER_ID WHEN-NEW-ITEM-INSTANCE set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ; Item WDNI_PPE_PER_ID WHEN-MOUSE-DOUBLECLICK execute_trigger ( 'KEY-LISTVAL' ) ; Item WDNI_PPE_PER_ID KEY-LISTVAL Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ; Item WADD_PPE_PER_ID WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ; Item WGO_PPE_PER_ID WHEN-BUTTON-PRESSED declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace replace Item DPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item DPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ; Item WDPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_JPEUROPEOS KEY-DELREC declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; delete_record ; Block OTG_JPEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_JPEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ; Item JPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_PPEUROPEOS POST-CHANGE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-UPDATE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-INSERT Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-DELETE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_JUSTIFICA WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_SPEUROPEOS PRE-INSERT select s_spe_codigo . nextval into : spe_codigo from dual ; Item SPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item SPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_OPEUROPEOS PRE-INSERT select s_oeu_codigo . nextval into : ope_codigo from dual ; Item OPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item OPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PB_ENTQ WHEN-BUTTON-PRESSED do_key ( 'Enter_query' ) ; Item PB_EXEQ WHEN-BUTTON-PRESSED do_key ( 'Execute_query' ) ; Item PB_CANQ WHEN-BUTTON-PRESSED : system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ; Item PB_SAVE WHEN-BUTTON-PRESSED do_key ( 'commit_form' ) ; Item PB_ANT WHEN-BUTTON-PRESSED previous_record ; Item PB_SIG WHEN-BUTTON-PRESSED next_record ; Item PB_INS WHEN-BUTTON-PRESSED do_key ( 'create_record' ) ; Item PB_DEL WHEN-BUTTON-PRESSED Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ; Item PB_EXIT WHEN-BUTTON-PRESSED Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ; Block CALENDARIO WHEN-MOUSE-DOUBLECLICK NULL ; Block CALENDARIO WHEN-MOUSE-CLICK date_lov . date_click ; Block CALENDARIO KEY-OTHERS NULL ; Item OK_BUTTON WHEN-MOUSE-CLICK null ; Item OK_BUTTON WHEN-BUTTON-PRESSED copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ; go_item ( date_lov . date_lov_return_item ) ; date_lov . lov_auto_skip = TRUE then next_item ; end if ; Item CANCEL_BUTTON WHEN-MOUSE-CLICK null ; Item CANCEL_BUTTON WHEN-BUTTON-PRESSED go_item ( date_lov . date_lov_return_item ) ; Item MONTH_PLUS1 WHEN-MOUSE-CLICK null ; Item MONTH_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_PLUS1 WHEN-MOUSE-CLICK null ; Item YEAR_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_MINUS1 WHEN-MOUSE-CLICK null ; Item YEAR_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item MONTH_MINUS1 WHEN-MOUSE-CLICK null ; Item MONTH_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item DISPLAY_MON_YEAR WHEN-MOUSE-CLICK null ; Item DAY_LABEL1 WHEN-MOUSE-CLICK null ; Item DAY_LABEL2 WHEN-MOUSE-CLICK null ; Item DAY_LABEL3 WHEN-MOUSE-CLICK null ; Item DAY_LABEL4 WHEN-MOUSE-CLICK null ; Item DAY_LABEL5 WHEN-MOUSE-CLICK null ; Item DAY_LABEL6 WHEN-MOUSE-CLICK null ; Item DAY_LABEL7 WHEN-MOUSE-CLICK null ; ]
    Query cu with 1 result nodes - CONTENT : [Module OTG_PEUROPEOS WHEN-NEW-FORM-INSTANCE Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ; Module OTG_PEUROPEOS PRE-FORM : global . item := NULL ; : global . query := 'FALSE' ; Module OTG_PEUROPEOS POST-TEXT-ITEM set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ; set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ; Module OTG_PEUROPEOS KEY-LISTVAL declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ; Module OTG_PEUROPEOS WHEN-NEW-ITEM-INSTANCE LISTA_VALORES ; Module OTG_PEUROPEOS WHEN-MOUSE-DOUBLECLICK GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ; Module OTG_PEUROPEOS KEY-HELP NULL ; Module OTG_PEUROPEOS KEY-MENU NULL ; Module OTG_PEUROPEOS ON-ERROR Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ; Module OTG_PEUROPEOS KEY-ENTQRY activa_consulta ; Module OTG_PEUROPEOS KEY-EXEQRY lista_valores ; ejecuta_consulta ; Module OTG_PEUROPEOS KEY-EXIT : system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ; Module OTG_PEUROPEOS ON-CLEAR-DETAILS BEGIN Clear_All_Master_Details ; END ; Module OTG_PEUROPEOS WHEN-TAB-PAGE-CHANGED DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ; Block OTG_PEUROPEOS PRE-QUERY declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ; Block OTG_PEUROPEOS PRE-INSERT select s_peu_codigo . nextval into : peu_codigo from dual ; Block OTG_PEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_PEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ; Block OTG_PEUROPEOS WHEN-NEW-RECORD-INSTANCE : PEU_CG IS NULL THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; ELSE DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ; END IF ; BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; : peu_seu_codigo is not null then select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ; end if ; Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PEU_CG POST-CHANGE : WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ; Item WPEU_CG KEY-PREV-ITEM NULL ; Item WPEU_CG WHEN-VALIDATE-ITEM : PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ; Item WPEU_CG KEY-LISTVAL SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ; Item GENERAR_CG WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR OR Item VER_CG WHEN-BUTTON-PRESSED DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ; Item PEU_SEU_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item WGO_PEU_SEU_CODIGO WHEN-BUTTON-PRESSED Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace replace Item PEU_APR_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_SUP_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ; Item WGO_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace replace Item PEU_ACC_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_ACC_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_ACC_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ; Item PEU_SCO_CODIGO WHEN-LIST-CHANGED BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; Item ACEPTAR WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ; Item CANCELAR WHEN-BUTTON-PRESSED GO_ITEM ( 'WPEU_CG' ) ; Item UPE_UOR_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item UPE_UOR_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item UPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WUPE_UOR_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item PPE_PER_ID POST-CHANGE Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ; Item PPE_PER_ID WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WDNI_PPE_PER_ID WHEN-NEW-ITEM-INSTANCE set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ; Item WDNI_PPE_PER_ID WHEN-MOUSE-DOUBLECLICK execute_trigger ( 'KEY-LISTVAL' ) ; Item WDNI_PPE_PER_ID KEY-LISTVAL Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ; Item WADD_PPE_PER_ID WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ; Item WGO_PPE_PER_ID WHEN-BUTTON-PRESSED declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace replace Item DPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item DPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ; Item WDPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_JPEUROPEOS KEY-DELREC declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; delete_record ; Block OTG_JPEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_JPEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ; Item JPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_PPEUROPEOS POST-CHANGE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-UPDATE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-INSERT Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-DELETE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_JUSTIFICA WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_SPEUROPEOS PRE-INSERT select s_spe_codigo . nextval into : spe_codigo from dual ; Item SPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item SPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_OPEUROPEOS PRE-INSERT select s_oeu_codigo . nextval into : ope_codigo from dual ; Item OPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item OPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PB_ENTQ WHEN-BUTTON-PRESSED do_key ( 'Enter_query' ) ; Item PB_EXEQ WHEN-BUTTON-PRESSED do_key ( 'Execute_query' ) ; Item PB_CANQ WHEN-BUTTON-PRESSED : system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ; Item PB_SAVE WHEN-BUTTON-PRESSED do_key ( 'commit_form' ) ; Item PB_ANT WHEN-BUTTON-PRESSED previous_record ; Item PB_SIG WHEN-BUTTON-PRESSED next_record ; Item PB_INS WHEN-BUTTON-PRESSED do_key ( 'create_record' ) ; Item PB_DEL WHEN-BUTTON-PRESSED Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ; Item PB_EXIT WHEN-BUTTON-PRESSED Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ; Block CALENDARIO WHEN-MOUSE-DOUBLECLICK NULL ; Block CALENDARIO WHEN-MOUSE-CLICK date_lov . date_click ; Block CALENDARIO KEY-OTHERS NULL ; Item OK_BUTTON WHEN-MOUSE-CLICK null ; Item OK_BUTTON WHEN-BUTTON-PRESSED copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ; go_item ( date_lov . date_lov_return_item ) ; date_lov . lov_auto_skip = TRUE then next_item ; end if ; Item CANCEL_BUTTON WHEN-MOUSE-CLICK null ; Item CANCEL_BUTTON WHEN-BUTTON-PRESSED go_item ( date_lov . date_lov_return_item ) ; Item MONTH_PLUS1 WHEN-MOUSE-CLICK null ; Item MONTH_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_PLUS1 WHEN-MOUSE-CLICK null ; Item YEAR_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_MINUS1 WHEN-MOUSE-CLICK null ; Item YEAR_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item MONTH_MINUS1 WHEN-MOUSE-CLICK null ; Item MONTH_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item DISPLAY_MON_YEAR WHEN-MOUSE-CLICK null ; Item DAY_LABEL1 WHEN-MOUSE-CLICK null ; Item DAY_LABEL2 WHEN-MOUSE-CLICK null ; Item DAY_LABEL3 WHEN-MOUSE-CLICK null ; Item DAY_LABEL4 WHEN-MOUSE-CLICK null ; Item DAY_LABEL5 WHEN-MOUSE-CLICK null ; Item DAY_LABEL6 WHEN-MOUSE-CLICK null ; Item DAY_LABEL7 WHEN-MOUSE-CLICK null ; ]
  Executing mappings...
    - QUERY_RESULT: 1 bindings:
      (1/1) result node: CST (kind). Rule... calling mapCompilationUnit rule

      RULE: mapCompilationUnit... executing!
        Model Element astm::gastm::CompilationUnit created
        Executing queries...
          Query ts with 106 result nodes
          Query cst with 1 result nodes - CONTENT : [Module OTG_PEUROPEOS WHEN-NEW-FORM-INSTANCE Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ; Module OTG_PEUROPEOS PRE-FORM : global . item := NULL ; : global . query := 'FALSE' ; Module OTG_PEUROPEOS POST-TEXT-ITEM set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ; set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ; Module OTG_PEUROPEOS KEY-LISTVAL declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ; Module OTG_PEUROPEOS WHEN-NEW-ITEM-INSTANCE LISTA_VALORES ; Module OTG_PEUROPEOS WHEN-MOUSE-DOUBLECLICK GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ; Module OTG_PEUROPEOS KEY-HELP NULL ; Module OTG_PEUROPEOS KEY-MENU NULL ; Module OTG_PEUROPEOS ON-ERROR Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ; Module OTG_PEUROPEOS KEY-ENTQRY activa_consulta ; Module OTG_PEUROPEOS KEY-EXEQRY lista_valores ; ejecuta_consulta ; Module OTG_PEUROPEOS KEY-EXIT : system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ; Module OTG_PEUROPEOS ON-CLEAR-DETAILS BEGIN Clear_All_Master_Details ; END ; Module OTG_PEUROPEOS WHEN-TAB-PAGE-CHANGED DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ; Block OTG_PEUROPEOS PRE-QUERY declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ; Block OTG_PEUROPEOS PRE-INSERT select s_peu_codigo . nextval into : peu_codigo from dual ; Block OTG_PEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_PEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ; Block OTG_PEUROPEOS WHEN-NEW-RECORD-INSTANCE : PEU_CG IS NULL THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; ELSE DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ; END IF ; BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; : peu_seu_codigo is not null then select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ; end if ; Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PEU_CG POST-CHANGE : WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ; Item WPEU_CG KEY-PREV-ITEM NULL ; Item WPEU_CG WHEN-VALIDATE-ITEM : PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ; Item WPEU_CG KEY-LISTVAL SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ; Item GENERAR_CG WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR OR Item VER_CG WHEN-BUTTON-PRESSED DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ; Item PEU_SEU_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item WGO_PEU_SEU_CODIGO WHEN-BUTTON-PRESSED Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace replace Item PEU_APR_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; Item PEU_SUP_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_SUP_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ; Item WGO_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace replace Item PEU_ACC_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPEU_ACC_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item WADD_PEU_ACC_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ; Item PEU_SCO_CODIGO WHEN-LIST-CHANGED BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; Item ACEPTAR WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ; Item CANCELAR WHEN-BUTTON-PRESSED GO_ITEM ( 'WPEU_CG' ) ; Item UPE_UOR_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item UPE_UOR_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item UPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WUPE_UOR_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Item PPE_PER_ID POST-CHANGE Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ; Item PPE_PER_ID WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item WDNI_PPE_PER_ID WHEN-NEW-ITEM-INSTANCE set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ; Item WDNI_PPE_PER_ID WHEN-MOUSE-DOUBLECLICK execute_trigger ( 'KEY-LISTVAL' ) ; Item WDNI_PPE_PER_ID KEY-LISTVAL Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ; Item WADD_PPE_PER_ID WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ; Item WGO_PPE_PER_ID WHEN-BUTTON-PRESSED declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace replace Item DPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item DPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ; Item WDPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_JPEUROPEOS KEY-DELREC declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; delete_record ; Block OTG_JPEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; Block OTG_JPEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ; Item JPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_PPEUROPEOS POST-CHANGE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-UPDATE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-INSERT Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Block OTG_PPEUROPEOS POST-DELETE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_JUSTIFICA WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; Item WPPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; Block OTG_SPEUROPEOS PRE-INSERT select s_spe_codigo . nextval into : spe_codigo from dual ; Item SPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item SPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Block OTG_OPEUROPEOS PRE-INSERT select s_oeu_codigo . nextval into : ope_codigo from dual ; Item OPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item OPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; Item PB_ENTQ WHEN-BUTTON-PRESSED do_key ( 'Enter_query' ) ; Item PB_EXEQ WHEN-BUTTON-PRESSED do_key ( 'Execute_query' ) ; Item PB_CANQ WHEN-BUTTON-PRESSED : system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ; Item PB_SAVE WHEN-BUTTON-PRESSED do_key ( 'commit_form' ) ; Item PB_ANT WHEN-BUTTON-PRESSED previous_record ; Item PB_SIG WHEN-BUTTON-PRESSED next_record ; Item PB_INS WHEN-BUTTON-PRESSED do_key ( 'create_record' ) ; Item PB_DEL WHEN-BUTTON-PRESSED Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ; Item PB_EXIT WHEN-BUTTON-PRESSED Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ; Block CALENDARIO WHEN-MOUSE-DOUBLECLICK NULL ; Block CALENDARIO WHEN-MOUSE-CLICK date_lov . date_click ; Block CALENDARIO KEY-OTHERS NULL ; Item OK_BUTTON WHEN-MOUSE-CLICK null ; Item OK_BUTTON WHEN-BUTTON-PRESSED copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ; go_item ( date_lov . date_lov_return_item ) ; date_lov . lov_auto_skip = TRUE then next_item ; end if ; Item CANCEL_BUTTON WHEN-MOUSE-CLICK null ; Item CANCEL_BUTTON WHEN-BUTTON-PRESSED go_item ( date_lov . date_lov_return_item ) ; Item MONTH_PLUS1 WHEN-MOUSE-CLICK null ; Item MONTH_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_PLUS1 WHEN-MOUSE-CLICK null ; Item YEAR_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item YEAR_MINUS1 WHEN-MOUSE-CLICK null ; Item YEAR_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item MONTH_MINUS1 WHEN-MOUSE-CLICK null ; Item MONTH_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; Item DISPLAY_MON_YEAR WHEN-MOUSE-CLICK null ; Item DAY_LABEL1 WHEN-MOUSE-CLICK null ; Item DAY_LABEL2 WHEN-MOUSE-CLICK null ; Item DAY_LABEL3 WHEN-MOUSE-CLICK null ; Item DAY_LABEL4 WHEN-MOUSE-CLICK null ; Item DAY_LABEL5 WHEN-MOUSE-CLICK null ; Item DAY_LABEL6 WHEN-MOUSE-CLICK null ; Item DAY_LABEL7 WHEN-MOUSE-CLICK null ; ]
        Executing mappings...
          - VALUE: language (property) - PL/SQL (value)
          - QUERY_RESULT: 106 bindings:
            (1/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS WHEN-NEW-FORM-INSTANCE Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-NEW-FORM-INSTANCE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 6 result nodes
                      Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                      Query decls with 6 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 6 bindings:
                        (1/6) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 21: [default_value ( null , 'global.seu_codigo' ) ]
                            Query st with 1 result nodes - CONTENT : [default_value ( null , 'global.seu_codigo' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 21: [default_value ]
                                  Query fc with 1 result nodes - CONTENT in line 21: [default_value ( null , 'global.seu_codigo' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - default_value (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [null ]
                                        Query expA with 1 result nodes - CONTENT : [null ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                              Query s with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                              Query s with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                              Query s with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapNullLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : [null ]
                                                Query st with 1 result nodes - CONTENT in line 21: [null ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: null 


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                        Query expA with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                              Query s with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                              Query s with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                              Query s with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['global.seu_codigo' ]
                                                Query st with 1 result nodes - CONTENT in line 21: ['global.seu_codigo' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'global.seu_codigo' 




                        (2/6) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                            Query value with 1 result nodes - CONTENT : [a ]
                            Query as with 1 result nodes - CONTENT in line 23: [a := populate_group ( 'APRODUCTIVAS' ) ]
                            Query st with 1 result nodes - CONTENT : [a := populate_group ( 'APRODUCTIVAS' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: a
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'APRODUCTIVAS' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [populate_group ]
                                Query cast1 with 1 result nodes - CONTENT : [populate_group ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 23: [populate_group ( 'APRODUCTIVAS' ) ]
                                Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                Query iden with 1 result nodes - CONTENT in line 23: [populate_group ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                  Query params with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                  Query iden with 1 result nodes - CONTENT in line 23: [populate_group ]
                                  Query fc with 1 result nodes - CONTENT in line 23: [populate_group ( 'APRODUCTIVAS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - populate_group (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                        Query expA with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                                Query st with 1 result nodes - CONTENT in line 23: ['APRODUCTIVAS' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'APRODUCTIVAS' 




                        (3/6) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 24: [populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ]
                            Query st with 1 result nodes - CONTENT : [populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 24: [populate_list ]
                                  Query fc with 1 result nodes - CONTENT in line 24: [populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - populate_list (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                        Query expA with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                              Query s with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                              Query s with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                              Query s with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['PEU_APR_CODIGO' ]
                                                Query st with 1 result nodes - CONTENT in line 24: ['PEU_APR_CODIGO' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'PEU_APR_CODIGO' 


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                        Query expA with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                              Query s with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['APRODUCTIVAS' ]
                                                Query st with 1 result nodes - CONTENT in line 24: ['APRODUCTIVAS' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'APRODUCTIVAS' 




                        (4/6) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                            Query value with 1 result nodes - CONTENT : [c ]
                            Query as with 1 result nodes - CONTENT in line 25: [c := populate_group ( 'SCOSTES' ) ]
                            Query st with 1 result nodes - CONTENT : [c := populate_group ( 'SCOSTES' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: c
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                                Query s with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [populate_group ( 'SCOSTES' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [populate_group ]
                                Query cast1 with 1 result nodes - CONTENT : [populate_group ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 25: [populate_group ( 'SCOSTES' ) ]
                                Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                Query iden with 1 result nodes - CONTENT in line 25: [populate_group ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                  Query params with 1 result nodes - CONTENT : ['SCOSTES' ]
                                  Query iden with 1 result nodes - CONTENT in line 25: [populate_group ]
                                  Query fc with 1 result nodes - CONTENT in line 25: [populate_group ( 'SCOSTES' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - populate_group (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                        Query expA with 1 result nodes - CONTENT : ['SCOSTES' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                                Query st with 1 result nodes - CONTENT in line 25: ['SCOSTES' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'SCOSTES' 




                        (5/6) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 26: [populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ]
                            Query st with 1 result nodes - CONTENT : [populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 26: [populate_list ]
                                  Query fc with 1 result nodes - CONTENT in line 26: [populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - populate_list (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                        Query expA with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                              Query s with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                              Query s with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                              Query s with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['PEU_SCO_CODIGO' ]
                                                Query st with 1 result nodes - CONTENT in line 26: ['PEU_SCO_CODIGO' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'PEU_SCO_CODIGO' 


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                        Query expA with 1 result nodes - CONTENT : ['SCOSTES' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                              Query s with 1 result nodes - CONTENT : ['SCOSTES' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['SCOSTES' ]
                                                Query st with 1 result nodes - CONTENT in line 26: ['SCOSTES' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'SCOSTES' 




                        (6/6) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [execute_query ]
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [: global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ]
                            Query cond with 1 result nodes - CONTENT : [: global . seu_codigo is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: global . seu_codigo is not null ]
                                Query s with 1 result nodes - CONTENT in line 29: [: global . seu_codigo is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 29: [: global . seu_codigo is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                      Query s with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 29: [: global . seu_codigo ]
                                        Query ea with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :global.seu_codigo

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 30: [select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ]
                                  Query lvals with 1 result nodes - CONTENT : [existe ]
                                  Query st with 1 result nodes - CONTENT : [select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT : [existe ]
                                        Query fromn with 1 result nodes - CONTENT : [otg_peuropeos ]
                                        Query isCount with 1 result nodes - CONTENT in line 30: [count ]
                                        Query sexpr with 1 result nodes - CONTENT in line 30: [select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ]
                                        Query list with 1 result nodes - CONTENT : [count ( * ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [count ( * ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: count(*)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                            Query next with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                            Query next with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                            Query next with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                            Query next with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 31: [peu_seu_codigo = : global . seu_codigo ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [peu_seu_codigo = : global . seu_codigo ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 31: [peu_seu_codigo = : global . seu_codigo ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                              Query exp1 with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query s with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query cast2 with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query cast1 with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                                  Query iden with 1 result nodes - CONTENT in line 31: [peu_seu_codigo ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 31: [peu_seu_codigo ]
                                                    Query fc with 1 result nodes - CONTENT : [peu_seu_codigo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - peu_seu_codigo (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                  Query s with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFormsVariableFromExpAdd... executing!
                                                  Model Element astm::gastm::IdentifierReference created
                                                  Executing queries...
                                                    Query se with 1 result nodes - CONTENT in line 31: [: global . seu_codigo ]
                                                    Query ea with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: simple_expression (kind) - Result: :global.seu_codigo

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [otg_peuropeos ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: otg_peuropeos


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [existe ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: existe


                              (2/2) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 9 result nodes
                                  Query thenSt with 1 result nodes - CONTENT : [execute_query ]
                                  Query st with 1 result nodes - CONTENT : [existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ]
                                  Query cond with 1 result nodes - CONTENT : [existe != 0 ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [existe != 0 ]
                                      Query s with 1 result nodes - CONTENT : [existe != 0 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 0 result nodes
                                        Query exp with 1 result nodes - CONTENT : [existe != 0 ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 32: [!= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [existe ]
                                        Query expl2 with 1 result nodes - CONTENT : [0 ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 1 result nodes - CONTENT in line 32: [!= ]
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [existe ]
                                            Query s with 1 result nodes - CONTENT : [existe ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [existe ]
                                            Query cast2 with 1 result nodes - CONTENT : [existe ]
                                            Query cast1 with 1 result nodes - CONTENT : [existe ]
                                            Query dec with 1 result nodes - CONTENT : [existe Number ; ]
                                            Query s with 1 result nodes - CONTENT : [existe ]
                                            Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                            Query iden with 1 result nodes - CONTENT in line 32: [existe ]
                                          - IF detected...true!
                                          - IF detected...true!
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [0 ]
                                            Query s with 1 result nodes - CONTENT : [0 ]
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                          - IF detected...false! executing ELSE part 
                                              - IF detected...false! executing ELSE part 
                                                  - IF detected...false! executing ELSE part 
                                                      - IF detected...false! executing ELSE part 
                                                          - IF detected...true!
                                                          - OPERATION_CREATION: astm::gastm::NotEqual created

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT : [execute_query ]
                                        Query st with 1 result nodes - CONTENT : [execute_query ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 32: [execute_query ]
                                              Query fc with 1 result nodes - CONTENT : [execute_query ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - execute_query (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                  - QUERY_RESULT: 9 bindings:
                                    (1/9) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                        Query value with 1 result nodes - CONTENT in line 35: [: peu_seu_codigo ]
                                        Query as with 1 result nodes - CONTENT in line 35: [: peu_seu_codigo := : global . seu_codigo ]
                                        Query st with 1 result nodes - CONTENT : [: peu_seu_codigo := : global . seu_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :peu_seu_codigo
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                            Query s with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                            Query s with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                            Query s with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 35: [: global . seu_codigo ]
                                              Query ea with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :global.seu_codigo


                                    (2/9) result node: statement (kind). Rule... calling mapSelectStatement rule

                                    RULE: mapSelectStatement... executing!
                                      Model Element astm::sastm::RDBSelectStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 37: [select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ]
                                        Query lvals with 6 result nodes
                                        Query st with 1 result nodes - CONTENT : [select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                          RULE: mapSelectExpression... executing!
                                            Model Element astm::sastm::RDBSelectExpression created
                                            Executing queries...
                                              Query w with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                              Query fromj with 0 result nodes
                                              Query lvals with 6 result nodes
                                              Query fromn with 1 result nodes - CONTENT : [otg_seuropeos ]
                                              Query isCount with 0 result nodes
                                              Query sexpr with 1 result nodes - CONTENT in line 37: [select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ]
                                              Query list with 6 result nodes
                                            Executing mappings...
                                              - QUERY_RESULT: 6 bindings:
                                                (1/6) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [seu_titulo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: seu_titulo

                                                (2/6) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [seu_acronimo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: seu_acronimo

                                                (3/6) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [seu_coordinado ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: seu_coordinado

                                                (4/6) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [seu_acc_codigo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: seu_acc_codigo

                                                (5/6) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [seu_sco_codigo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: seu_sco_codigo

                                                (6/6) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [seu_sup_codigo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: seu_sup_codigo

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                                RULE: skipToConditionOr... executing!
                                                Skip Rule skipToConditionOr executing...
                                                Executing skip query...
                                                  Query c with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                  Query next with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipConditionOr... executing!
                                                Skip Rule skipConditionOr executing...
                                                Executing skip query...
                                                  Query co with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                  Query next with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipConditionAnd... executing!
                                                Skip Rule skipConditionAnd executing...
                                                Executing skip query...
                                                  Query ca with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                  Query next with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipConditionNot... executing!
                                                Skip Rule skipConditionNot executing...
                                                Executing skip query...
                                                  Query cn with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                  Query next with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionComparison... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query eqOp with 1 result nodes - CONTENT in line 40: [seu_codigo = : global . seu_codigo ]
                                                    Query gthOp with 0 result nodes
                                                    Query orOp with 0 result nodes
                                                    Query geqOp with 0 result nodes
                                                    Query sc with 1 result nodes - CONTENT : [seu_codigo = : global . seu_codigo ]
                                                    Query leqOp with 0 result nodes
                                                    Query notEqOp with 0 result nodes
                                                    Query compar with 1 result nodes - CONTENT in line 40: [seu_codigo = : global . seu_codigo ]
                                                    Query lthOp with 0 result nodes
                                                    Query exp2 with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                    Query exp1 with 1 result nodes - CONTENT : [seu_codigo ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [seu_codigo ]
                                                        Query s with 1 result nodes - CONTENT : [seu_codigo ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [seu_codigo ]
                                                        Query cast2 with 1 result nodes - CONTENT : [seu_codigo ]
                                                        Query cast1 with 1 result nodes - CONTENT : [seu_codigo ]
                                                        Query dec with 0 result nodes
                                                        Query s with 1 result nodes - CONTENT : [seu_codigo ]
                                                        Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                                        Query iden with 1 result nodes - CONTENT in line 40: [seu_codigo ]
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 40: [seu_codigo ]
                                                          Query fc with 1 result nodes - CONTENT : [seu_codigo ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - seu_codigo (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                        Query s with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFormsVariableFromExpAdd... executing!
                                                        Model Element astm::gastm::IdentifierReference created
                                                        Executing queries...
                                                          Query se with 1 result nodes - CONTENT in line 40: [: global . seu_codigo ]
                                                          Query ea with 1 result nodes - CONTENT : [: global . seu_codigo ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - CODE:  - node: simple_expression (kind) - Result: :global.seu_codigo

                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Equal created

                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                                  RULE: mapTable... executing!
                                                    Model Element astm::sastm::RDBTableReference created
                                                    Executing queries...
                                                      Query st with 1 result nodes - CONTENT : [otg_seuropeos ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: selected_table (kind) - Result: otg_seuropeos


                                        - QUERY_RESULT: 6 bindings:
                                          (1/6) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT in line 38: [: peu_titulo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :peu_titulo

                                          (2/6) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT in line 38: [: peu_acronimo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :peu_acronimo

                                          (3/6) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT in line 38: [: peu_coordinado ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :peu_coordinado

                                          (4/6) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT in line 38: [: peu_acc_codigo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :peu_acc_codigo

                                          (5/6) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT in line 38: [: peu_sco_codigo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :peu_sco_codigo

                                          (6/6) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT in line 38: [: peu_sup_codigo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :peu_sup_codigo


                                    (3/9) result node: statement (kind). Rule... calling mapSelectStatement rule

                                    RULE: mapSelectStatement... executing!
                                      Model Element astm::sastm::RDBSelectStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 42: [select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                        Query lvals with 2 result nodes
                                        Query st with 1 result nodes - CONTENT : [select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                          RULE: mapSelectExpression... executing!
                                            Model Element astm::sastm::RDBSelectExpression created
                                            Executing queries...
                                              Query w with 1 result nodes - CONTENT : [pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                              Query fromj with 0 result nodes
                                              Query lvals with 2 result nodes
                                              Query fromn with 2 result nodes
                                              Query isCount with 0 result nodes
                                              Query sexpr with 1 result nodes - CONTENT in line 42: [select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                              Query list with 3 result nodes
                                            Executing mappings...
                                              - QUERY_RESULT: 3 bindings:
                                                (1/3) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [pro_tipo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: pro_tipo

                                                (2/3) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [cpr_codigootri ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: cpr_codigootri

                                                (3/3) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [seu_cpr_codigo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: seu_cpr_codigo

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                                RULE: skipToConditionOr... executing!
                                                Skip Rule skipToConditionOr executing...
                                                Executing skip query...
                                                  Query c with 1 result nodes - CONTENT : [pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                  Query next with 1 result nodes - CONTENT : [pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipConditionOr... executing!
                                                Skip Rule skipConditionOr executing...
                                                Executing skip query...
                                                  Query co with 1 result nodes - CONTENT : [pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                  Query next with 1 result nodes - CONTENT in line 45: [pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionAnd... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query ca with 1 result nodes - CONTENT in line 45: [pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                    Query ex2 with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                    Query ex1 with 1 result nodes - CONTENT : [pro_codigo = cpr_pro_codigo ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: condition_not (kind). Rule... calling skipConditionNot rule

                                                      RULE: skipConditionNot... executing!
                                                      Skip Rule skipConditionNot executing...
                                                      Executing skip query...
                                                        Query cn with 1 result nodes - CONTENT : [pro_codigo = cpr_pro_codigo ]
                                                        Query next with 1 result nodes - CONTENT : [pro_codigo = cpr_pro_codigo ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createConditionComparison... executing!
                                                        Model Element astm::gastm::BinaryExpression created
                                                        Executing queries...
                                                          Query eqOp with 1 result nodes - CONTENT in line 45: [pro_codigo = cpr_pro_codigo ]
                                                          Query gthOp with 0 result nodes
                                                          Query orOp with 0 result nodes
                                                          Query geqOp with 0 result nodes
                                                          Query sc with 1 result nodes - CONTENT : [pro_codigo = cpr_pro_codigo ]
                                                          Query leqOp with 0 result nodes
                                                          Query notEqOp with 0 result nodes
                                                          Query compar with 1 result nodes - CONTENT in line 45: [pro_codigo = cpr_pro_codigo ]
                                                          Query lthOp with 0 result nodes
                                                          Query exp2 with 1 result nodes - CONTENT : [cpr_pro_codigo ]
                                                          Query exp1 with 1 result nodes - CONTENT : [pro_codigo ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                            RULE: skipAllArithmeticRules... executing!
                                                            Skip Rule skipAllArithmeticRules executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [pro_codigo ]
                                                              Query s with 1 result nodes - CONTENT : [pro_codigo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [pro_codigo ]
                                                              Query cast2 with 1 result nodes - CONTENT : [pro_codigo ]
                                                              Query cast1 with 1 result nodes - CONTENT : [pro_codigo ]
                                                              Query dec with 0 result nodes
                                                              Query s with 1 result nodes - CONTENT : [pro_codigo ]
                                                              Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                                              Query iden with 1 result nodes - CONTENT in line 45: [pro_codigo ]
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapFunctionCall... executing!
                                                              Model Element astm::gastm::FunctionCallExpression created
                                                              Executing queries...
                                                                Query exp with 0 result nodes
                                                                Query params with 0 result nodes
                                                                Query iden with 1 result nodes - CONTENT in line 45: [pro_codigo ]
                                                                Query fc with 1 result nodes - CONTENT : [pro_codigo ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                - OPERATION_CREATION: astm::gastm::Name created
                                                                - QUERY_ACCESS: variable: iden - 
                                                                  node: identifier (kind) - leaf: ID (kind) - pro_codigo (value) 
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                            RULE: skipAllArithmeticRules... executing!
                                                            Skip Rule skipAllArithmeticRules executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [cpr_pro_codigo ]
                                                              Query s with 1 result nodes - CONTENT : [cpr_pro_codigo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [cpr_pro_codigo ]
                                                              Query cast2 with 1 result nodes - CONTENT : [cpr_pro_codigo ]
                                                              Query cast1 with 1 result nodes - CONTENT : [cpr_pro_codigo ]
                                                              Query dec with 0 result nodes
                                                              Query s with 1 result nodes - CONTENT : [cpr_pro_codigo ]
                                                              Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                                              Query iden with 1 result nodes - CONTENT in line 45: [cpr_pro_codigo ]
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapFunctionCall... executing!
                                                              Model Element astm::gastm::FunctionCallExpression created
                                                              Executing queries...
                                                                Query exp with 0 result nodes
                                                                Query params with 0 result nodes
                                                                Query iden with 1 result nodes - CONTENT in line 45: [cpr_pro_codigo ]
                                                                Query fc with 1 result nodes - CONTENT : [cpr_pro_codigo ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                - OPERATION_CREATION: astm::gastm::Name created
                                                                - QUERY_ACCESS: variable: iden - 
                                                                  node: identifier (kind) - leaf: ID (kind) - cpr_pro_codigo (value) 
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                            - IF detected...true!
                                                            - OPERATION_CREATION: astm::gastm::Equal created

                                                    - OPERATION_CREATION: astm::gastm::And created
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: condition_not (kind). Rule... calling skipConditionNot rule

                                                      RULE: skipConditionNot... executing!
                                                      Skip Rule skipConditionNot executing...
                                                      Executing skip query...
                                                        Query cn with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                        Query next with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createConditionComparison... executing!
                                                        Model Element astm::gastm::BinaryExpression created
                                                        Executing queries...
                                                          Query eqOp with 1 result nodes - CONTENT in line 46: [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                          Query gthOp with 0 result nodes
                                                          Query orOp with 0 result nodes
                                                          Query geqOp with 0 result nodes
                                                          Query sc with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                          Query leqOp with 0 result nodes
                                                          Query notEqOp with 0 result nodes
                                                          Query compar with 1 result nodes - CONTENT in line 46: [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                          Query lthOp with 0 result nodes
                                                          Query exp2 with 1 result nodes - CONTENT : [( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                          Query exp1 with 1 result nodes - CONTENT : [cpr_codigo ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                            RULE: skipAllArithmeticRules... executing!
                                                            Skip Rule skipAllArithmeticRules executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [cpr_codigo ]
                                                              Query s with 1 result nodes - CONTENT : [cpr_codigo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [cpr_codigo ]
                                                              Query cast2 with 1 result nodes - CONTENT : [cpr_codigo ]
                                                              Query cast1 with 1 result nodes - CONTENT : [cpr_codigo ]
                                                              Query dec with 0 result nodes
                                                              Query s with 1 result nodes - CONTENT : [cpr_codigo ]
                                                              Query block with 1 result nodes - CONTENT in line 19: [Declare a Number ; b Number ; c Number ; existe Number ; cursor c_participantes is select pse_per_id , pse_ip from otg_perseuropeos where pse_seu_codigo = : global . seu_codigo ; cursor c_uorganizativas is select use_uor_codigo from otg_useuropeos where use_seu_codigo = : global . seu_codigo ; Begin default_value ( null , 'global.seu_codigo' ) ; a := populate_group ( 'APRODUCTIVAS' ) ; populate_list ( 'PEU_APR_CODIGO' , 'APRODUCTIVAS' ) ; c := populate_group ( 'SCOSTES' ) ; populate_list ( 'PEU_SCO_CODIGO' , 'SCOSTES' ) ; : global . seu_codigo is not null then select count ( * ) into existe from otg_peuropeos where peu_seu_codigo = : global . seu_codigo ; existe != 0 Then execute_query ; Else : peu_seu_codigo := : global . seu_codigo ; select seu_titulo , seu_acronimo , seu_coordinado , seu_acc_codigo , seu_sco_codigo , seu_sup_codigo into : peu_titulo , : peu_acronimo , : peu_coordinado , : peu_acc_codigo , : peu_sco_codigo , : peu_sup_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ; select pro_tipo , cpr_codigootri into : peu_tipo , : wcpr_codigo from otg_cprogramas , otg_programas where pro_codigo = cpr_pro_codigo and cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ; go_block ( 'otg_perpeuropeos' ) ; i in c_participantes loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_perpeuropeos . ppe_per_id := i . pse_per_id ; : otg_perpeuropeos . ppe_ip := i . pse_ip ; end loop ; go_block ( 'otg_upeuropeos' ) ; i in c_uorganizativas loop : SYSTEM . RECORD_STATUS != 'NEW' then create_record ; end if ; : otg_upeuropeos . upe_uor_codigo := i . use_uor_codigo ; SELECT UOR_DESCRI INTO : otg_upeuropeos . wupe_uor_codigo FROM GEA_UORGANIZATIVA WHERE UOR_COD = : otg_upeuropeos . upe_uor_codigo ; end loop ; go_block ( 'otg_peuropeos' ) ; : global . seu_codigo := null ; End if ; Else execute_query ; End if ; End ]
                                                              Query iden with 1 result nodes - CONTENT in line 46: [cpr_codigo ]
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapFunctionCall... executing!
                                                              Model Element astm::gastm::FunctionCallExpression created
                                                              Executing queries...
                                                                Query exp with 0 result nodes
                                                                Query params with 0 result nodes
                                                                Query iden with 1 result nodes - CONTENT in line 46: [cpr_codigo ]
                                                                Query fc with 1 result nodes - CONTENT : [cpr_codigo ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                - OPERATION_CREATION: astm::gastm::Name created
                                                                - QUERY_ACCESS: variable: iden - 
                                                                  node: identifier (kind) - leaf: ID (kind) - cpr_codigo (value) 
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                            RULE: skipAllArithmeticRules... executing!
                                                            Skip Rule skipAllArithmeticRules executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                              Query s with 1 result nodes - CONTENT : [( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipToExprBoolFromExprParen... executing!
                                                            Skip Rule skipToExprBoolFromExprParen executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : global . seu_codigo ) ]
                                                              Query s with 0 result nodes
                                                            Locating skip query... SKIP VARIABLE DOESNT EXIST
                                                            - IF detected...true!
                                                            - OPERATION_CREATION: astm::gastm::Equal created


                                                - IF detected...true!
                                                - QUERY_RESULT: 2 bindings:
                                                  (1/2) result node: selected_table (kind). Rule... calling mapTable rule

                                                  RULE: mapTable... executing!
                                                    Model Element astm::sastm::RDBTableReference created
                                                    Executing queries...
                                                      Query st with 1 result nodes - CONTENT : [otg_cprogramas ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: selected_table (kind) - Result: otg_cprogramas

                                                  (2/2) result node: selected_table (kind). Rule... calling mapTable rule

                                                  RULE: mapTable... executing!
                                                    Model Element astm::sastm::RDBTableReference created
                                                    Executing queries...
                                                      Query st with 1 result nodes - CONTENT : [otg_programas ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: selected_table (kind) - Result: otg_programas


                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT in line 43: [: peu_tipo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :peu_tipo

                                          (2/2) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT in line 43: [: wcpr_codigo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :wcpr_codigo


                                    (4/9) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 50: [go_block ( 'otg_perpeuropeos' ) ]
                                        Query st with 1 result nodes - CONTENT : [go_block ( 'otg_perpeuropeos' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                              Query params with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                              Query iden with 1 result nodes - CONTENT in line 50: [go_block ]
                                              Query fc with 1 result nodes - CONTENT in line 50: [go_block ( 'otg_perpeuropeos' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - go_block (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                    Query expA with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['otg_perpeuropeos' ]
                                                            Query st with 1 result nodes - CONTENT in line 50: ['otg_perpeuropeos' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'otg_perpeuropeos' 




                                    (5/9) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: elseBody
                                    (6/9) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 58: [go_block ( 'otg_upeuropeos' ) ]
                                        Query st with 1 result nodes - CONTENT : [go_block ( 'otg_upeuropeos' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                              Query params with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                              Query iden with 1 result nodes - CONTENT in line 58: [go_block ]
                                              Query fc with 1 result nodes - CONTENT in line 58: [go_block ( 'otg_upeuropeos' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - go_block (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                    Query expA with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['otg_upeuropeos' ]
                                                            Query st with 1 result nodes - CONTENT in line 58: ['otg_upeuropeos' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'otg_upeuropeos' 




                                    (7/9) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: elseBody
                                    (8/9) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 65: [go_block ( 'otg_peuropeos' ) ]
                                        Query st with 1 result nodes - CONTENT : [go_block ( 'otg_peuropeos' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                              Query params with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                              Query iden with 1 result nodes - CONTENT in line 65: [go_block ]
                                              Query fc with 1 result nodes - CONTENT in line 65: [go_block ( 'otg_peuropeos' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - go_block (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                    Query expA with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                          Query s with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['otg_peuropeos' ]
                                                            Query st with 1 result nodes - CONTENT in line 65: ['otg_peuropeos' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'otg_peuropeos' 




                                    (9/9) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [null ]
                                        Query value with 1 result nodes - CONTENT in line 67: [: global . seu_codigo ]
                                        Query as with 1 result nodes - CONTENT in line 67: [: global . seu_codigo := null ]
                                        Query st with 1 result nodes - CONTENT : [: global . seu_codigo := null ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :global.seu_codigo
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [null ]
                                            Query s with 1 result nodes - CONTENT : [null ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [null ]
                                            Query s with 1 result nodes - CONTENT : [null ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [null ]
                                            Query s with 1 result nodes - CONTENT : [null ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapNullLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                              Query st with 1 result nodes - CONTENT in line 67: [null ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: null 



                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [execute_query ]
                                  Query st with 1 result nodes - CONTENT : [execute_query ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 70: [execute_query ]
                                        Query fc with 1 result nodes - CONTENT : [execute_query ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - execute_query (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (2/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS PRE-FORM : global . item := NULL ; : global . query := 'FALSE' ; ]
                Query stats with 2 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - PRE-FORM (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                  RULE: mapAssignment... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT : [NULL ]
                      Query value with 1 result nodes - CONTENT in line 1: [: global . item ]
                      Query as with 1 result nodes - CONTENT in line 1: [: global . item := NULL ]
                      Query st with 1 result nodes - CONTENT : [: global . item := NULL ]
                    Executing mappings...
                      - OPERATION_CREATION: astm::gastm::BinaryExpression created
                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                      - OPERATION_CREATION: astm::gastm::Name created
                      - CODE:  - node: lvalue (kind) - Result: :global.item
                      - OPERATION_CREATION: astm::gastm::OperatorAssign created
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [NULL ]
                          Query s with 1 result nodes - CONTENT : [NULL ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipToExprAdd... executing!
                        Skip Rule skipToExprAdd executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [NULL ]
                          Query s with 1 result nodes - CONTENT : [NULL ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipAllArithmeticRules... executing!
                        Skip Rule skipAllArithmeticRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [NULL ]
                          Query s with 1 result nodes - CONTENT : [NULL ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapNullLiteral... executing!
                          Model Element astm::gastm::StringLiteral created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [NULL ]
                            Query st with 1 result nodes - CONTENT in line 1: [NULL ]
                          Executing mappings...
                            - CODE:  - node: simple_expression (kind) - Result: NULL 


                  (2/2) result node: statement (kind). Rule... calling mapAssignment rule

                  RULE: mapAssignment... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT : ['FALSE' ]
                      Query value with 1 result nodes - CONTENT in line 2: [: global . query ]
                      Query as with 1 result nodes - CONTENT in line 2: [: global . query := 'FALSE' ]
                      Query st with 1 result nodes - CONTENT : [: global . query := 'FALSE' ]
                    Executing mappings...
                      - OPERATION_CREATION: astm::gastm::BinaryExpression created
                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                      - OPERATION_CREATION: astm::gastm::Name created
                      - CODE:  - node: lvalue (kind) - Result: :global.query
                      - OPERATION_CREATION: astm::gastm::OperatorAssign created
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : ['FALSE' ]
                          Query s with 1 result nodes - CONTENT : ['FALSE' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipToExprAdd... executing!
                        Skip Rule skipToExprAdd executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : ['FALSE' ]
                          Query s with 1 result nodes - CONTENT : ['FALSE' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipAllArithmeticRules... executing!
                        Skip Rule skipAllArithmeticRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : ['FALSE' ]
                          Query s with 1 result nodes - CONTENT : ['FALSE' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapStringLiteral... executing!
                          Model Element astm::gastm::StringLiteral created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : ['FALSE' ]
                            Query st with 1 result nodes - CONTENT in line 2: ['FALSE' ]
                          Executing mappings...
                            - CODE:  - node: simple_expression (kind) - Result: 'FALSE' 



            (3/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS POST-TEXT-ITEM set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ; set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ; ]
                Query stats with 2 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-TEXT-ITEM (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ]
                      Query st with 1 result nodes - CONTENT : [set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 3 result nodes
                            Query params with 3 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [set_item_property ]
                            Query fc with 1 result nodes - CONTENT in line 1: [set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'DEFAULT' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - set_item_property (value) 
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                  Query expA with 1 result nodes - CONTENT : [: system . cursor_item ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFormsVariableFromExpAdd... executing!
                                        Model Element astm::gastm::IdentifierReference created
                                        Executing queries...
                                          Query se with 1 result nodes - CONTENT in line 1: [: system . cursor_item ]
                                          Query ea with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - CODE:  - node: simple_expression (kind) - Result: :system.cursor_item


                              (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                  Query expA with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query cast2 with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query cast1 with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query block with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 1: [CURRENT_RECORD_ATTRIBUTE ]
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 1 result nodes - CONTENT in line 1: [CURRENT_RECORD_ATTRIBUTE ]
                                          Query fc with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - CURRENT_RECORD_ATTRIBUTE (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                  Query expA with 1 result nodes - CONTENT : ['DEFAULT' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                        Query s with 1 result nodes - CONTENT : ['DEFAULT' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                        Query s with 1 result nodes - CONTENT : ['DEFAULT' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                        Query s with 1 result nodes - CONTENT : ['DEFAULT' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['DEFAULT' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'DEFAULT' 




                  (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 2: [set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ]
                      Query st with 1 result nodes - CONTENT : [set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 3 result nodes
                            Query params with 3 result nodes
                            Query iden with 1 result nodes - CONTENT in line 2: [set_item_property ]
                            Query fc with 1 result nodes - CONTENT in line 2: [set_item_property ( : system . cursor_item , VISUAL_ATTRIBUTE , 'DEFAULT' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - set_item_property (value) 
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                  Query expA with 1 result nodes - CONTENT : [: system . cursor_item ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFormsVariableFromExpAdd... executing!
                                        Model Element astm::gastm::IdentifierReference created
                                        Executing queries...
                                          Query se with 1 result nodes - CONTENT in line 2: [: system . cursor_item ]
                                          Query ea with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - CODE:  - node: simple_expression (kind) - Result: :system.cursor_item


                              (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                  Query expA with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                        Query cast2 with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                        Query cast1 with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                        Query block with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 2: [VISUAL_ATTRIBUTE ]
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 1 result nodes - CONTENT in line 2: [VISUAL_ATTRIBUTE ]
                                          Query fc with 1 result nodes - CONTENT : [VISUAL_ATTRIBUTE ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - VISUAL_ATTRIBUTE (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                  Query expA with 1 result nodes - CONTENT : ['DEFAULT' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                        Query s with 1 result nodes - CONTENT : ['DEFAULT' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                        Query s with 1 result nodes - CONTENT : ['DEFAULT' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                        Query s with 1 result nodes - CONTENT : ['DEFAULT' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['DEFAULT' ]
                                          Query st with 1 result nodes - CONTENT in line 2: ['DEFAULT' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'DEFAULT' 





            (4/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS KEY-LISTVAL declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ; ]
                Query stats with 1 result nodes - CONTENT : [declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-LISTVAL (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ]
                      Query block with 1 result nodes - CONTENT in line 3: [declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ]
                      Query decls with 1 result nodes - CONTENT : [finicio date ; ]
                      Query st with 1 result nodes - CONTENT : [declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [LIST_VALUES ]
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 5: [= ]
                                  Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 5: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                  Query expl2 with 1 result nodes - CONTENT : ['DATE' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                      Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                      Query cast2 with 2 result nodes
                                      Query cast1 with 2 result nodes
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 5: [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                      Query block with 1 result nodes - CONTENT in line 3: [declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ]
                                      Query iden with 4 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 5: [GET_ITEM_PROPERTY ]
                                        Query fc with 1 result nodes - CONTENT in line 5: [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - GET_ITEM_PROPERTY (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                              Query expA with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                    Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                    Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                    Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 5: [: SYSTEM . CURSOR_ITEM ]
                                                      Query ea with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.CURSOR_ITEM


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [DATATYPE ]
                                              Query expA with 1 result nodes - CONTENT : [DATATYPE ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Query s with 1 result nodes - CONTENT : [DATATYPE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Query s with 1 result nodes - CONTENT : [DATATYPE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Query s with 1 result nodes - CONTENT : [DATATYPE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Query cast2 with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Query cast1 with 0 result nodes
                                                    Query dec with 0 result nodes
                                                    Query s with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Query block with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 5: [DATATYPE ]
                                                  - IF detected...false! executing ELSE part 
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapFunctionCall... executing!
                                                    Model Element astm::gastm::FunctionCallExpression created
                                                    Executing queries...
                                                      Query exp with 0 result nodes
                                                      Query params with 0 result nodes
                                                      Query iden with 1 result nodes - CONTENT in line 5: [DATATYPE ]
                                                      Query fc with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - QUERY_ACCESS: variable: iden - 
                                                        node: identifier (kind) - leaf: ID (kind) - DATATYPE (value) 
                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['DATE' ]
                                      Query s with 1 result nodes - CONTENT : ['DATE' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['DATE' ]
                                        Query st with 1 result nodes - CONTENT in line 5: ['DATE' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'DATE' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 1 result nodes - CONTENT : [finicio := sysdate ]
                                  Query thenSt with 1 result nodes - CONTENT : [finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                  Query st with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ]
                                  Query cond with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE is not null ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE is not null ]
                                      Query s with 1 result nodes - CONTENT in line 6: [: SYSTEM . CURRENT_VALUE is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 6: [: SYSTEM . CURRENT_VALUE is not null ]
                                        Query expa with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                            Query s with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 6: [: SYSTEM . CURRENT_VALUE ]
                                              Query ea with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.CURRENT_VALUE

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                        Query value with 1 result nodes - CONTENT : [finicio ]
                                        Query as with 1 result nodes - CONTENT in line 7: [finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                        Query st with 1 result nodes - CONTENT : [finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: finicio
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                            Query s with 1 result nodes - CONTENT : [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                            Query s with 1 result nodes - CONTENT : [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                            Query s with 1 result nodes - CONTENT : [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                            Query cast2 with 1 result nodes - CONTENT : [to_date ]
                                            Query cast1 with 1 result nodes - CONTENT : [to_date ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 7: [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                            Query block with 1 result nodes - CONTENT in line 3: [declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ]
                                            Query iden with 3 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 2 result nodes
                                              Query params with 2 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 7: [to_date ]
                                              Query fc with 1 result nodes - CONTENT in line 7: [to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - to_date (value) 
                                              - QUERY_RESULT: 2 bindings:
                                                (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                    Query expA with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFormsVariableFromExpAdd... executing!
                                                          Model Element astm::gastm::IdentifierReference created
                                                          Executing queries...
                                                            Query se with 1 result nodes - CONTENT in line 7: [: SYSTEM . CURRENT_VALUE ]
                                                            Query ea with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_VALUE ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.CURRENT_VALUE


                                                (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                    Query expA with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                          Query s with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                          Query s with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                          Query s with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['DD-MON-YYYY' ]
                                                            Query st with 1 result nodes - CONTENT in line 7: ['DD-MON-YYYY' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'DD-MON-YYYY' 




                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [sysdate ]
                                        Query value with 1 result nodes - CONTENT : [finicio ]
                                        Query as with 1 result nodes - CONTENT in line 9: [finicio := sysdate ]
                                        Query st with 1 result nodes - CONTENT : [finicio := sysdate ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: finicio
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [sysdate ]
                                            Query s with 1 result nodes - CONTENT : [sysdate ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [sysdate ]
                                            Query s with 1 result nodes - CONTENT : [sysdate ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [sysdate ]
                                            Query s with 1 result nodes - CONTENT : [sysdate ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [sysdate ]
                                            Query cast2 with 1 result nodes - CONTENT : [sysdate ]
                                            Query cast1 with 1 result nodes - CONTENT : [sysdate ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [sysdate ]
                                            Query block with 1 result nodes - CONTENT in line 3: [declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ]
                                            Query iden with 1 result nodes - CONTENT in line 9: [sysdate ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 9: [sysdate ]
                                              Query fc with 1 result nodes - CONTENT : [sysdate ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - sysdate (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 11: [date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ]
                                  Query st with 1 result nodes - CONTENT : [date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 10 result nodes
                                        Query params with 10 result nodes
                                        Query iden with 2 result nodes
                                        Query fc with 1 result nodes - CONTENT in line 11: [date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                          node: identifier (kind) - leaf: ID (kind) - get_date (value) 
                                        - QUERY_RESULT: 10 bindings:
                                          (1/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [finicio ]
                                              Query expA with 1 result nodes - CONTENT : [finicio ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [finicio ]
                                                    Query s with 1 result nodes - CONTENT : [finicio ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [finicio ]
                                                    Query s with 1 result nodes - CONTENT : [finicio ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [finicio ]
                                                    Query s with 1 result nodes - CONTENT : [finicio ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [finicio ]
                                                    Query cast2 with 1 result nodes - CONTENT : [finicio ]
                                                    Query cast1 with 1 result nodes - CONTENT : [finicio ]
                                                    Query dec with 1 result nodes - CONTENT : [finicio date ; ]
                                                    Query s with 1 result nodes - CONTENT : [finicio ]
                                                    Query block with 1 result nodes - CONTENT in line 3: [declare finicio date ; begin GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN : SYSTEM . CURRENT_VALUE is not null then finicio := to_date ( : SYSTEM . CURRENT_VALUE , 'DD-MON-YYYY' ) ; else finicio := sysdate ; end if ; date_lov . get_date ( finicio , : SYSTEM . CURRENT_ITEM , 240 , 60 , 'Calendario' , 'Aceptar' , 'Cancelar' , TRUE , FALSE , FALSE ) ; ELSE LIST_VALUES ; END IF ; end ]
                                                    Query iden with 1 result nodes - CONTENT in line 12: [finicio ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                              Query expA with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                                    Query s with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                                    Query s with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                                    Query s with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 13: [: SYSTEM . CURRENT_ITEM ]
                                                      Query ea with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_ITEM ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.CURRENT_ITEM


                                          (3/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [240 ]
                                              Query expA with 1 result nodes - CONTENT : [240 ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [240 ]
                                                    Query s with 1 result nodes - CONTENT : [240 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [240 ]
                                                    Query s with 1 result nodes - CONTENT : [240 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [240 ]
                                                    Query s with 1 result nodes - CONTENT : [240 ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (4/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [60 ]
                                              Query expA with 1 result nodes - CONTENT : [60 ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [60 ]
                                                    Query s with 1 result nodes - CONTENT : [60 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [60 ]
                                                    Query s with 1 result nodes - CONTENT : [60 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [60 ]
                                                    Query s with 1 result nodes - CONTENT : [60 ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (5/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Calendario' ]
                                              Query expA with 1 result nodes - CONTENT : ['Calendario' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Calendario' ]
                                                    Query s with 1 result nodes - CONTENT : ['Calendario' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Calendario' ]
                                                    Query s with 1 result nodes - CONTENT : ['Calendario' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Calendario' ]
                                                    Query s with 1 result nodes - CONTENT : ['Calendario' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Calendario' ]
                                                      Query st with 1 result nodes - CONTENT in line 16: ['Calendario' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Calendario' 


                                          (6/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query expA with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                      Query st with 1 result nodes - CONTENT in line 17: ['Aceptar' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Aceptar' 


                                          (7/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Cancelar' ]
                                              Query expA with 1 result nodes - CONTENT : ['Cancelar' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                      Query st with 1 result nodes - CONTENT in line 18: ['Cancelar' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Cancelar' 


                                          (8/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [TRUE ]
                                              Query expA with 1 result nodes - CONTENT : [TRUE ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [TRUE ]
                                                    Query s with 1 result nodes - CONTENT : [TRUE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [TRUE ]
                                                    Query s with 1 result nodes - CONTENT : [TRUE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [TRUE ]
                                                    Query s with 1 result nodes - CONTENT : [TRUE ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (9/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [FALSE ]
                                              Query expA with 1 result nodes - CONTENT : [FALSE ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [FALSE ]
                                                    Query s with 1 result nodes - CONTENT : [FALSE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [FALSE ]
                                                    Query s with 1 result nodes - CONTENT : [FALSE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [FALSE ]
                                                    Query s with 1 result nodes - CONTENT : [FALSE ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (10/10) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [FALSE ]
                                              Query expA with 1 result nodes - CONTENT : [FALSE ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [FALSE ]
                                                    Query s with 1 result nodes - CONTENT : [FALSE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [FALSE ]
                                                    Query s with 1 result nodes - CONTENT : [FALSE ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [FALSE ]
                                                    Query s with 1 result nodes - CONTENT : [FALSE ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [LIST_VALUES ]
                                  Query st with 1 result nodes - CONTENT : [LIST_VALUES ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 23: [LIST_VALUES ]
                                        Query fc with 1 result nodes - CONTENT : [LIST_VALUES ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - LIST_VALUES (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (5/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS WHEN-NEW-ITEM-INSTANCE LISTA_VALORES ; ]
                Query stats with 1 result nodes - CONTENT : [LISTA_VALORES ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-NEW-ITEM-INSTANCE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT : [LISTA_VALORES ]
                      Query st with 1 result nodes - CONTENT : [LISTA_VALORES ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 0 result nodes
                            Query params with 0 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [LISTA_VALORES ]
                            Query fc with 1 result nodes - CONTENT : [LISTA_VALORES ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - LISTA_VALORES (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (6/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS WHEN-MOUSE-DOUBLECLICK GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ; ]
                Query stats with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-DOUBLECLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ]
                      Query st with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' THEN GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ; END IF ]
                      Query cond with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' ]
                          Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionRelational... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query eqOp with 1 result nodes - CONTENT in line 4: [= ]
                            Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) = 'TEXT ITEM' ]
                            Query gthOp with 0 result nodes
                            Query orOp with 0 result nodes
                            Query op with 1 result nodes - CONTENT in line 4: [= ]
                            Query geqOp with 0 result nodes
                            Query expl1 with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) ]
                            Query expl2 with 1 result nodes - CONTENT : ['TEXT ITEM' ]
                            Query leqOp with 0 result nodes
                            Query notEqOp with 0 result nodes
                            Query lthOp with 0 result nodes
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) ]
                                Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) ]
                                Query cast2 with 2 result nodes
                                Query cast1 with 2 result nodes
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 4: [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) ]
                                Query block with 0 result nodes
                                Query iden with 4 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 4: [GET_ITEM_PROPERTY ]
                                  Query fc with 1 result nodes - CONTENT in line 4: [GET_ITEM_PROPERTY ( : SYSTEM . MOUSE_ITEM , ITEM_TYPE ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - GET_ITEM_PROPERTY (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                        Query expA with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . MOUSE_ITEM ]
                                                Query ea with 1 result nodes - CONTENT : [: SYSTEM . MOUSE_ITEM ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.MOUSE_ITEM


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                        Query expA with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                              Query s with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                              Query s with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                              Query s with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                              Query cast2 with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                              Query cast1 with 0 result nodes
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                              Query block with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 4: [ITEM_TYPE ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 4: [ITEM_TYPE ]
                                                Query fc with 1 result nodes - CONTENT : [ITEM_TYPE ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - ITEM_TYPE (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : ['TEXT ITEM' ]
                                Query s with 1 result nodes - CONTENT : ['TEXT ITEM' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapStringLiteral... executing!
                                Model Element astm::gastm::StringLiteral created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['TEXT ITEM' ]
                                  Query st with 1 result nodes - CONTENT in line 4: ['TEXT ITEM' ]
                                Executing mappings...
                                  - CODE:  - node: simple_expression (kind) - Result: 'TEXT ITEM' 

                              - IF detected...true!
                              - OPERATION_CREATION: astm::gastm::Equal created

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 1 result nodes - CONTENT : [EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ]
                            Query st with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' THEN EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT in line 5: [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling mapBinaryExpressionOr rule

                              RULE: mapBinaryExpressionOr... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 5: [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' OR GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                  Query expo1 with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' ]
                                  Query expo2 with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_or (kind). Rule... calling skipBinaryExpressionAnd rule

                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' ]
                                      Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' ]
                                      Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 5: [= ]
                                        Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) = 'TRUE' ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 5: [= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) ]
                                        Query expl2 with 1 result nodes - CONTENT : ['TRUE' ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) ]
                                            Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) ]
                                            Query cast2 with 2 result nodes
                                            Query cast1 with 2 result nodes
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 5: [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) ]
                                            Query block with 0 result nodes
                                            Query iden with 4 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 2 result nodes
                                              Query params with 2 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 5: [GET_ITEM_PROPERTY ]
                                              Query fc with 1 result nodes - CONTENT in line 5: [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , LIST ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - GET_ITEM_PROPERTY (value) 
                                              - QUERY_RESULT: 2 bindings:
                                                (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                    Query expA with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFormsVariableFromExpAdd... executing!
                                                          Model Element astm::gastm::IdentifierReference created
                                                          Executing queries...
                                                            Query se with 1 result nodes - CONTENT in line 5: [: SYSTEM . CURSOR_ITEM ]
                                                            Query ea with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.CURSOR_ITEM


                                                (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [LIST ]
                                                    Query expA with 1 result nodes - CONTENT : [LIST ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [LIST ]
                                                          Query s with 1 result nodes - CONTENT : [LIST ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [LIST ]
                                                          Query s with 1 result nodes - CONTENT : [LIST ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [LIST ]
                                                          Query s with 1 result nodes - CONTENT : [LIST ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [LIST ]
                                                          Query cast2 with 1 result nodes - CONTENT : [LIST ]
                                                          Query cast1 with 0 result nodes
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [LIST ]
                                                          Query block with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 5: [LIST ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 5: [LIST ]
                                                            Query fc with 1 result nodes - CONTENT : [LIST ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - LIST (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['TRUE' ]
                                            Query s with 1 result nodes - CONTENT : ['TRUE' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapStringLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['TRUE' ]
                                              Query st with 1 result nodes - CONTENT in line 5: ['TRUE' ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: 'TRUE' 

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created

                                  - OPERATION_CREATION: astm::gastm::Or created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_or (kind). Rule... calling skipBinaryExpressionAnd rule

                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                      Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                      Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 6: [= ]
                                        Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) = 'DATE' ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 6: [= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                        Query expl2 with 1 result nodes - CONTENT : ['DATE' ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                            Query s with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                            Query cast2 with 2 result nodes
                                            Query cast1 with 2 result nodes
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 6: [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                            Query block with 0 result nodes
                                            Query iden with 4 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 2 result nodes
                                              Query params with 2 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 6: [GET_ITEM_PROPERTY ]
                                              Query fc with 1 result nodes - CONTENT in line 6: [GET_ITEM_PROPERTY ( : SYSTEM . CURSOR_ITEM , DATATYPE ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - GET_ITEM_PROPERTY (value) 
                                              - QUERY_RESULT: 2 bindings:
                                                (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                    Query expA with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                          Query s with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFormsVariableFromExpAdd... executing!
                                                          Model Element astm::gastm::IdentifierReference created
                                                          Executing queries...
                                                            Query se with 1 result nodes - CONTENT in line 6: [: SYSTEM . CURSOR_ITEM ]
                                                            Query ea with 1 result nodes - CONTENT : [: SYSTEM . CURSOR_ITEM ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.CURSOR_ITEM


                                                (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Query expA with 1 result nodes - CONTENT : [DATATYPE ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [DATATYPE ]
                                                          Query s with 1 result nodes - CONTENT : [DATATYPE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [DATATYPE ]
                                                          Query s with 1 result nodes - CONTENT : [DATATYPE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [DATATYPE ]
                                                          Query s with 1 result nodes - CONTENT : [DATATYPE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [DATATYPE ]
                                                          Query cast2 with 1 result nodes - CONTENT : [DATATYPE ]
                                                          Query cast1 with 0 result nodes
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [DATATYPE ]
                                                          Query block with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 6: [DATATYPE ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 6: [DATATYPE ]
                                                            Query fc with 1 result nodes - CONTENT : [DATATYPE ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - DATATYPE (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['DATE' ]
                                            Query s with 1 result nodes - CONTENT : ['DATE' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapStringLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['DATE' ]
                                              Query st with 1 result nodes - CONTENT in line 6: ['DATE' ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: 'DATE' 

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 7: [EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ]
                                  Query st with 1 result nodes - CONTENT : [EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                        Query params with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                        Query iden with 1 result nodes - CONTENT in line 7: [EXECUTE_TRIGGER ]
                                        Query fc with 1 result nodes - CONTENT in line 7: [EXECUTE_TRIGGER ( 'KEY-LISTVAL' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - EXECUTE_TRIGGER (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                              Query expA with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                                    Query s with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                                    Query s with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                                    Query s with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                                      Query st with 1 result nodes - CONTENT in line 7: ['KEY-LISTVAL' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'KEY-LISTVAL' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (7/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS KEY-HELP NULL ; ]
                Query stats with 1 result nodes - CONTENT : [NULL ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-HELP (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (8/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS KEY-MENU NULL ; ]
                Query stats with 1 result nodes - CONTENT : [NULL ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-MENU (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (9/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS ON-ERROR Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - ON-ERROR (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ]
                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ]
                      Query decls with 1 result nodes - CONTENT : [r number ; ]
                      Query st with 1 result nodes - CONTENT : [Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [Null ]
                            Query thenSt with 1 result nodes - CONTENT : [r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                            Query st with 1 result nodes - CONTENT : [ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ]
                            Query cond with 2 result nodes
                          Executing mappings...
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ERROR_CODE in ( 40510 , 40509 ) ]
                                Query s with 1 result nodes - CONTENT in line 4: [ERROR_CODE in ( 40510 , 40509 ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapRangeExpression... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [ERROR_CODE in ( 40510 , 40509 ) ]
                                  Query u with 1 result nodes - CONTENT : [40509 ]
                                  Query l with 1 result nodes - CONTENT : [40510 ]
                                  Query expa with 1 result nodes - CONTENT : [ERROR_CODE ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query s with 1 result nodes - CONTENT : [ERROR_CODE ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query cast2 with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query cast1 with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ]
                                      Query iden with 1 result nodes - CONTENT in line 4: [ERROR_CODE ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 4: [ERROR_CODE ]
                                        Query fc with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - ERROR_CODE (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                  - OPERATION_CREATION: astm::gastm::SpecificIn created
                                  - OPERATION_CREATION: astm::gastm::RangeExpression created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [40510 ]
                                      Query s with 1 result nodes - CONTENT : [40510 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [40510 ]
                                      Query s with 1 result nodes - CONTENT : [40510 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [40510 ]
                                      Query s with 1 result nodes - CONTENT : [40510 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [40509 ]
                                      Query s with 1 result nodes - CONTENT : [40509 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [40509 ]
                                      Query s with 1 result nodes - CONTENT : [40509 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [40509 ]
                                      Query s with 1 result nodes - CONTENT : [40509 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                              (2/2) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ERROR_CODE = 40200 ]
                                Query s with 1 result nodes - CONTENT : [ERROR_CODE = 40200 ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 6: [= ]
                                  Query exp with 1 result nodes - CONTENT : [ERROR_CODE = 40200 ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 6: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [ERROR_CODE ]
                                  Query expl2 with 1 result nodes - CONTENT : [40200 ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query s with 1 result nodes - CONTENT : [ERROR_CODE ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query cast2 with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query cast1 with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ]
                                      Query iden with 1 result nodes - CONTENT in line 6: [ERROR_CODE ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 6: [ERROR_CODE ]
                                        Query fc with 1 result nodes - CONTENT : [ERROR_CODE ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - ERROR_CODE (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [40200 ]
                                      Query s with 1 result nodes - CONTENT : [40200 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                  Query value with 1 result nodes - CONTENT : [r ]
                                  Query as with 1 result nodes - CONTENT in line 5: [r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                  Query st with 1 result nodes - CONTENT : [r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: r
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [alerta ]
                                      Query cast1 with 1 result nodes - CONTENT : [alerta ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 5: [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin ERROR_CODE in ( 40510 , 40509 ) Then r := alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ; Elsif ERROR_CODE = 40200 Then Null ; Else message ( ERROR_TYPE || '-' || TO_CHAR ( ERROR_CODE ) || ': ' || ERROR_TEXT ) ; End if ; End ]
                                      Query iden with 1 result nodes - CONTENT in line 5: [alerta ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 6 result nodes
                                        Query params with 6 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 5: [alerta ]
                                        Query fc with 1 result nodes - CONTENT in line 5: [alerta ( 'X' , 'Error de Actualización' , 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' , 'Aceptar' , null , null ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - alerta (value) 
                                        - QUERY_RESULT: 6 bindings:
                                          (1/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['X' ]
                                              Query expA with 1 result nodes - CONTENT : ['X' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['X' ]
                                                    Query s with 1 result nodes - CONTENT : ['X' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['X' ]
                                                    Query s with 1 result nodes - CONTENT : ['X' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['X' ]
                                                    Query s with 1 result nodes - CONTENT : ['X' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['X' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['X' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'X' 


                                          (2/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                              Query expA with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                                    Query s with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                                    Query s with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                                    Query s with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Error de Actualización' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['Error de Actualización' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Error de Actualización' 


                                          (3/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                              Query expA with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                                    Query s with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                                    Query s with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                                    Query s with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['Imposible actualizar registro. Es posible que el registro esté vinculado a otro' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Imposible actualizar registro. Es posible que el registro esté vinculado a otro' 


                                          (4/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query expA with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['Aceptar' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Aceptar' 


                                          (5/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [null ]
                                              Query expA with 1 result nodes - CONTENT : [null ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapNullLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : [null ]
                                                      Query st with 1 result nodes - CONTENT in line 5: [null ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: null 


                                          (6/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [null ]
                                              Query expA with 1 result nodes - CONTENT : [null ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapNullLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : [null ]
                                                      Query st with 1 result nodes - CONTENT in line 5: [null ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: null 




                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: elseBody



            (10/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS KEY-ENTQRY activa_consulta ; ]
                Query stats with 1 result nodes - CONTENT : [activa_consulta ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-ENTQRY (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT : [activa_consulta ]
                      Query st with 1 result nodes - CONTENT : [activa_consulta ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 0 result nodes
                            Query params with 0 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [activa_consulta ]
                            Query fc with 1 result nodes - CONTENT : [activa_consulta ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - activa_consulta (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (11/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS KEY-EXEQRY lista_valores ; ejecuta_consulta ; ]
                Query stats with 2 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-EXEQRY (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT : [lista_valores ]
                      Query st with 1 result nodes - CONTENT : [lista_valores ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 0 result nodes
                            Query params with 0 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [lista_valores ]
                            Query fc with 1 result nodes - CONTENT : [lista_valores ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - lista_valores (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                  (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT : [ejecuta_consulta ]
                      Query st with 1 result nodes - CONTENT : [ejecuta_consulta ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 0 result nodes
                            Query params with 0 result nodes
                            Query iden with 1 result nodes - CONTENT in line 2: [ejecuta_consulta ]
                            Query fc with 1 result nodes - CONTENT : [ejecuta_consulta ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - ejecuta_consulta (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (12/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS KEY-EXIT : system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-EXIT (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 1 result nodes - CONTENT : [exit_form ]
                      Query thenSt with 1 result nodes - CONTENT : [cancela_consulta ]
                      Query st with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' then cancela_consulta ; else exit_form ; end if ]
                      Query cond with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' ]
                          Query s with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionRelational... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query eqOp with 1 result nodes - CONTENT in line 1: [= ]
                            Query exp with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' ]
                            Query gthOp with 0 result nodes
                            Query orOp with 0 result nodes
                            Query op with 1 result nodes - CONTENT in line 1: [= ]
                            Query geqOp with 0 result nodes
                            Query expl1 with 1 result nodes - CONTENT : [: system . mode ]
                            Query expl2 with 1 result nodes - CONTENT : ['ENTER-QUERY' ]
                            Query leqOp with 0 result nodes
                            Query notEqOp with 0 result nodes
                            Query lthOp with 0 result nodes
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . mode ]
                                Query s with 1 result nodes - CONTENT : [: system . mode ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFormsVariableFromExpAdd... executing!
                                Model Element astm::gastm::IdentifierReference created
                                Executing queries...
                                  Query se with 1 result nodes - CONTENT in line 1: [: system . mode ]
                                  Query ea with 1 result nodes - CONTENT : [: system . mode ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: simple_expression (kind) - Result: :system.mode

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : ['ENTER-QUERY' ]
                                Query s with 1 result nodes - CONTENT : ['ENTER-QUERY' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapStringLiteral... executing!
                                Model Element astm::gastm::StringLiteral created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['ENTER-QUERY' ]
                                  Query st with 1 result nodes - CONTENT in line 1: ['ENTER-QUERY' ]
                                Executing mappings...
                                  - CODE:  - node: simple_expression (kind) - Result: 'ENTER-QUERY' 

                              - IF detected...true!
                              - OPERATION_CREATION: astm::gastm::Equal created

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT : [cancela_consulta ]
                            Query st with 1 result nodes - CONTENT : [cancela_consulta ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 2: [cancela_consulta ]
                                  Query fc with 1 result nodes - CONTENT : [cancela_consulta ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - cancela_consulta (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT : [exit_form ]
                            Query st with 1 result nodes - CONTENT : [exit_form ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 4: [exit_form ]
                                  Query fc with 1 result nodes - CONTENT : [exit_form ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - exit_form (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST




            (13/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS ON-CLEAR-DETAILS BEGIN Clear_All_Master_Details ; END ; ]
                Query stats with 1 result nodes - CONTENT : [BEGIN Clear_All_Master_Details ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - ON-CLEAR-DETAILS (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [Clear_All_Master_Details ]
                      Query block with 1 result nodes - CONTENT in line 4: [BEGIN Clear_All_Master_Details ; END ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [BEGIN Clear_All_Master_Details ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT : [Clear_All_Master_Details ]
                            Query st with 1 result nodes - CONTENT : [Clear_All_Master_Details ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 5: [Clear_All_Master_Details ]
                                  Query fc with 1 result nodes - CONTENT : [Clear_All_Master_Details ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - Clear_All_Master_Details (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST




            (14/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Module OTG_PEUROPEOS WHEN-TAB-PAGE-CHANGED DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-TAB-PAGE-CHANGED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 2 result nodes
                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
                      Query decls with 1 result nodes - CONTENT : [tp_nm VARCHAR2 ( 30 ) ; ]
                      Query st with 1 result nodes - CONTENT : [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: SYSTEM . TAB_NEW_PAGE ]
                            Query value with 1 result nodes - CONTENT : [tp_nm ]
                            Query as with 1 result nodes - CONTENT in line 4: [tp_nm := : SYSTEM . TAB_NEW_PAGE ]
                            Query st with 1 result nodes - CONTENT : [tp_nm := : SYSTEM . TAB_NEW_PAGE ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: tp_nm
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . TAB_NEW_PAGE ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . TAB_NEW_PAGE ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . TAB_NEW_PAGE ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . TAB_NEW_PAGE ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . TAB_NEW_PAGE ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . TAB_NEW_PAGE ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFormsVariableFromExpAdd... executing!
                                Model Element astm::gastm::IdentifierReference created
                                Executing queries...
                                  Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . TAB_NEW_PAGE ]
                                  Query ea with 1 result nodes - CONTENT : [: SYSTEM . TAB_NEW_PAGE ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.TAB_NEW_PAGE


                        (2/2) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [GO_ITEM ( 'WDNI_PPE_PER_ID' ) ]
                            Query thenSt with 1 result nodes - CONTENT : [GO_ITEM ( 'PEU_ACRONIMO' ) ]
                            Query st with 1 result nodes - CONTENT : [tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ]
                            Query cond with 6 result nodes
                          Executing mappings...
                            - QUERY_RESULT: 6 bindings:
                              (1/6) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [tp_nm = 'DATOS' ]
                                Query s with 1 result nodes - CONTENT : [tp_nm = 'DATOS' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 5: [= ]
                                  Query exp with 1 result nodes - CONTENT : [tp_nm = 'DATOS' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 5: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [tp_nm ]
                                  Query expl2 with 1 result nodes - CONTENT : ['DATOS' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast2 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast1 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query dec with 1 result nodes - CONTENT : [tp_nm VARCHAR2 ( 30 ) ; ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 5: [tp_nm ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['DATOS' ]
                                      Query s with 1 result nodes - CONTENT : ['DATOS' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['DATOS' ]
                                        Query st with 1 result nodes - CONTENT in line 5: ['DATOS' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'DATOS' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                              (2/6) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [tp_nm = 'INVEST' ]
                                Query s with 1 result nodes - CONTENT : [tp_nm = 'INVEST' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 7: [= ]
                                  Query exp with 1 result nodes - CONTENT : [tp_nm = 'INVEST' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 7: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [tp_nm ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INVEST' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast2 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast1 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query dec with 1 result nodes - CONTENT : [tp_nm VARCHAR2 ( 30 ) ; ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 7: [tp_nm ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INVEST' ]
                                      Query s with 1 result nodes - CONTENT : ['INVEST' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INVEST' ]
                                        Query st with 1 result nodes - CONTENT in line 7: ['INVEST' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INVEST' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                              (3/6) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [tp_nm = 'PRESU' ]
                                Query s with 1 result nodes - CONTENT : [tp_nm = 'PRESU' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 9: [= ]
                                  Query exp with 1 result nodes - CONTENT : [tp_nm = 'PRESU' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 9: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [tp_nm ]
                                  Query expl2 with 1 result nodes - CONTENT : ['PRESU' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast2 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast1 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query dec with 1 result nodes - CONTENT : [tp_nm VARCHAR2 ( 30 ) ; ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 9: [tp_nm ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['PRESU' ]
                                      Query s with 1 result nodes - CONTENT : ['PRESU' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['PRESU' ]
                                        Query st with 1 result nodes - CONTENT in line 9: ['PRESU' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'PRESU' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                              (4/6) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [tp_nm = 'INGRE' ]
                                Query s with 1 result nodes - CONTENT : [tp_nm = 'INGRE' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 11: [= ]
                                  Query exp with 1 result nodes - CONTENT : [tp_nm = 'INGRE' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 11: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [tp_nm ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INGRE' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast2 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast1 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query dec with 1 result nodes - CONTENT : [tp_nm VARCHAR2 ( 30 ) ; ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 11: [tp_nm ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INGRE' ]
                                      Query s with 1 result nodes - CONTENT : ['INGRE' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INGRE' ]
                                        Query st with 1 result nodes - CONTENT in line 11: ['INGRE' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INGRE' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                              (5/6) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [tp_nm = 'SEGUIM' ]
                                Query s with 1 result nodes - CONTENT : [tp_nm = 'SEGUIM' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 14: [= ]
                                  Query exp with 1 result nodes - CONTENT : [tp_nm = 'SEGUIM' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 14: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [tp_nm ]
                                  Query expl2 with 1 result nodes - CONTENT : ['SEGUIM' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast2 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast1 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query dec with 1 result nodes - CONTENT : [tp_nm VARCHAR2 ( 30 ) ; ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 14: [tp_nm ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['SEGUIM' ]
                                      Query s with 1 result nodes - CONTENT : ['SEGUIM' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['SEGUIM' ]
                                        Query st with 1 result nodes - CONTENT in line 14: ['SEGUIM' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'SEGUIM' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                              (6/6) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [tp_nm = 'OBSERV' ]
                                Query s with 1 result nodes - CONTENT : [tp_nm = 'OBSERV' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 16: [= ]
                                  Query exp with 1 result nodes - CONTENT : [tp_nm = 'OBSERV' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 16: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [tp_nm ]
                                  Query expl2 with 1 result nodes - CONTENT : ['OBSERV' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast2 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query cast1 with 1 result nodes - CONTENT : [tp_nm ]
                                      Query dec with 1 result nodes - CONTENT : [tp_nm VARCHAR2 ( 30 ) ; ]
                                      Query s with 1 result nodes - CONTENT : [tp_nm ]
                                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE tp_nm VARCHAR2 ( 30 ) ; BEGIN tp_nm := : SYSTEM . TAB_NEW_PAGE ; tp_nm = 'DATOS' Then GO_ITEM ( 'PEU_ACRONIMO' ) ; ElsIf tp_nm = 'INVEST' Then GO_ITEM ( 'WDNI_PPE_PER_ID' ) ; ElsIf tp_nm = 'PRESU' Then GO_ITEM ( 'JPE_JUSTIFICA' ) ; ElsIf tp_nm = 'INGRE' Then NULL ; ElsIf tp_nm = 'SEGUIM' Then GO_ITEM ( 'SPE_FECHA' ) ; ElsIf tp_nm = 'OBSERV' Then GO_ITEM ( 'OPE_OBSERVACION' ) ; End If ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 16: [tp_nm ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['OBSERV' ]
                                      Query s with 1 result nodes - CONTENT : ['OBSERV' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['OBSERV' ]
                                        Query st with 1 result nodes - CONTENT in line 16: ['OBSERV' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'OBSERV' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 6: [GO_ITEM ( 'PEU_ACRONIMO' ) ]
                                  Query st with 1 result nodes - CONTENT : [GO_ITEM ( 'PEU_ACRONIMO' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                        Query params with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                        Query iden with 1 result nodes - CONTENT in line 6: [GO_ITEM ]
                                        Query fc with 1 result nodes - CONTENT in line 6: [GO_ITEM ( 'PEU_ACRONIMO' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - GO_ITEM (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                              Query expA with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                                    Query s with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                                    Query s with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                                    Query s with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['PEU_ACRONIMO' ]
                                                      Query st with 1 result nodes - CONTENT in line 6: ['PEU_ACRONIMO' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'PEU_ACRONIMO' 




                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 8: [GO_ITEM ( 'WDNI_PPE_PER_ID' ) ]
                                  Query st with 1 result nodes - CONTENT : [GO_ITEM ( 'WDNI_PPE_PER_ID' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                        Query params with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                        Query iden with 1 result nodes - CONTENT in line 8: [GO_ITEM ]
                                        Query fc with 1 result nodes - CONTENT in line 8: [GO_ITEM ( 'WDNI_PPE_PER_ID' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - GO_ITEM (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                              Query expA with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                                    Query s with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                                    Query s with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                                    Query s with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['WDNI_PPE_PER_ID' ]
                                                      Query st with 1 result nodes - CONTENT in line 8: ['WDNI_PPE_PER_ID' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'WDNI_PPE_PER_ID' 







            (15/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PEUROPEOS PRE-QUERY declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ; ]
                Query stats with 1 result nodes - CONTENT : [declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - PRE-QUERY (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ]
                      Query block with 1 result nodes - CONTENT in line 3: [declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ]
                      Query decls with 1 result nodes - CONTENT : [existe number ; ]
                      Query st with 1 result nodes - CONTENT : [declare existe number ; begin : GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ; end ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO IS NOT NULL THEN : PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ; : GLOBAL . SEU_CODIGO := NULL ; end if ]
                            Query cond with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO IS NOT NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO IS NOT NULL ]
                                Query s with 1 result nodes - CONTENT in line 5: [: GLOBAL . SEU_CODIGO IS NOT NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 5: [: GLOBAL . SEU_CODIGO IS NOT NULL ]
                                  Query expa with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 5: [: GLOBAL . SEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :GLOBAL.SEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                  Query value with 1 result nodes - CONTENT in line 6: [: PEU_SEU_CODIGO ]
                                  Query as with 1 result nodes - CONTENT in line 6: [: PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ]
                                  Query st with 1 result nodes - CONTENT : [: PEU_SEU_CODIGO := : GLOBAL . SEU_CODIGO ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :PEU_SEU_CODIGO
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 6: [: GLOBAL . SEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :GLOBAL.SEU_CODIGO


                              (2/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [NULL ]
                                  Query value with 1 result nodes - CONTENT in line 7: [: GLOBAL . SEU_CODIGO ]
                                  Query as with 1 result nodes - CONTENT in line 7: [: GLOBAL . SEU_CODIGO := NULL ]
                                  Query st with 1 result nodes - CONTENT : [: GLOBAL . SEU_CODIGO := NULL ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :GLOBAL.SEU_CODIGO
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NULL ]
                                      Query s with 1 result nodes - CONTENT : [NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NULL ]
                                      Query s with 1 result nodes - CONTENT : [NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NULL ]
                                      Query s with 1 result nodes - CONTENT : [NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapNullLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [NULL ]
                                        Query st with 1 result nodes - CONTENT in line 7: [NULL ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: NULL 


                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (16/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PEUROPEOS PRE-INSERT select s_peu_codigo . nextval into : peu_codigo from dual ; ]
                Query stats with 1 result nodes - CONTENT : [select s_peu_codigo . nextval into : peu_codigo from dual ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - PRE-INSERT (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                  RULE: mapSelectStatement... executing!
                    Model Element astm::sastm::RDBSelectStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT in line 1: [select s_peu_codigo . nextval into : peu_codigo from dual ]
                      Query lvals with 1 result nodes - CONTENT in line 1: [: peu_codigo ]
                      Query st with 1 result nodes - CONTENT : [select s_peu_codigo . nextval into : peu_codigo from dual ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                        RULE: mapSelectExpression... executing!
                          Model Element astm::sastm::RDBSelectExpression created
                          Executing queries...
                            Query w with 0 result nodes
                            Query fromj with 0 result nodes
                            Query lvals with 1 result nodes - CONTENT in line 1: [: peu_codigo ]
                            Query fromn with 1 result nodes - CONTENT : [dual ]
                            Query isCount with 0 result nodes
                            Query sexpr with 1 result nodes - CONTENT in line 1: [select s_peu_codigo . nextval into : peu_codigo from dual ]
                            Query list with 1 result nodes - CONTENT : [s_peu_codigo . nextval ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                              RULE: mapColumn... executing!
                                Model Element astm::sastm::RDBColumnReference created
                                Executing queries...
                                  Query dc with 1 result nodes - CONTENT : [s_peu_codigo . nextval ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: displayed_column (kind) - Result: s_peu_codigo.nextval

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                              - IF detected...true!
                              - QUERY_RESULT: 1 bindings:
                                (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                RULE: mapTable... executing!
                                  Model Element astm::sastm::RDBTableReference created
                                  Executing queries...
                                    Query st with 1 result nodes - CONTENT : [dual ]
                                  Executing mappings...
                                    - OPERATION_CREATION: astm::gastm::Name created
                                    - CODE:  - node: selected_table (kind) - Result: dual


                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                        RULE: mapIntoVariable... executing!
                          Model Element astm::sastm::RDBHostVariableReference created
                          Executing queries...
                            Query l with 1 result nodes - CONTENT in line 1: [: peu_codigo ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: :peu_codigo



            (17/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - ON-POPULATE-DETAILS (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 8 result nodes
                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                      Query decls with 3 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 8 bindings:
                        (1/8) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 1 result nodes - CONTENT : [RETURN ]
                            Query st with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                                Query s with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                                Query s with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                                Query s with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                                Query s with 1 result nodes - CONTENT in line 15: [recstat = 'NEW' or recstat = 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionOr... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 15: [recstat = 'NEW' or recstat = 'INSERT' ]
                                  Query expo1 with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                  Query expo2 with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_or (kind). Rule... calling skipBinaryExpressionAnd rule

                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                      Query s with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                      Query s with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 15: [= ]
                                        Query exp with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 15: [= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [recstat ]
                                        Query expl2 with 1 result nodes - CONTENT : ['NEW' ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [recstat ]
                                            Query s with 1 result nodes - CONTENT : [recstat ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [recstat ]
                                            Query cast2 with 1 result nodes - CONTENT : [recstat ]
                                            Query cast1 with 1 result nodes - CONTENT : [recstat ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [recstat ]
                                            Query block with 0 result nodes
                                            Query iden with 1 result nodes - CONTENT in line 15: [recstat ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 15: [recstat ]
                                              Query fc with 1 result nodes - CONTENT : [recstat ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - recstat (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['NEW' ]
                                            Query s with 1 result nodes - CONTENT : ['NEW' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapStringLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['NEW' ]
                                              Query st with 1 result nodes - CONTENT in line 15: ['NEW' ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: 'NEW' 

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created

                                  - OPERATION_CREATION: astm::gastm::Or created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_or (kind). Rule... calling skipBinaryExpressionAnd rule

                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                      Query s with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                      Query s with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 15: [= ]
                                        Query exp with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 15: [= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [recstat ]
                                        Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [recstat ]
                                            Query s with 1 result nodes - CONTENT : [recstat ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [recstat ]
                                            Query cast2 with 1 result nodes - CONTENT : [recstat ]
                                            Query cast1 with 1 result nodes - CONTENT : [recstat ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [recstat ]
                                            Query block with 0 result nodes
                                            Query iden with 1 result nodes - CONTENT in line 15: [recstat ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 15: [recstat ]
                                              Query fc with 1 result nodes - CONTENT : [recstat ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - recstat (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                            Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapStringLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                              Query st with 1 result nodes - CONTENT in line 15: ['INSERT' ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapReturnStatement rule

                              RULE: mapReturnStatement... executing!
                                Model Element astm::gastm::ReturnStatement created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query st with 1 result nodes - CONTENT : [RETURN ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (2/8) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 21: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 21: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 21: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                  Query value with 1 result nodes - CONTENT : [rel_id ]
                                  Query as with 1 result nodes - CONTENT in line 22: [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: rel_id
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query cast1 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 22: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 22: [Find_Relation ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                        Query params with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                        Query iden with 1 result nodes - CONTENT in line 22: [Find_Relation ]
                                        Query fc with 1 result nodes - CONTENT in line 22: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Find_Relation (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 22: ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' 




                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 23: [Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 23: [Query_Master_Details ]
                                        Query fc with 1 result nodes - CONTENT in line 23: [Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Query_Master_Details (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [rel_id ]
                                              Query expA with 1 result nodes - CONTENT : [rel_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query dec with 1 result nodes - CONTENT : [rel_id Relation ; ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 23: [rel_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 23: ['OTG_JPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_JPEUROPEOS' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (3/8) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 31: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 31: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 31: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                  Query value with 1 result nodes - CONTENT : [rel_id ]
                                  Query as with 1 result nodes - CONTENT in line 32: [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: rel_id
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query cast1 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 32: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 32: [Find_Relation ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                        Query params with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                        Query iden with 1 result nodes - CONTENT in line 32: [Find_Relation ]
                                        Query fc with 1 result nodes - CONTENT in line 32: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Find_Relation (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 32: ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' 




                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 33: [Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 33: [Query_Master_Details ]
                                        Query fc with 1 result nodes - CONTENT in line 33: [Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Query_Master_Details (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [rel_id ]
                                              Query expA with 1 result nodes - CONTENT : [rel_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query dec with 1 result nodes - CONTENT : [rel_id Relation ; ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 33: [rel_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_SPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 33: ['OTG_SPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_SPEUROPEOS' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (4/8) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 41: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 41: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 41: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                  Query value with 1 result nodes - CONTENT : [rel_id ]
                                  Query as with 1 result nodes - CONTENT in line 42: [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: rel_id
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query cast1 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 42: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 42: [Find_Relation ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                        Query params with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                        Query iden with 1 result nodes - CONTENT in line 42: [Find_Relation ]
                                        Query fc with 1 result nodes - CONTENT in line 42: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Find_Relation (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 42: ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' 




                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 43: [Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 43: [Query_Master_Details ]
                                        Query fc with 1 result nodes - CONTENT in line 43: [Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Query_Master_Details (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [rel_id ]
                                              Query expA with 1 result nodes - CONTENT : [rel_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query dec with 1 result nodes - CONTENT : [rel_id Relation ; ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 43: [rel_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_OPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 43: ['OTG_OPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_OPEUROPEOS' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (5/8) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 51: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 51: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 51: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                  Query value with 1 result nodes - CONTENT : [rel_id ]
                                  Query as with 1 result nodes - CONTENT in line 52: [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: rel_id
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query cast1 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 52: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 52: [Find_Relation ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                        Query params with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                        Query iden with 1 result nodes - CONTENT in line 52: [Find_Relation ]
                                        Query fc with 1 result nodes - CONTENT in line 52: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Find_Relation (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 52: ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' 




                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 53: [Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 53: [Query_Master_Details ]
                                        Query fc with 1 result nodes - CONTENT in line 53: [Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Query_Master_Details (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [rel_id ]
                                              Query expA with 1 result nodes - CONTENT : [rel_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query dec with 1 result nodes - CONTENT : [rel_id Relation ; ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 53: [rel_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 53: ['OTG_PERPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_PERPEUROPEOS' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (6/8) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 61: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 61: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 61: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                  Query value with 1 result nodes - CONTENT : [rel_id ]
                                  Query as with 1 result nodes - CONTENT in line 62: [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: rel_id
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query cast1 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 62: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 62: [Find_Relation ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                        Query params with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                        Query iden with 1 result nodes - CONTENT in line 62: [Find_Relation ]
                                        Query fc with 1 result nodes - CONTENT in line 62: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Find_Relation (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 62: ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' 




                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 63: [Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 63: [Query_Master_Details ]
                                        Query fc with 1 result nodes - CONTENT in line 63: [Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Query_Master_Details (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [rel_id ]
                                              Query expA with 1 result nodes - CONTENT : [rel_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query dec with 1 result nodes - CONTENT : [rel_id Relation ; ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 63: [rel_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_UPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 63: ['OTG_UPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_UPEUROPEOS' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (7/8) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 71: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 71: [: OTG_PEUROPEOS . PEU_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 71: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                  Query value with 1 result nodes - CONTENT : [rel_id ]
                                  Query as with 1 result nodes - CONTENT in line 72: [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: rel_id
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query cast1 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 72: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 72: [Find_Relation ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                        Query params with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                        Query iden with 1 result nodes - CONTENT in line 72: [Find_Relation ]
                                        Query fc with 1 result nodes - CONTENT in line 72: [Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Find_Relation (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 72: ['OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' 




                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 73: [Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 73: [Query_Master_Details ]
                                        Query fc with 1 result nodes - CONTENT in line 73: [Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Query_Master_Details (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [rel_id ]
                                              Query expA with 1 result nodes - CONTENT : [rel_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query dec with 1 result nodes - CONTENT : [rel_id Relation ; ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 73: [rel_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_DISEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 73: ['OTG_DISEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_DISEUROPEOS' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (8/8) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                                Query s with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                                Query s with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                                Query s with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                                Query s with 1 result nodes - CONTENT : [: System . cursor_item <> startitm ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: System . cursor_item <> startitm ]
                                Query s with 1 result nodes - CONTENT : [: System . cursor_item <> startitm ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: System . cursor_item <> startitm ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 79: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: System . cursor_item ]
                                  Query expl2 with 1 result nodes - CONTENT : [startitm ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 79: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: System . cursor_item ]
                                      Query s with 1 result nodes - CONTENT : [: System . cursor_item ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 79: [: System . cursor_item ]
                                        Query ea with 1 result nodes - CONTENT : [: System . cursor_item ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :System.cursor_item

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [startitm ]
                                      Query s with 1 result nodes - CONTENT : [startitm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [startitm ]
                                      Query cast2 with 1 result nodes - CONTENT : [startitm ]
                                      Query cast1 with 1 result nodes - CONTENT : [startitm ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT : [startitm ]
                                      Query block with 0 result nodes
                                      Query iden with 1 result nodes - CONTENT in line 79: [startitm ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 79: [startitm ]
                                        Query fc with 1 result nodes - CONTENT : [startitm ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - startitm (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 80: [Go_Item ( startitm ) ]
                                  Query st with 1 result nodes - CONTENT : [Go_Item ( startitm ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [startitm ]
                                        Query params with 1 result nodes - CONTENT : [startitm ]
                                        Query iden with 1 result nodes - CONTENT in line 80: [Go_Item ]
                                        Query fc with 1 result nodes - CONTENT in line 80: [Go_Item ( startitm ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Go_Item (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [startitm ]
                                              Query expA with 1 result nodes - CONTENT : [startitm ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [startitm ]
                                                    Query s with 1 result nodes - CONTENT : [startitm ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [startitm ]
                                                    Query s with 1 result nodes - CONTENT : [startitm ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [startitm ]
                                                    Query s with 1 result nodes - CONTENT : [startitm ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [startitm ]
                                                    Query cast2 with 1 result nodes - CONTENT : [startitm ]
                                                    Query cast1 with 1 result nodes - CONTENT : [startitm ]
                                                    Query dec with 1 result nodes - CONTENT : [startitm VARCHAR2 ( 61 ) := : System . cursor_item ; ]
                                                    Query s with 1 result nodes - CONTENT : [startitm ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_JPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_JPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_SPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_SPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_OPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_OPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_PERPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PERPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_UPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_UPEUROPEOS' ) ; END IF ; ( ( : OTG_PEUROPEOS . PEU_CODIGO is not null ) ) THEN rel_id := Find_Relation ( 'OTG_PEUROPEOS.OTG_PEUROPEOS_OTG_DISEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_DISEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 80: [startitm ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [Check_Package_Failure ]
                                  Query st with 1 result nodes - CONTENT : [Check_Package_Failure ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 81: [Check_Package_Failure ]
                                        Query fc with 1 result nodes - CONTENT : [Check_Package_Failure ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Check_Package_Failure (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (18/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - ON-CHECK-DELETE-MASTER (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 24 result nodes
                      Query block with 1 result nodes - CONTENT in line 66: [DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ]
                      Query decls with 7 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_JPEUROPEOS_cur IS SELECT 1 FROM OTG_JPEUROPEOS WHERE JPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_SPEUROPEOS_cur IS SELECT 1 FROM OTG_SPEUROPEOS WHERE SPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_OPEUROPEOS_cur IS SELECT 1 FROM OTG_OPEUROPEOS WHERE OPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_PERPEUROPEOS_cur IS SELECT 1 FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_UPEUROPEOS_cur IS SELECT 1 FROM OTG_UPEUROPEOS WHERE UPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; CURSOR OTG_DISEUROPEOS_cur IS SELECT 1 FROM OTG_DISEUROPEOS O WHERE O . DPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ; BEGIN OPEN OTG_JPEUROPEOS_cur ; FETCH OTG_JPEUROPEOS_cur INTO Dummy_Define ; ( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_JPEUROPEOS_cur ; OPEN OTG_SPEUROPEOS_cur ; FETCH OTG_SPEUROPEOS_cur INTO Dummy_Define ; ( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_SPEUROPEOS_cur ; OPEN OTG_OPEUROPEOS_cur ; FETCH OTG_OPEUROPEOS_cur INTO Dummy_Define ; ( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_OPEUROPEOS_cur ; OPEN OTG_PERPEUROPEOS_cur ; FETCH OTG_PERPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PERPEUROPEOS_cur ; OPEN OTG_UPEUROPEOS_cur ; FETCH OTG_UPEUROPEOS_cur INTO Dummy_Define ; ( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_UPEUROPEOS_cur ; OPEN OTG_DISEUROPEOS_cur ; FETCH OTG_DISEUROPEOS_cur INTO Dummy_Define ; ( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_DISEUROPEOS_cur ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 24 bindings:
                        (1/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (2/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (3/24) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_JPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_JPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT in line 72: [OTG_JPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT in line 72: [OTG_JPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur ]
                                Query s with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur ]
                                Query cast2 with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur ]
                                Query cast1 with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur ]
                                Query block with 0 result nodes
                                Query iden with 1 result nodes - CONTENT in line 72: [OTG_JPEUROPEOS_cur ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 72: [OTG_JPEUROPEOS_cur ]
                                  Query fc with 1 result nodes - CONTENT : [OTG_JPEUROPEOS_cur ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - OTG_JPEUROPEOS_cur (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 73: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                  Query st with 1 result nodes - CONTENT : [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query params with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query iden with 1 result nodes - CONTENT in line 73: [Message ]
                                        Query fc with 1 result nodes - CONTENT in line 73: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Message (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expA with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                      Query st with 1 result nodes - CONTENT in line 73: ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' 




                              (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (4/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (5/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (6/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (7/24) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_SPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_SPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT in line 86: [OTG_SPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT in line 86: [OTG_SPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur ]
                                Query s with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur ]
                                Query cast2 with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur ]
                                Query cast1 with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur ]
                                Query block with 0 result nodes
                                Query iden with 1 result nodes - CONTENT in line 86: [OTG_SPEUROPEOS_cur ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 86: [OTG_SPEUROPEOS_cur ]
                                  Query fc with 1 result nodes - CONTENT : [OTG_SPEUROPEOS_cur ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - OTG_SPEUROPEOS_cur (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 87: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                  Query st with 1 result nodes - CONTENT : [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query params with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query iden with 1 result nodes - CONTENT in line 87: [Message ]
                                        Query fc with 1 result nodes - CONTENT in line 87: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Message (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expA with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                      Query st with 1 result nodes - CONTENT in line 87: ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' 




                              (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (8/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (9/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (10/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (11/24) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_OPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_OPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT in line 100: [OTG_OPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT in line 100: [OTG_OPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur ]
                                Query s with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur ]
                                Query cast2 with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur ]
                                Query cast1 with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur ]
                                Query block with 0 result nodes
                                Query iden with 1 result nodes - CONTENT in line 100: [OTG_OPEUROPEOS_cur ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 100: [OTG_OPEUROPEOS_cur ]
                                  Query fc with 1 result nodes - CONTENT : [OTG_OPEUROPEOS_cur ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - OTG_OPEUROPEOS_cur (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 101: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                  Query st with 1 result nodes - CONTENT : [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query params with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query iden with 1 result nodes - CONTENT in line 101: [Message ]
                                        Query fc with 1 result nodes - CONTENT in line 101: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Message (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expA with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                      Query st with 1 result nodes - CONTENT in line 101: ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' 




                              (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (12/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (13/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (14/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (15/24) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PERPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_PERPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT in line 114: [OTG_PERPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT in line 114: [OTG_PERPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur ]
                                Query s with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur ]
                                Query cast2 with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur ]
                                Query cast1 with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur ]
                                Query block with 0 result nodes
                                Query iden with 1 result nodes - CONTENT in line 114: [OTG_PERPEUROPEOS_cur ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 114: [OTG_PERPEUROPEOS_cur ]
                                  Query fc with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS_cur ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - OTG_PERPEUROPEOS_cur (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 115: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                  Query st with 1 result nodes - CONTENT : [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query params with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query iden with 1 result nodes - CONTENT in line 115: [Message ]
                                        Query fc with 1 result nodes - CONTENT in line 115: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Message (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expA with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                      Query st with 1 result nodes - CONTENT in line 115: ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' 




                              (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (16/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (17/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (18/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (19/24) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_UPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_UPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT in line 128: [OTG_UPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT in line 128: [OTG_UPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur ]
                                Query s with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur ]
                                Query cast2 with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur ]
                                Query cast1 with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur ]
                                Query block with 0 result nodes
                                Query iden with 1 result nodes - CONTENT in line 128: [OTG_UPEUROPEOS_cur ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 128: [OTG_UPEUROPEOS_cur ]
                                  Query fc with 1 result nodes - CONTENT : [OTG_UPEUROPEOS_cur ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - OTG_UPEUROPEOS_cur (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 129: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                  Query st with 1 result nodes - CONTENT : [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query params with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query iden with 1 result nodes - CONTENT in line 129: [Message ]
                                        Query fc with 1 result nodes - CONTENT in line 129: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Message (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expA with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                      Query st with 1 result nodes - CONTENT in line 129: ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' 




                              (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (20/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (21/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (22/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (23/24) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_DISEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_DISEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT in line 142: [OTG_DISEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT in line 142: [OTG_DISEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur ]
                                Query s with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur ]
                                Query cast2 with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur ]
                                Query cast1 with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur ]
                                Query block with 0 result nodes
                                Query iden with 1 result nodes - CONTENT in line 142: [OTG_DISEUROPEOS_cur ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 142: [OTG_DISEUROPEOS_cur ]
                                  Query fc with 1 result nodes - CONTENT : [OTG_DISEUROPEOS_cur ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - OTG_DISEUROPEOS_cur (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 143: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                  Query st with 1 result nodes - CONTENT : [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query params with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query iden with 1 result nodes - CONTENT in line 143: [Message ]
                                        Query fc with 1 result nodes - CONTENT in line 143: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Message (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expA with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                      Query st with 1 result nodes - CONTENT in line 143: ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' 




                              (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (24/24) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements


            (19/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PEUROPEOS WHEN-NEW-RECORD-INSTANCE : PEU_CG IS NULL THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; ELSE DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ; END IF ; BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; : peu_seu_codigo is not null then select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ; end if ; Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; ]
                Query stats with 4 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-NEW-RECORD-INSTANCE (value) 
                - QUERY_RESULT: 4 bindings:
                  (1/4) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 1 result nodes - CONTENT : [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                      Query thenSt with 1 result nodes - CONTENT : [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ]
                      Query st with 1 result nodes - CONTENT : [: PEU_CG IS NULL THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; ELSE DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ; END IF ]
                      Query cond with 1 result nodes - CONTENT : [: PEU_CG IS NULL ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [: PEU_CG IS NULL ]
                          Query s with 1 result nodes - CONTENT in line 1: [: PEU_CG IS NULL ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionIsNull... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 1: [: PEU_CG IS NULL ]
                            Query expa with 1 result nodes - CONTENT : [: PEU_CG ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                                Query s with 1 result nodes - CONTENT : [: PEU_CG ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFormsVariableFromExpAdd... executing!
                                Model Element astm::gastm::IdentifierReference created
                                Executing queries...
                                  Query se with 1 result nodes - CONTENT in line 1: [: PEU_CG ]
                                  Query ea with 1 result nodes - CONTENT : [: PEU_CG ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: simple_expression (kind) - Result: :PEU_CG

                            - OPERATION_CREATION: astm::gastm::NotEqual created
                            - OPERATION_CREATION: astm::gastm::StringLiteral created
                            - VALUE: value (property) - null (value)

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 2: [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ]
                            Query st with 1 result nodes - CONTENT : [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 3 result nodes
                                  Query params with 3 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 2: [SET_ITEM_PROPERTY ]
                                  Query fc with 1 result nodes - CONTENT in line 2: [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - SET_ITEM_PROPERTY (value) 
                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                        Query expA with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                              Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                              Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                              Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                Query st with 1 result nodes - CONTENT in line 2: ['CLASIFICADO' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'CLASIFICADO' 


                                    (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [VISIBLE ]
                                        Query expA with 1 result nodes - CONTENT : [VISIBLE ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                              Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                              Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                              Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                              Query cast2 with 1 result nodes - CONTENT : [VISIBLE ]
                                              Query cast1 with 1 result nodes - CONTENT : [VISIBLE ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                              Query block with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 2: [VISIBLE ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 2: [VISIBLE ]
                                                Query fc with 1 result nodes - CONTENT : [VISIBLE ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - VISIBLE (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                        Query expA with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                              Query s with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                              Query s with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                              Query s with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                              Query cast2 with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                              Query cast1 with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                              Query block with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 2: [PROPERTY_FALSE ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 2: [PROPERTY_FALSE ]
                                                Query fc with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - PROPERTY_FALSE (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST




                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                        RULE: mapBlockStatement... executing!
                          Model Element astm::gastm::BlockStatement created
                          Executing queries...
                            Query excep with 0 result nodes
                            Query stats with 2 result nodes
                            Query block with 1 result nodes - CONTENT in line 7: [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                            Query decls with 1 result nodes - CONTENT : [EXISTE NUMBER ; ]
                            Query st with 1 result nodes - CONTENT : [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                          Executing mappings...
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 8: [SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ]
                                  Query lvals with 1 result nodes - CONTENT : [EXISTE ]
                                  Query st with 1 result nodes - CONTENT : [SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT : [EXISTE ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_CGASTO ]
                                        Query isCount with 1 result nodes - CONTENT in line 8: [COUNT ]
                                        Query sexpr with 1 result nodes - CONTENT in line 8: [SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ]
                                        Query list with 1 result nodes - CONTENT : [COUNT ( * ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [COUNT ( * ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: COUNT(*)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                            Query next with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                            Query next with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                            Query next with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                            Query next with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 10: [CGA_CG = : PEU_CG ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [CGA_CG = : PEU_CG ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 10: [CGA_CG = : PEU_CG ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [: PEU_CG ]
                                              Query exp1 with 1 result nodes - CONTENT : [CGA_CG ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CGA_CG ]
                                                  Query s with 1 result nodes - CONTENT : [CGA_CG ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CGA_CG ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CGA_CG ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CGA_CG ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [CGA_CG ]
                                                  Query block with 1 result nodes - CONTENT in line 7: [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 10: [CGA_CG ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 10: [CGA_CG ]
                                                    Query fc with 1 result nodes - CONTENT : [CGA_CG ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - CGA_CG (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                                                  Query s with 1 result nodes - CONTENT : [: PEU_CG ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFormsVariableFromExpAdd... executing!
                                                  Model Element astm::gastm::IdentifierReference created
                                                  Executing queries...
                                                    Query se with 1 result nodes - CONTENT in line 10: [: PEU_CG ]
                                                    Query ea with 1 result nodes - CONTENT : [: PEU_CG ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: simple_expression (kind) - Result: :PEU_CG

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_CGASTO ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_CGASTO


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [EXISTE ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: EXISTE


                              (2/2) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 2 result nodes
                                  Query thenSt with 2 result nodes
                                  Query st with 1 result nodes - CONTENT : [EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ]
                                  Query cond with 1 result nodes - CONTENT : [EXISTE > 0 ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [EXISTE > 0 ]
                                      Query s with 1 result nodes - CONTENT : [EXISTE > 0 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 0 result nodes
                                        Query exp with 1 result nodes - CONTENT : [EXISTE > 0 ]
                                        Query gthOp with 1 result nodes - CONTENT in line 12: [> ]
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 12: [> ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [EXISTE ]
                                        Query expl2 with 1 result nodes - CONTENT : [0 ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [EXISTE ]
                                            Query s with 1 result nodes - CONTENT : [EXISTE ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [EXISTE ]
                                            Query cast2 with 1 result nodes - CONTENT : [EXISTE ]
                                            Query cast1 with 1 result nodes - CONTENT : [EXISTE ]
                                            Query dec with 1 result nodes - CONTENT : [EXISTE NUMBER ; ]
                                            Query s with 1 result nodes - CONTENT : [EXISTE ]
                                            Query block with 1 result nodes - CONTENT in line 7: [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                                            Query iden with 1 result nodes - CONTENT in line 12: [EXISTE ]
                                          - IF detected...true!
                                          - IF detected...true!
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [0 ]
                                            Query s with 1 result nodes - CONTENT : [0 ]
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                          - IF detected...false! executing ELSE part 
                                              - IF detected...false! executing ELSE part 
                                                  - IF detected...false! executing ELSE part 
                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Greater created

                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 13: [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ]
                                        Query st with 1 result nodes - CONTENT : [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 3 result nodes
                                              Query params with 3 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 13: [SET_ITEM_PROPERTY ]
                                              Query fc with 1 result nodes - CONTENT in line 13: [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - SET_ITEM_PROPERTY (value) 
                                              - QUERY_RESULT: 3 bindings:
                                                (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                    Query expA with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                          Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                          Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                          Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                            Query st with 1 result nodes - CONTENT in line 13: ['CLASIFICADO' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'CLASIFICADO' 


                                                (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [VISIBLE ]
                                                    Query expA with 1 result nodes - CONTENT : [VISIBLE ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query cast2 with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query cast1 with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query block with 1 result nodes - CONTENT in line 7: [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                                                          Query iden with 1 result nodes - CONTENT in line 13: [VISIBLE ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 13: [VISIBLE ]
                                                            Query fc with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - VISIBLE (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                    Query expA with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                          Query s with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                          Query s with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                          Query s with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                          Query cast2 with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                          Query cast1 with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                          Query block with 1 result nodes - CONTENT in line 7: [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                                                          Query iden with 1 result nodes - CONTENT in line 13: [PROPERTY_TRUE ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 13: [PROPERTY_TRUE ]
                                                            Query fc with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - PROPERTY_TRUE (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST




                                    (2/2) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                        Query value with 1 result nodes - CONTENT in line 14: [: CLASIFICADO ]
                                        Query as with 1 result nodes - CONTENT in line 14: [: CLASIFICADO := 'CLASIFICADO' ]
                                        Query st with 1 result nodes - CONTENT : [: CLASIFICADO := 'CLASIFICADO' ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :CLASIFICADO
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                            Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                            Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                            Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapStringLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                              Query st with 1 result nodes - CONTENT in line 14: ['CLASIFICADO' ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: 'CLASIFICADO' 


                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 16: [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ]
                                        Query st with 1 result nodes - CONTENT : [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 3 result nodes
                                              Query params with 3 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 16: [SET_ITEM_PROPERTY ]
                                              Query fc with 1 result nodes - CONTENT in line 16: [SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - SET_ITEM_PROPERTY (value) 
                                              - QUERY_RESULT: 3 bindings:
                                                (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                    Query expA with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                          Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                          Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                          Query s with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['CLASIFICADO' ]
                                                            Query st with 1 result nodes - CONTENT in line 16: ['CLASIFICADO' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'CLASIFICADO' 


                                                (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [VISIBLE ]
                                                    Query expA with 1 result nodes - CONTENT : [VISIBLE ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query cast2 with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query cast1 with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Query block with 1 result nodes - CONTENT in line 7: [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                                                          Query iden with 1 result nodes - CONTENT in line 16: [VISIBLE ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 16: [VISIBLE ]
                                                            Query fc with 1 result nodes - CONTENT : [VISIBLE ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - VISIBLE (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                    Query expA with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                          Query s with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                          Query s with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                          Query s with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                          Query cast2 with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                          Query cast1 with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                          Query block with 1 result nodes - CONTENT in line 7: [DECLARE EXISTE NUMBER ; BEGIN SELECT COUNT ( * ) INTO EXISTE FROM OTG_CGASTO WHERE CGA_CG = : PEU_CG ; EXISTE > 0 THEN SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_TRUE ) ; : CLASIFICADO := 'CLASIFICADO' ; ELSE SET_ITEM_PROPERTY ( 'CLASIFICADO' , VISIBLE , PROPERTY_FALSE ) ; : CLASIFICADO := NULL ; END IF ; END ]
                                                          Query iden with 1 result nodes - CONTENT in line 16: [PROPERTY_FALSE ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 16: [PROPERTY_FALSE ]
                                                            Query fc with 1 result nodes - CONTENT : [PROPERTY_FALSE ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - PROPERTY_FALSE (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST




                                    (2/2) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [NULL ]
                                        Query value with 1 result nodes - CONTENT in line 17: [: CLASIFICADO ]
                                        Query as with 1 result nodes - CONTENT in line 17: [: CLASIFICADO := NULL ]
                                        Query st with 1 result nodes - CONTENT : [: CLASIFICADO := NULL ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :CLASIFICADO
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                            Query s with 1 result nodes - CONTENT : [NULL ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                            Query s with 1 result nodes - CONTENT : [NULL ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                            Query s with 1 result nodes - CONTENT : [NULL ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapNullLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [NULL ]
                                              Query st with 1 result nodes - CONTENT in line 17: [NULL ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: NULL 





                  (2/4) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 28: [WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; ]
                      Query stats with 1 result nodes - CONTENT : [SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ]
                      Query block with 1 result nodes - CONTENT in line 23: [BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                        RULE: mapSelectStatement... executing!
                          Model Element astm::sastm::RDBSelectStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 24: [SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ]
                            Query lvals with 1 result nodes - CONTENT in line 24: [: SUBVENCION ]
                            Query st with 1 result nodes - CONTENT : [SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                              RULE: mapSelectExpression... executing!
                                Model Element astm::sastm::RDBSelectExpression created
                                Executing queries...
                                  Query w with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                  Query fromj with 0 result nodes
                                  Query lvals with 1 result nodes - CONTENT in line 24: [: SUBVENCION ]
                                  Query fromn with 1 result nodes - CONTENT : [OTG_SCOSTES ]
                                  Query isCount with 0 result nodes
                                  Query sexpr with 1 result nodes - CONTENT in line 24: [SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ]
                                  Query list with 1 result nodes - CONTENT : [SCO_SUBVENCION ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                    RULE: mapColumn... executing!
                                      Model Element astm::sastm::RDBColumnReference created
                                      Executing queries...
                                        Query dc with 1 result nodes - CONTENT : [SCO_SUBVENCION ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: displayed_column (kind) - Result: SCO_SUBVENCION

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                    RULE: skipToConditionOr... executing!
                                    Skip Rule skipToConditionOr executing...
                                    Executing skip query...
                                      Query c with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                      Query next with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionOr... executing!
                                    Skip Rule skipConditionOr executing...
                                    Executing skip query...
                                      Query co with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                      Query next with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionAnd... executing!
                                    Skip Rule skipConditionAnd executing...
                                    Executing skip query...
                                      Query ca with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                      Query next with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionNot... executing!
                                    Skip Rule skipConditionNot executing...
                                    Executing skip query...
                                      Query cn with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                      Query next with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createConditionComparison... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 26: [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query geqOp with 0 result nodes
                                        Query sc with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query compar with 1 result nodes - CONTENT in line 26: [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                        Query lthOp with 0 result nodes
                                        Query exp2 with 1 result nodes - CONTENT : [: PEU_SCO_CODIGO ]
                                        Query exp1 with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query cast2 with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query cast1 with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query block with 1 result nodes - CONTENT in line 23: [BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ]
                                            Query iden with 1 result nodes - CONTENT in line 26: [SCO_CODIGO ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 26: [SCO_CODIGO ]
                                              Query fc with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - SCO_CODIGO (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: PEU_SCO_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: PEU_SCO_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 26: [: PEU_SCO_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: PEU_SCO_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :PEU_SCO_CODIGO

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created

                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                      RULE: mapTable... executing!
                                        Model Element astm::sastm::RDBTableReference created
                                        Executing queries...
                                          Query st with 1 result nodes - CONTENT : [OTG_SCOSTES ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - CODE:  - node: selected_table (kind) - Result: OTG_SCOSTES


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                              RULE: mapIntoVariable... executing!
                                Model Element astm::sastm::RDBHostVariableReference created
                                Executing queries...
                                  Query l with 1 result nodes - CONTENT in line 24: [: SUBVENCION ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :SUBVENCION



                  (3/4) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 1 result nodes - CONTENT : [select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                      Query st with 1 result nodes - CONTENT : [: peu_seu_codigo is not null then select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ; end if ]
                      Query cond with 1 result nodes - CONTENT : [: peu_seu_codigo is not null ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [: peu_seu_codigo is not null ]
                          Query s with 1 result nodes - CONTENT in line 34: [: peu_seu_codigo is not null ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionIsNotNull... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 34: [: peu_seu_codigo is not null ]
                            Query expa with 1 result nodes - CONTENT : [: peu_seu_codigo ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: peu_seu_codigo ]
                                Query s with 1 result nodes - CONTENT : [: peu_seu_codigo ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFormsVariableFromExpAdd... executing!
                                Model Element astm::gastm::IdentifierReference created
                                Executing queries...
                                  Query se with 1 result nodes - CONTENT in line 34: [: peu_seu_codigo ]
                                  Query ea with 1 result nodes - CONTENT : [: peu_seu_codigo ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: simple_expression (kind) - Result: :peu_seu_codigo

                            - OPERATION_CREATION: astm::gastm::Equal created
                            - OPERATION_CREATION: astm::gastm::StringLiteral created
                            - VALUE: value (property) - null (value)

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                        RULE: mapSelectStatement... executing!
                          Model Element astm::sastm::RDBSelectStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 35: [select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                            Query lvals with 1 result nodes - CONTENT in line 35: [: wcpr_codigo ]
                            Query st with 1 result nodes - CONTENT : [select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                              RULE: mapSelectExpression... executing!
                                Model Element astm::sastm::RDBSelectExpression created
                                Executing queries...
                                  Query w with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                  Query fromj with 0 result nodes
                                  Query lvals with 1 result nodes - CONTENT in line 35: [: wcpr_codigo ]
                                  Query fromn with 1 result nodes - CONTENT : [otg_cprogramas ]
                                  Query isCount with 0 result nodes
                                  Query sexpr with 1 result nodes - CONTENT in line 35: [select cpr_codigootri into : wcpr_codigo from otg_cprogramas where cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                  Query list with 2 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: displayed_column (kind). Rule... calling mapColumn rule

                                    RULE: mapColumn... executing!
                                      Model Element astm::sastm::RDBColumnReference created
                                      Executing queries...
                                        Query dc with 1 result nodes - CONTENT : [cpr_codigootri ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: displayed_column (kind) - Result: cpr_codigootri

                                    (2/2) result node: displayed_column (kind). Rule... calling mapColumn rule

                                    RULE: mapColumn... executing!
                                      Model Element astm::sastm::RDBColumnReference created
                                      Executing queries...
                                        Query dc with 1 result nodes - CONTENT : [seu_cpr_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: displayed_column (kind) - Result: seu_cpr_codigo

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                    RULE: skipToConditionOr... executing!
                                    Skip Rule skipToConditionOr executing...
                                    Executing skip query...
                                      Query c with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                      Query next with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionOr... executing!
                                    Skip Rule skipConditionOr executing...
                                    Executing skip query...
                                      Query co with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                      Query next with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionAnd... executing!
                                    Skip Rule skipConditionAnd executing...
                                    Executing skip query...
                                      Query ca with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                      Query next with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionNot... executing!
                                    Skip Rule skipConditionNot executing...
                                    Executing skip query...
                                      Query cn with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                      Query next with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createConditionComparison... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 37: [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query geqOp with 0 result nodes
                                        Query sc with 1 result nodes - CONTENT : [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query compar with 1 result nodes - CONTENT in line 37: [cpr_codigo = ( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                        Query lthOp with 0 result nodes
                                        Query exp2 with 1 result nodes - CONTENT : [( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                        Query exp1 with 1 result nodes - CONTENT : [cpr_codigo ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [cpr_codigo ]
                                            Query s with 1 result nodes - CONTENT : [cpr_codigo ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [cpr_codigo ]
                                            Query cast2 with 1 result nodes - CONTENT : [cpr_codigo ]
                                            Query cast1 with 1 result nodes - CONTENT : [cpr_codigo ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [cpr_codigo ]
                                            Query block with 0 result nodes
                                            Query iden with 1 result nodes - CONTENT in line 37: [cpr_codigo ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 37: [cpr_codigo ]
                                              Query fc with 1 result nodes - CONTENT : [cpr_codigo ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - cpr_codigo (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                            Query s with 1 result nodes - CONTENT : [( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprBoolFromExprParen... executing!
                                          Skip Rule skipToExprBoolFromExprParen executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( select seu_cpr_codigo from otg_seuropeos where seu_codigo = : peu_seu_codigo ) ]
                                            Query s with 0 result nodes
                                          Locating skip query... SKIP VARIABLE DOESNT EXIST
                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created

                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                      RULE: mapTable... executing!
                                        Model Element astm::sastm::RDBTableReference created
                                        Executing queries...
                                          Query st with 1 result nodes - CONTENT : [otg_cprogramas ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - CODE:  - node: selected_table (kind) - Result: otg_cprogramas


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                              RULE: mapIntoVariable... executing!
                                Model Element astm::sastm::RDBHostVariableReference created
                                Executing queries...
                                  Query l with 1 result nodes - CONTENT in line 35: [: wcpr_codigo ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :wcpr_codigo


                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                  (4/4) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 49: [When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; ]
                      Query stats with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ]
                      Query block with 1 result nodes - CONTENT in line 43: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                            Query st with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ]
                            Query cond with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                                Query s with 1 result nodes - CONTENT in line 44: [: peu_codigo is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 44: [: peu_codigo is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: peu_codigo ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Query s with 1 result nodes - CONTENT : [: peu_codigo ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 44: [: peu_codigo ]
                                        Query ea with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :peu_codigo

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 45: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                  Query lvals with 1 result nodes - CONTENT in line 45: [: C_WADD_PPE_IMPE ]
                                  Query st with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT in line 45: [: C_WADD_PPE_IMPE ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 45: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                        Query list with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: SUM(PPE_IMPE)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 46: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 46: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                              Query exp1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 43: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                                                  Query iden with 1 result nodes - CONTENT in line 46: [PPE_PEU_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 46: [PPE_PEU_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - PPE_PEU_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFormsVariableFromExpAdd... executing!
                                                  Model Element astm::gastm::IdentifierReference created
                                                  Executing queries...
                                                    Query se with 1 result nodes - CONTENT in line 46: [: PEU_CODIGO ]
                                                    Query ea with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: simple_expression (kind) - Result: :PEU_CODIGO

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_PPEUROPEOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT in line 45: [: C_WADD_PPE_IMPE ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE


                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (20/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_PEUROPEOS . PEU_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (21/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PEU_CG POST-CHANGE : WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ; ]
                Query stats with 1 result nodes - CONTENT : [: WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-CHANGE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                  RULE: mapAssignment... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT : [F_CG_CODIGO ( : PEU_CG ) ]
                      Query value with 1 result nodes - CONTENT in line 2: [: WPEU_CG ]
                      Query as with 1 result nodes - CONTENT in line 2: [: WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ]
                      Query st with 1 result nodes - CONTENT : [: WPEU_CG := F_CG_CODIGO ( : PEU_CG ) ]
                    Executing mappings...
                      - OPERATION_CREATION: astm::gastm::BinaryExpression created
                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                      - OPERATION_CREATION: astm::gastm::Name created
                      - CODE:  - node: lvalue (kind) - Result: :WPEU_CG
                      - OPERATION_CREATION: astm::gastm::OperatorAssign created
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [F_CG_CODIGO ( : PEU_CG ) ]
                          Query s with 1 result nodes - CONTENT : [F_CG_CODIGO ( : PEU_CG ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipToExprAdd... executing!
                        Skip Rule skipToExprAdd executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [F_CG_CODIGO ( : PEU_CG ) ]
                          Query s with 1 result nodes - CONTENT : [F_CG_CODIGO ( : PEU_CG ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipAllArithmeticRules... executing!
                        Skip Rule skipAllArithmeticRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [F_CG_CODIGO ( : PEU_CG ) ]
                          Query s with 1 result nodes - CONTENT : [F_CG_CODIGO ( : PEU_CG ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [F_CG_CODIGO ( : PEU_CG ) ]
                          Query cast2 with 1 result nodes - CONTENT : [F_CG_CODIGO ]
                          Query cast1 with 1 result nodes - CONTENT : [F_CG_CODIGO ]
                          Query dec with 0 result nodes
                          Query s with 1 result nodes - CONTENT in line 2: [F_CG_CODIGO ( : PEU_CG ) ]
                          Query block with 0 result nodes
                          Query iden with 2 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                            Query params with 1 result nodes - CONTENT : [: PEU_CG ]
                            Query iden with 1 result nodes - CONTENT in line 2: [F_CG_CODIGO ]
                            Query fc with 1 result nodes - CONTENT in line 2: [F_CG_CODIGO ( : PEU_CG ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - F_CG_CODIGO (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [: PEU_CG ]
                                  Query expA with 1 result nodes - CONTENT : [: PEU_CG ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                                        Query s with 1 result nodes - CONTENT : [: PEU_CG ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                                        Query s with 1 result nodes - CONTENT : [: PEU_CG ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                                        Query s with 1 result nodes - CONTENT : [: PEU_CG ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFormsVariableFromExpAdd... executing!
                                        Model Element astm::gastm::IdentifierReference created
                                        Executing queries...
                                          Query se with 1 result nodes - CONTENT in line 2: [: PEU_CG ]
                                          Query ea with 1 result nodes - CONTENT : [: PEU_CG ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - CODE:  - node: simple_expression (kind) - Result: :PEU_CG





            (22/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WPEU_CG KEY-PREV-ITEM NULL ; ]
                Query stats with 1 result nodes - CONTENT : [NULL ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-PREV-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (23/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WPEU_CG WHEN-VALIDATE-ITEM : PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ; ]
                Query stats with 1 result nodes - CONTENT : [: PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                  RULE: mapAssignment... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT : [F_CODIGO_CG ( : WPEU_CG ) ]
                      Query value with 1 result nodes - CONTENT in line 1: [: PEU_CG ]
                      Query as with 1 result nodes - CONTENT in line 1: [: PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ]
                      Query st with 1 result nodes - CONTENT : [: PEU_CG := F_CODIGO_CG ( : WPEU_CG ) ]
                    Executing mappings...
                      - OPERATION_CREATION: astm::gastm::BinaryExpression created
                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                      - OPERATION_CREATION: astm::gastm::Name created
                      - CODE:  - node: lvalue (kind) - Result: :PEU_CG
                      - OPERATION_CREATION: astm::gastm::OperatorAssign created
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [F_CODIGO_CG ( : WPEU_CG ) ]
                          Query s with 1 result nodes - CONTENT : [F_CODIGO_CG ( : WPEU_CG ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipToExprAdd... executing!
                        Skip Rule skipToExprAdd executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [F_CODIGO_CG ( : WPEU_CG ) ]
                          Query s with 1 result nodes - CONTENT : [F_CODIGO_CG ( : WPEU_CG ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipAllArithmeticRules... executing!
                        Skip Rule skipAllArithmeticRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [F_CODIGO_CG ( : WPEU_CG ) ]
                          Query s with 1 result nodes - CONTENT : [F_CODIGO_CG ( : WPEU_CG ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [F_CODIGO_CG ( : WPEU_CG ) ]
                          Query cast2 with 1 result nodes - CONTENT : [F_CODIGO_CG ]
                          Query cast1 with 1 result nodes - CONTENT : [F_CODIGO_CG ]
                          Query dec with 0 result nodes
                          Query s with 1 result nodes - CONTENT in line 1: [F_CODIGO_CG ( : WPEU_CG ) ]
                          Query block with 0 result nodes
                          Query iden with 2 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: WPEU_CG ]
                            Query params with 1 result nodes - CONTENT : [: WPEU_CG ]
                            Query iden with 1 result nodes - CONTENT in line 1: [F_CODIGO_CG ]
                            Query fc with 1 result nodes - CONTENT in line 1: [F_CODIGO_CG ( : WPEU_CG ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - F_CODIGO_CG (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [: WPEU_CG ]
                                  Query expA with 1 result nodes - CONTENT : [: WPEU_CG ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: WPEU_CG ]
                                        Query s with 1 result nodes - CONTENT : [: WPEU_CG ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: WPEU_CG ]
                                        Query s with 1 result nodes - CONTENT : [: WPEU_CG ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: WPEU_CG ]
                                        Query s with 1 result nodes - CONTENT : [: WPEU_CG ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFormsVariableFromExpAdd... executing!
                                        Model Element astm::gastm::IdentifierReference created
                                        Executing queries...
                                          Query se with 1 result nodes - CONTENT in line 1: [: WPEU_CG ]
                                          Query ea with 1 result nodes - CONTENT : [: WPEU_CG ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - CODE:  - node: simple_expression (kind) - Result: :WPEU_CG





            (24/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WPEU_CG KEY-LISTVAL SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ; ]
                Query stats with 1 result nodes - CONTENT : [SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-LISTVAL (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ]
                      Query st with 1 result nodes - CONTENT : [SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 3 result nodes
                            Query params with 3 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [SET_ITEM_PROPERTY ]
                            Query fc with 1 result nodes - CONTENT in line 1: [SET_ITEM_PROPERTY ( 'OTG_PEUROPEOS.PEU_CG' , ITEM_IS_VALID , PROPERTY_TRUE ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - SET_ITEM_PROPERTY (value) 
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                  Query expA with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                        Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                        Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                        Query s with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['OTG_PEUROPEOS.PEU_CG' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['OTG_PEUROPEOS.PEU_CG' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'OTG_PEUROPEOS.PEU_CG' 


                              (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                  Query expA with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                        Query s with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                        Query s with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                        Query s with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                        Query cast2 with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                        Query cast1 with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                        Query block with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 1: [ITEM_IS_VALID ]
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 1 result nodes - CONTENT in line 1: [ITEM_IS_VALID ]
                                          Query fc with 1 result nodes - CONTENT : [ITEM_IS_VALID ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - ITEM_IS_VALID (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                  Query expA with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                        Query s with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                        Query s with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                        Query s with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                        Query cast2 with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                        Query cast1 with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                        Query block with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 1: [PROPERTY_TRUE ]
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 1 result nodes - CONTENT in line 1: [PROPERTY_TRUE ]
                                          Query fc with 1 result nodes - CONTENT : [PROPERTY_TRUE ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - PROPERTY_TRUE (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (25/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item GENERAR_CG WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                Query stats with 1 result nodes - CONTENT : [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR ]
                      Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 2 result nodes
                            Query thenSt with 1 result nodes - CONTENT : [N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                            Query st with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR ]
                            Query cond with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO IS NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO IS NULL ]
                                Query s with 1 result nodes - CONTENT in line 5: [: OTG_PEUROPEOS . PEU_CODIGO IS NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 5: [: OTG_PEUROPEOS . PEU_CODIGO IS NULL ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 5: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::NotEqual created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                  Query value with 1 result nodes - CONTENT : [N_AL ]
                                  Query as with 1 result nodes - CONTENT in line 6: [N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                  Query st with 1 result nodes - CONTENT : [N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: N_AL
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [alerta ]
                                      Query cast1 with 1 result nodes - CONTENT : [alerta ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 6: [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                      Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                      Query iden with 1 result nodes - CONTENT in line 6: [alerta ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 6 result nodes
                                        Query params with 6 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 6: [alerta ]
                                        Query fc with 1 result nodes - CONTENT in line 6: [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - alerta (value) 
                                        - QUERY_RESULT: 6 bindings:
                                          (1/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['X' ]
                                              Query expA with 1 result nodes - CONTENT : ['X' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['X' ]
                                                    Query s with 1 result nodes - CONTENT : ['X' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['X' ]
                                                    Query s with 1 result nodes - CONTENT : ['X' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['X' ]
                                                    Query s with 1 result nodes - CONTENT : ['X' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['X' ]
                                                      Query st with 1 result nodes - CONTENT in line 6: ['X' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'X' 


                                          (2/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Referencia' ]
                                              Query expA with 1 result nodes - CONTENT : ['Referencia' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Referencia' ]
                                                    Query s with 1 result nodes - CONTENT : ['Referencia' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Referencia' ]
                                                    Query s with 1 result nodes - CONTENT : ['Referencia' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Referencia' ]
                                                    Query s with 1 result nodes - CONTENT : ['Referencia' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Referencia' ]
                                                      Query st with 1 result nodes - CONTENT in line 6: ['Referencia' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Referencia' 


                                          (3/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                              Query expA with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                                    Query s with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                                    Query s with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                                    Query s with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['El proyecto europeo debe ser guardado previamente.' ]
                                                      Query st with 1 result nodes - CONTENT in line 6: ['El proyecto europeo debe ser guardado previamente.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'El proyecto europeo debe ser guardado previamente.' 


                                          (4/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query expA with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                      Query st with 1 result nodes - CONTENT in line 6: ['Aceptar' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Aceptar' 


                                          (5/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [null ]
                                              Query expA with 1 result nodes - CONTENT : [null ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapNullLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : [null ]
                                                      Query st with 1 result nodes - CONTENT in line 6: [null ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: null 


                                          (6/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [null ]
                                              Query expA with 1 result nodes - CONTENT : [null ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [null ]
                                                    Query s with 1 result nodes - CONTENT : [null ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapNullLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : [null ]
                                                      Query st with 1 result nodes - CONTENT in line 6: [null ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: null 




                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 9: [SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                  Query lvals with 1 result nodes - CONTENT : [num_ip ]
                                  Query st with 1 result nodes - CONTENT : [SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT : [num_ip ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS ]
                                        Query isCount with 1 result nodes - CONTENT in line 9: [COUNT ]
                                        Query sexpr with 1 result nodes - CONTENT in line 9: [SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                        Query list with 1 result nodes - CONTENT : [COUNT ( * ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [COUNT ( * ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: COUNT(*)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                            Query next with 1 result nodes - CONTENT in line 12: [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionAnd... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query ca with 1 result nodes - CONTENT in line 12: [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ]
                                              Query ex2 with 1 result nodes - CONTENT : [PPE_IP = 'S' ]
                                              Query ex1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: condition_not (kind). Rule... calling skipConditionNot rule

                                                RULE: skipConditionNot... executing!
                                                Skip Rule skipConditionNot executing...
                                                Executing skip query...
                                                  Query cn with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ]
                                                  Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionComparison... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query eqOp with 1 result nodes - CONTENT in line 11: [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ]
                                                    Query gthOp with 0 result nodes
                                                    Query orOp with 0 result nodes
                                                    Query geqOp with 0 result nodes
                                                    Query sc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ]
                                                    Query leqOp with 0 result nodes
                                                    Query notEqOp with 0 result nodes
                                                    Query compar with 1 result nodes - CONTENT in line 11: [PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO ]
                                                    Query lthOp with 0 result nodes
                                                    Query exp2 with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                                    Query exp1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                        Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                        Query cast2 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                        Query cast1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                        Query dec with 0 result nodes
                                                        Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                        Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                                        Query iden with 1 result nodes - CONTENT in line 11: [PPE_PEU_CODIGO ]
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 11: [PPE_PEU_CODIGO ]
                                                          Query fc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - PPE_PEU_CODIGO (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                                        Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFormsVariableFromExpAdd... executing!
                                                        Model Element astm::gastm::IdentifierReference created
                                                        Executing queries...
                                                          Query se with 1 result nodes - CONTENT in line 11: [: OTG_PEUROPEOS . PEU_CODIGO ]
                                                          Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_CODIGO ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_CODIGO

                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Equal created

                                              - OPERATION_CREATION: astm::gastm::And created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: condition_not (kind). Rule... calling skipConditionNot rule

                                                RULE: skipConditionNot... executing!
                                                Skip Rule skipConditionNot executing...
                                                Executing skip query...
                                                  Query cn with 1 result nodes - CONTENT : [PPE_IP = 'S' ]
                                                  Query next with 1 result nodes - CONTENT : [PPE_IP = 'S' ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionComparison... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query eqOp with 1 result nodes - CONTENT in line 12: [PPE_IP = 'S' ]
                                                    Query gthOp with 0 result nodes
                                                    Query orOp with 0 result nodes
                                                    Query geqOp with 0 result nodes
                                                    Query sc with 1 result nodes - CONTENT : [PPE_IP = 'S' ]
                                                    Query leqOp with 0 result nodes
                                                    Query notEqOp with 0 result nodes
                                                    Query compar with 1 result nodes - CONTENT in line 12: [PPE_IP = 'S' ]
                                                    Query lthOp with 0 result nodes
                                                    Query exp2 with 1 result nodes - CONTENT : ['S' ]
                                                    Query exp1 with 1 result nodes - CONTENT : [PPE_IP ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [PPE_IP ]
                                                        Query s with 1 result nodes - CONTENT : [PPE_IP ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [PPE_IP ]
                                                        Query cast2 with 1 result nodes - CONTENT : [PPE_IP ]
                                                        Query cast1 with 1 result nodes - CONTENT : [PPE_IP ]
                                                        Query dec with 0 result nodes
                                                        Query s with 1 result nodes - CONTENT : [PPE_IP ]
                                                        Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                                        Query iden with 1 result nodes - CONTENT in line 12: [PPE_IP ]
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 12: [PPE_IP ]
                                                          Query fc with 1 result nodes - CONTENT : [PPE_IP ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - PPE_IP (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ['S' ]
                                                        Query s with 1 result nodes - CONTENT : ['S' ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapStringLiteral... executing!
                                                        Model Element astm::gastm::StringLiteral created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : ['S' ]
                                                          Query st with 1 result nodes - CONTENT in line 12: ['S' ]
                                                        Executing mappings...
                                                          - CODE:  - node: simple_expression (kind) - Result: 'S' 

                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Equal created


                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_PERPEUROPEOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_PERPEUROPEOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [num_ip ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: num_ip


                              (2/2) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 2 result nodes
                                  Query thenSt with 1 result nodes - CONTENT : [N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                  Query st with 1 result nodes - CONTENT : [num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR ]
                                  Query cond with 1 result nodes - CONTENT : [num_ip <> 1 ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [num_ip <> 1 ]
                                      Query s with 1 result nodes - CONTENT : [num_ip <> 1 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 0 result nodes
                                        Query exp with 1 result nodes - CONTENT : [num_ip <> 1 ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 14: [<> ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [num_ip ]
                                        Query expl2 with 1 result nodes - CONTENT : [1 ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 1 result nodes - CONTENT in line 14: [<> ]
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [num_ip ]
                                            Query s with 1 result nodes - CONTENT : [num_ip ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [num_ip ]
                                            Query cast2 with 1 result nodes - CONTENT : [num_ip ]
                                            Query cast1 with 1 result nodes - CONTENT : [num_ip ]
                                            Query dec with 1 result nodes - CONTENT : [num_ip NUMBER ; ]
                                            Query s with 1 result nodes - CONTENT : [num_ip ]
                                            Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                            Query iden with 1 result nodes - CONTENT in line 14: [num_ip ]
                                          - IF detected...true!
                                          - IF detected...true!
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [1 ]
                                            Query s with 1 result nodes - CONTENT : [1 ]
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                          - IF detected...false! executing ELSE part 
                                              - IF detected...false! executing ELSE part 
                                                  - IF detected...false! executing ELSE part 
                                                      - IF detected...false! executing ELSE part 
                                                          - IF detected...true!
                                                          - OPERATION_CREATION: astm::gastm::NotEqual created

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                        Query value with 1 result nodes - CONTENT : [N_AL ]
                                        Query as with 1 result nodes - CONTENT in line 15: [N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                        Query st with 1 result nodes - CONTENT : [N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: N_AL
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                            Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                            Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                            Query s with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                            Query cast2 with 1 result nodes - CONTENT : [alerta ]
                                            Query cast1 with 1 result nodes - CONTENT : [alerta ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 15: [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                            Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                            Query iden with 1 result nodes - CONTENT in line 15: [alerta ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 6 result nodes
                                              Query params with 6 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 15: [alerta ]
                                              Query fc with 1 result nodes - CONTENT in line 15: [alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - alerta (value) 
                                              - QUERY_RESULT: 6 bindings:
                                                (1/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['X' ]
                                                    Query expA with 1 result nodes - CONTENT : ['X' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['X' ]
                                                          Query s with 1 result nodes - CONTENT : ['X' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['X' ]
                                                          Query s with 1 result nodes - CONTENT : ['X' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['X' ]
                                                          Query s with 1 result nodes - CONTENT : ['X' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['X' ]
                                                            Query st with 1 result nodes - CONTENT in line 15: ['X' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'X' 


                                                (2/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['Referencia' ]
                                                    Query expA with 1 result nodes - CONTENT : ['Referencia' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Referencia' ]
                                                          Query s with 1 result nodes - CONTENT : ['Referencia' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Referencia' ]
                                                          Query s with 1 result nodes - CONTENT : ['Referencia' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Referencia' ]
                                                          Query s with 1 result nodes - CONTENT : ['Referencia' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['Referencia' ]
                                                            Query st with 1 result nodes - CONTENT in line 15: ['Referencia' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'Referencia' 


                                                (3/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                    Query expA with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                            Query st with 1 result nodes - CONTENT in line 15: ['El proyecto europeo debe tener asignado un investigador principal.' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'El proyecto europeo debe tener asignado un investigador principal.' 


                                                (4/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query expA with 1 result nodes - CONTENT : ['Aceptar' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                          Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                          Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                          Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                            Query st with 1 result nodes - CONTENT in line 15: ['Aceptar' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'Aceptar' 


                                                (5/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [null ]
                                                    Query expA with 1 result nodes - CONTENT : [null ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [null ]
                                                          Query s with 1 result nodes - CONTENT : [null ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [null ]
                                                          Query s with 1 result nodes - CONTENT : [null ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [null ]
                                                          Query s with 1 result nodes - CONTENT : [null ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapNullLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query st with 1 result nodes - CONTENT in line 15: [null ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: null 


                                                (6/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [null ]
                                                    Query expA with 1 result nodes - CONTENT : [null ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [null ]
                                                          Query s with 1 result nodes - CONTENT : [null ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [null ]
                                                          Query s with 1 result nodes - CONTENT : [null ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [null ]
                                                          Query s with 1 result nodes - CONTENT : [null ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapNullLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query st with 1 result nodes - CONTENT in line 15: [null ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: null 




                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                        Query value with 1 result nodes - CONTENT : [N_AL ]
                                        Query as with 1 result nodes - CONTENT in line 18: [N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                        Query st with 1 result nodes - CONTENT : [N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: N_AL
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                            Query s with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                            Query s with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                            Query s with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                            Query cast2 with 1 result nodes - CONTENT : [ALERTA ]
                                            Query cast1 with 1 result nodes - CONTENT : [ALERTA ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 18: [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                            Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                            Query iden with 1 result nodes - CONTENT in line 18: [ALERTA ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 6 result nodes
                                              Query params with 6 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 18: [ALERTA ]
                                              Query fc with 1 result nodes - CONTENT in line 18: [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - ALERTA (value) 
                                              - QUERY_RESULT: 6 bindings:
                                                (1/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['!' ]
                                                    Query expA with 1 result nodes - CONTENT : ['!' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['!' ]
                                                          Query s with 1 result nodes - CONTENT : ['!' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['!' ]
                                                          Query s with 1 result nodes - CONTENT : ['!' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['!' ]
                                                          Query s with 1 result nodes - CONTENT : ['!' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['!' ]
                                                            Query st with 1 result nodes - CONTENT in line 18: ['!' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: '!' 


                                                (2/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                    Query expA with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                          Query s with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                          Query s with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                          Query s with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                            Query st with 1 result nodes - CONTENT in line 18: ['ATENCIÓN' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'ATENCIÓN' 


                                                (3/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                    Query expA with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                          Query s with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                          Query s with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                          Query s with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                            Query st with 1 result nodes - CONTENT in line 18: ['¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' 


                                                (4/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['Si' ]
                                                    Query expA with 1 result nodes - CONTENT : ['Si' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                          Query s with 1 result nodes - CONTENT : ['Si' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                          Query s with 1 result nodes - CONTENT : ['Si' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                          Query s with 1 result nodes - CONTENT : ['Si' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                            Query st with 1 result nodes - CONTENT in line 18: ['Si' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'Si' 


                                                (5/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['No' ]
                                                    Query expA with 1 result nodes - CONTENT : ['No' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['No' ]
                                                          Query s with 1 result nodes - CONTENT : ['No' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['No' ]
                                                          Query s with 1 result nodes - CONTENT : ['No' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['No' ]
                                                          Query s with 1 result nodes - CONTENT : ['No' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['No' ]
                                                            Query st with 1 result nodes - CONTENT in line 18: ['No' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'No' 


                                                (6/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NULL ]
                                                    Query expA with 1 result nodes - CONTENT : [NULL ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapNullLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                                            Query st with 1 result nodes - CONTENT in line 18: [NULL ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: NULL 




                                    (2/2) result node: statement (kind). Rule... calling mapIf rule

                                    RULE: mapIf... executing!
                                      Model Element astm::gastm::IfStatement created
                                      Executing queries...
                                        Query elseSt with 0 result nodes
                                        Query thenSt with 6 result nodes
                                        Query st with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR ]
                                        Query cond with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 ]
                                            Query s with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapBinaryExpressionRelational... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 19: [= ]
                                              Query exp with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query op with 1 result nodes - CONTENT in line 19: [= ]
                                              Query geqOp with 0 result nodes
                                              Query expl1 with 1 result nodes - CONTENT : [N_AL ]
                                              Query expl2 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query lthOp with 0 result nodes
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [N_AL ]
                                                  Query s with 1 result nodes - CONTENT : [N_AL ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [N_AL ]
                                                  Query cast2 with 1 result nodes - CONTENT : [N_AL ]
                                                  Query cast1 with 1 result nodes - CONTENT : [N_AL ]
                                                  Query dec with 1 result nodes - CONTENT : [N_AL NUMBER ; ]
                                                  Query s with 1 result nodes - CONTENT : [N_AL ]
                                                  Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                                  Query iden with 1 result nodes - CONTENT in line 19: [N_AL ]
                                                - IF detected...true!
                                                - IF detected...true!
                                                Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                                  Query s with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                                  Query cast2 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                                  Query cast1 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                                  Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                                  Query iden with 1 result nodes - CONTENT in line 19: [ALERT_BUTTON1 ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 19: [ALERT_BUTTON1 ]
                                                    Query fc with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - ALERT_BUTTON1 (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                        - QUERY_RESULT: 6 bindings:
                                          (1/6) result node: statement (kind). Rule... calling mapAssignment rule

                                          RULE: mapAssignment... executing!
                                            Model Element astm::gastm::ExpressionStatement created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                              Query value with 1 result nodes - CONTENT : [N_AL ]
                                              Query as with 1 result nodes - CONTENT in line 21: [N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                              Query st with 1 result nodes - CONTENT : [N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: N_AL
                                              - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                RULE: skipAllBooleanRules... executing!
                                                Skip Rule skipAllBooleanRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                  Query s with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipToExprAdd... executing!
                                                Skip Rule skipToExprAdd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                  Query s with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                  Query s with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                  Query cast2 with 1 result nodes - CONTENT : [POPULATE_GROUP ]
                                                  Query cast1 with 1 result nodes - CONTENT : [POPULATE_GROUP ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT in line 21: [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                  Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                                  Query iden with 1 result nodes - CONTENT in line 21: [POPULATE_GROUP ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                    Query params with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                    Query iden with 1 result nodes - CONTENT in line 21: [POPULATE_GROUP ]
                                                    Query fc with 1 result nodes - CONTENT in line 21: [POPULATE_GROUP ( 'TIPOS_CG' ) ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - POPULATE_GROUP (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                      RULE: mapActualParameter... executing!
                                                        Model Element astm::gastm::ActualParameterExpression created
                                                        Executing queries...
                                                          Query cp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                          Query expA with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                          Query expB with 0 result nodes
                                                          Query iden with 0 result nodes
                                                        Executing mappings...
                                                            - IF detected...true!
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                              RULE: skipAllBooleanRules... executing!
                                                              Skip Rule skipAllBooleanRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipToExprAdd... executing!
                                                              Skip Rule skipToExprAdd executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipAllArithmeticRules... executing!
                                                              Skip Rule skipAllArithmeticRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: mapStringLiteral... executing!
                                                                Model Element astm::gastm::StringLiteral created
                                                                Executing queries...
                                                                  Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                                  Query st with 1 result nodes - CONTENT in line 21: ['TIPOS_CG' ]
                                                                Executing mappings...
                                                                  - CODE:  - node: simple_expression (kind) - Result: 'TIPOS_CG' 




                                          (2/6) result node: statement (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::ExpressionStatement created
                                            Executing queries...
                                              Query f with 1 result nodes - CONTENT in line 22: [POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ]
                                              Query st with 1 result nodes - CONTENT : [POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 2 result nodes
                                                    Query params with 2 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 22: [POPULATE_LIST ]
                                                    Query fc with 1 result nodes - CONTENT in line 22: [POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - POPULATE_LIST (value) 
                                                    - QUERY_RESULT: 2 bindings:
                                                      (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                      RULE: mapActualParameter... executing!
                                                        Model Element astm::gastm::ActualParameterExpression created
                                                        Executing queries...
                                                          Query cp with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                          Query expA with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                          Query expB with 0 result nodes
                                                          Query iden with 0 result nodes
                                                        Executing mappings...
                                                            - IF detected...true!
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                              RULE: skipAllBooleanRules... executing!
                                                              Skip Rule skipAllBooleanRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipToExprAdd... executing!
                                                              Skip Rule skipToExprAdd executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipAllArithmeticRules... executing!
                                                              Skip Rule skipAllArithmeticRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: mapStringLiteral... executing!
                                                                Model Element astm::gastm::StringLiteral created
                                                                Executing queries...
                                                                  Query exp with 1 result nodes - CONTENT : ['TIPO_CG' ]
                                                                  Query st with 1 result nodes - CONTENT in line 22: ['TIPO_CG' ]
                                                                Executing mappings...
                                                                  - CODE:  - node: simple_expression (kind) - Result: 'TIPO_CG' 


                                                      (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                      RULE: mapActualParameter... executing!
                                                        Model Element astm::gastm::ActualParameterExpression created
                                                        Executing queries...
                                                          Query cp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                          Query expA with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                          Query expB with 0 result nodes
                                                          Query iden with 0 result nodes
                                                        Executing mappings...
                                                            - IF detected...true!
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                              RULE: skipAllBooleanRules... executing!
                                                              Skip Rule skipAllBooleanRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipToExprAdd... executing!
                                                              Skip Rule skipToExprAdd executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipAllArithmeticRules... executing!
                                                              Skip Rule skipAllArithmeticRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                                Query s with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: mapStringLiteral... executing!
                                                                Model Element astm::gastm::StringLiteral created
                                                                Executing queries...
                                                                  Query exp with 1 result nodes - CONTENT : ['TIPOS_CG' ]
                                                                  Query st with 1 result nodes - CONTENT in line 22: ['TIPOS_CG' ]
                                                                Executing mappings...
                                                                  - CODE:  - node: simple_expression (kind) - Result: 'TIPOS_CG' 




                                          (3/6) result node: statement (kind). Rule... calling mapAssignment rule

                                          RULE: mapAssignment... executing!
                                            Model Element astm::gastm::ExpressionStatement created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                              Query value with 1 result nodes - CONTENT : [N_AL ]
                                              Query as with 1 result nodes - CONTENT in line 23: [N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ]
                                              Query st with 1 result nodes - CONTENT : [N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: N_AL
                                              - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                RULE: skipAllBooleanRules... executing!
                                                Skip Rule skipAllBooleanRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                  Query s with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipToExprAdd... executing!
                                                Skip Rule skipToExprAdd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                  Query s with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                  Query s with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                  Query cast2 with 1 result nodes - CONTENT : [POPULATE_GROUP ]
                                                  Query cast1 with 1 result nodes - CONTENT : [POPULATE_GROUP ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT in line 23: [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                  Query block with 1 result nodes - CONTENT in line 4: [DECLARE N_AL NUMBER ; num_ip NUMBER ; BEGIN : OTG_PEUROPEOS . PEU_CODIGO IS NULL THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe ser guardado previamente.' , 'Aceptar' , null , null ) ; ELSE SELECT COUNT ( * ) INTO num_ip FROM OTG_PERPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_PEUROPEOS . PEU_CODIGO AND PPE_IP = 'S' ; num_ip <> 1 THEN N_AL := alerta ( 'X' , 'Referencia' , 'El proyecto europeo debe tener asignado un investigador principal.' , 'Aceptar' , null , null ) ; ELSE N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el proyecto europeo?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN N_AL := POPULATE_GROUP ( 'TIPOS_CG' ) ; POPULATE_LIST ( 'TIPO_CG' , 'TIPOS_CG' ) ; N_AL := POPULATE_GROUP ( 'DPROYECTO' ) ; POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ; : TIPO_CG := 'IE' ; BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR OR OR OR OR OR OR OR OR OR OR OR ]
                                                  Query iden with 1 result nodes - CONTENT in line 23: [POPULATE_GROUP ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                    Query params with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                    Query iden with 1 result nodes - CONTENT in line 23: [POPULATE_GROUP ]
                                                    Query fc with 1 result nodes - CONTENT in line 23: [POPULATE_GROUP ( 'DPROYECTO' ) ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - POPULATE_GROUP (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                      RULE: mapActualParameter... executing!
                                                        Model Element astm::gastm::ActualParameterExpression created
                                                        Executing queries...
                                                          Query cp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                          Query expA with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                          Query expB with 0 result nodes
                                                          Query iden with 0 result nodes
                                                        Executing mappings...
                                                            - IF detected...true!
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                              RULE: skipAllBooleanRules... executing!
                                                              Skip Rule skipAllBooleanRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipToExprAdd... executing!
                                                              Skip Rule skipToExprAdd executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipAllArithmeticRules... executing!
                                                              Skip Rule skipAllArithmeticRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: mapStringLiteral... executing!
                                                                Model Element astm::gastm::StringLiteral created
                                                                Executing queries...
                                                                  Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                                  Query st with 1 result nodes - CONTENT in line 23: ['DPROYECTO' ]
                                                                Executing mappings...
                                                                  - CODE:  - node: simple_expression (kind) - Result: 'DPROYECTO' 




                                          (4/6) result node: statement (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::ExpressionStatement created
                                            Executing queries...
                                              Query f with 1 result nodes - CONTENT in line 24: [POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ]
                                              Query st with 1 result nodes - CONTENT : [POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 2 result nodes
                                                    Query params with 2 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 24: [POPULATE_LIST ]
                                                    Query fc with 1 result nodes - CONTENT in line 24: [POPULATE_LIST ( 'DESTINATARIO' , 'DPROYECTO' ) ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - POPULATE_LIST (value) 
                                                    - QUERY_RESULT: 2 bindings:
                                                      (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                      RULE: mapActualParameter... executing!
                                                        Model Element astm::gastm::ActualParameterExpression created
                                                        Executing queries...
                                                          Query cp with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                          Query expA with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                          Query expB with 0 result nodes
                                                          Query iden with 0 result nodes
                                                        Executing mappings...
                                                            - IF detected...true!
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                              RULE: skipAllBooleanRules... executing!
                                                              Skip Rule skipAllBooleanRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipToExprAdd... executing!
                                                              Skip Rule skipToExprAdd executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipAllArithmeticRules... executing!
                                                              Skip Rule skipAllArithmeticRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: mapStringLiteral... executing!
                                                                Model Element astm::gastm::StringLiteral created
                                                                Executing queries...
                                                                  Query exp with 1 result nodes - CONTENT : ['DESTINATARIO' ]
                                                                  Query st with 1 result nodes - CONTENT in line 24: ['DESTINATARIO' ]
                                                                Executing mappings...
                                                                  - CODE:  - node: simple_expression (kind) - Result: 'DESTINATARIO' 


                                                      (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                      RULE: mapActualParameter... executing!
                                                        Model Element astm::gastm::ActualParameterExpression created
                                                        Executing queries...
                                                          Query cp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                          Query expA with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                          Query expB with 0 result nodes
                                                          Query iden with 0 result nodes
                                                        Executing mappings...
                                                            - IF detected...true!
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                              RULE: skipAllBooleanRules... executing!
                                                              Skip Rule skipAllBooleanRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipToExprAdd... executing!
                                                              Skip Rule skipToExprAdd executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipAllArithmeticRules... executing!
                                                              Skip Rule skipAllArithmeticRules executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                                Query s with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: mapStringLiteral... executing!
                                                                Model Element astm::gastm::StringLiteral created
                                                                Executing queries...
                                                                  Query exp with 1 result nodes - CONTENT : ['DPROYECTO' ]
                                                                  Query st with 1 result nodes - CONTENT in line 24: ['DPROYECTO' ]
                                                                Executing mappings...
                                                                  - CODE:  - node: simple_expression (kind) - Result: 'DPROYECTO' 




                                          (5/6) result node: statement (kind). Rule... calling mapAssignment rule

                                          RULE: mapAssignment... executing!
                                            Model Element astm::gastm::ExpressionStatement created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['IE' ]
                                              Query value with 1 result nodes - CONTENT in line 26: [: TIPO_CG ]
                                              Query as with 1 result nodes - CONTENT in line 26: [: TIPO_CG := 'IE' ]
                                              Query st with 1 result nodes - CONTENT : [: TIPO_CG := 'IE' ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :TIPO_CG
                                              - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                RULE: skipAllBooleanRules... executing!
                                                Skip Rule skipAllBooleanRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ['IE' ]
                                                  Query s with 1 result nodes - CONTENT : ['IE' ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipToExprAdd... executing!
                                                Skip Rule skipToExprAdd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ['IE' ]
                                                  Query s with 1 result nodes - CONTENT : ['IE' ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ['IE' ]
                                                  Query s with 1 result nodes - CONTENT : ['IE' ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapStringLiteral... executing!
                                                  Model Element astm::gastm::StringLiteral created
                                                  Executing queries...
                                                    Query exp with 1 result nodes - CONTENT : ['IE' ]
                                                    Query st with 1 result nodes - CONTENT in line 26: ['IE' ]
                                                  Executing mappings...
                                                    - CODE:  - node: simple_expression (kind) - Result: 'IE' 


                                          (6/6) result node: statement (kind). Rule... calling mapBlockStatement rule

                                          RULE: mapBlockStatement... executing!
                                            Model Element astm::gastm::BlockStatement created
                                            Executing queries...
                                              Query excep with 0 result nodes
                                              Query stats with 4 result nodes
                                              Query block with 1 result nodes - CONTENT in line 28: [BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR ]
                                              Query decls with 0 result nodes
                                              Query st with 1 result nodes - CONTENT : [BEGIN GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ; FIRST_RECORD ; LOOP EXIT WHEN NVL ( : PPE_IP , '*' ) = 'S' ; NEXT_RECORD ; END LOOP ; SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) OR OR ]
                                            Executing mappings...
                                              - QUERY_RESULT: 4 bindings:
                                                (1/4) result node: statement (kind). Rule... calling mapFunctionCall rule

                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::ExpressionStatement created
                                                  Executing queries...
                                                    Query f with 1 result nodes - CONTENT in line 29: [GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ]
                                                    Query st with 1 result nodes - CONTENT : [GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                          Query params with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                          Query iden with 1 result nodes - CONTENT in line 29: [GO_BLOCK ]
                                                          Query fc with 1 result nodes - CONTENT in line 29: [GO_BLOCK ( 'OTG_PERPEUROPEOS' ) ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - GO_BLOCK (value) 
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                            RULE: mapActualParameter... executing!
                                                              Model Element astm::gastm::ActualParameterExpression created
                                                              Executing queries...
                                                                Query cp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                Query expA with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                Query expB with 0 result nodes
                                                                Query iden with 0 result nodes
                                                              Executing mappings...
                                                                  - IF detected...true!
                                                                  - QUERY_RESULT: 1 bindings:
                                                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                                    RULE: skipAllBooleanRules... executing!
                                                                    Skip Rule skipAllBooleanRules executing...
                                                                    Executing skip query...
                                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                      Query s with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                    Locating skip query... skip located! 
                                                                    Skipping to rule...
                                                                    RULE: skipToExprAdd... executing!
                                                                    Skip Rule skipToExprAdd executing...
                                                                    Executing skip query...
                                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                      Query s with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                    Locating skip query... skip located! 
                                                                    Skipping to rule...
                                                                    RULE: skipAllArithmeticRules... executing!
                                                                    Skip Rule skipAllArithmeticRules executing...
                                                                    Executing skip query...
                                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                      Query s with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                    Locating skip query... skip located! 
                                                                    Skipping to rule...
                                                                    RULE: mapStringLiteral... executing!
                                                                      Model Element astm::gastm::StringLiteral created
                                                                      Executing queries...
                                                                        Query exp with 1 result nodes - CONTENT : ['OTG_PERPEUROPEOS' ]
                                                                        Query st with 1 result nodes - CONTENT in line 29: ['OTG_PERPEUROPEOS' ]
                                                                      Executing mappings...
                                                                        - CODE:  - node: simple_expression (kind) - Result: 'OTG_PERPEUROPEOS' 




                                                (2/4) result node: statement (kind). Rule... calling mapFunctionCall rule

                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::ExpressionStatement created
                                                  Executing queries...
                                                    Query f with 1 result nodes - CONTENT : [FIRST_RECORD ]
                                                    Query st with 1 result nodes - CONTENT : [FIRST_RECORD ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 30: [FIRST_RECORD ]
                                                          Query fc with 1 result nodes - CONTENT : [FIRST_RECORD ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - FIRST_RECORD (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                (3/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                                                (4/4) result node: statement (kind). Rule... calling mapSelectStatement rule

                                                RULE: mapSelectStatement... executing!
                                                  Model Element astm::sastm::RDBSelectStatement created
                                                  Executing queries...
                                                    Query exp with 1 result nodes - CONTENT in line 41: [SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                    Query lvals with 1 result nodes - CONTENT in line 41: [: DESTINATARIO ]
                                                    Query st with 1 result nodes - CONTENT : [SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                                      RULE: mapSelectExpression... executing!
                                                        Model Element astm::sastm::RDBSelectExpression created
                                                        Executing queries...
                                                          Query w with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                          Query fromj with 0 result nodes
                                                          Query lvals with 1 result nodes - CONTENT in line 41: [: DESTINATARIO ]
                                                          Query fromn with 1 result nodes - CONTENT : [OTG_DPROYECTO ]
                                                          Query isCount with 0 result nodes
                                                          Query sexpr with 1 result nodes - CONTENT in line 41: [SELECT DPR_CODIGO INTO : DESTINATARIO FROM OTG_DPROYECTO WHERE ( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                          Query list with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                            RULE: mapColumn... executing!
                                                              Model Element astm::sastm::RDBColumnReference created
                                                              Executing queries...
                                                                Query dc with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: astm::gastm::Name created
                                                                - CODE:  - node: displayed_column (kind) - Result: DPR_CODIGO

                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                                            RULE: skipToConditionOr... executing!
                                                            Skip Rule skipToConditionOr executing...
                                                            Executing skip query...
                                                              Query c with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                              Query next with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipConditionOr... executing!
                                                            Skip Rule skipConditionOr executing...
                                                            Executing skip query...
                                                              Query co with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                              Query next with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipConditionAnd... executing!
                                                            Skip Rule skipConditionAnd executing...
                                                            Executing skip query...
                                                              Query ca with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                              Query next with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipConditionNot... executing!
                                                            Skip Rule skipConditionNot executing...
                                                            Executing skip query...
                                                              Query cn with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                              Query next with 1 result nodes - CONTENT : [( DPR_PER_ID IS NOT NULL AND DPR_PER_ID = : PPE_PER_ID ) ]
                                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                            - IF detected...true!
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                                              RULE: mapTable... executing!
                                                                Model Element astm::sastm::RDBTableReference created
                                                                Executing queries...
                                                                  Query st with 1 result nodes - CONTENT : [OTG_DPROYECTO ]
                                                                Executing mappings...
                                                                  - OPERATION_CREATION: astm::gastm::Name created
                                                                  - CODE:  - node: selected_table (kind) - Result: OTG_DPROYECTO


                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                                      RULE: mapIntoVariable... executing!
                                                        Model Element astm::sastm::RDBHostVariableReference created
                                                        Executing queries...
                                                          Query l with 1 result nodes - CONTENT in line 41: [: DESTINATARIO ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - CODE:  - node: lvalue (kind) - Result: :DESTINATARIO



                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (26/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item VER_CG WHEN-BUTTON-PRESSED DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 7 result nodes
                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                      Query decls with 1 result nodes - CONTENT : [pl_id PARAMLIST ; ]
                      Query st with 1 result nodes - CONTENT : [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 7 bindings:
                        (1/7) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 1 result nodes - CONTENT : [destroy_parameter_list ( pl_id ) ]
                            Query st with 1 result nodes - CONTENT : [NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ]
                            Query cond with 1 result nodes - CONTENT : [NOT Id_Null ( pl_id ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                              RULE: skipBinaryExpressionOr... executing!
                              Skip Rule skipBinaryExpressionOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NOT Id_Null ( pl_id ) ]
                                Query s with 1 result nodes - CONTENT : [NOT Id_Null ( pl_id ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipBinaryExpressionAnd... executing!
                              Skip Rule skipBinaryExpressionAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NOT Id_Null ( pl_id ) ]
                                Query s with 1 result nodes - CONTENT in line 4: [NOT Id_Null ( pl_id ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [NOT Id_Null ( pl_id ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [Id_Null ( pl_id ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Id_Null ( pl_id ) ]
                                      Query s with 1 result nodes - CONTENT : [Id_Null ( pl_id ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Id_Null ( pl_id ) ]
                                      Query s with 1 result nodes - CONTENT : [Id_Null ( pl_id ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Id_Null ( pl_id ) ]
                                      Query cast2 with 2 result nodes
                                      Query cast1 with 2 result nodes
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 4: [Id_Null ( pl_id ) ]
                                      Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                      Query iden with 2 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [pl_id ]
                                        Query params with 1 result nodes - CONTENT : [pl_id ]
                                        Query iden with 1 result nodes - CONTENT in line 4: [Id_Null ]
                                        Query fc with 1 result nodes - CONTENT in line 4: [Id_Null ( pl_id ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Id_Null (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [pl_id ]
                                              Query expA with 1 result nodes - CONTENT : [pl_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [pl_id ]
                                                    Query s with 1 result nodes - CONTENT : [pl_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [pl_id ]
                                                    Query s with 1 result nodes - CONTENT : [pl_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [pl_id ]
                                                    Query s with 1 result nodes - CONTENT : [pl_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [pl_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [pl_id ]
                                                    Query cast1 with 0 result nodes
                                                    Query dec with 0 result nodes
                                                    Query s with 1 result nodes - CONTENT : [pl_id ]
                                                    Query block with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 4: [pl_id ]
                                                  - IF detected...false! executing ELSE part 
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapFunctionCall... executing!
                                                    Model Element astm::gastm::FunctionCallExpression created
                                                    Executing queries...
                                                      Query exp with 0 result nodes
                                                      Query params with 0 result nodes
                                                      Query iden with 1 result nodes - CONTENT in line 4: [pl_id ]
                                                      Query fc with 1 result nodes - CONTENT : [pl_id ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - QUERY_ACCESS: variable: iden - 
                                                        node: identifier (kind) - leaf: ID (kind) - pl_id (value) 
                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                  - OPERATION_CREATION: astm::gastm::Not created

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 5: [destroy_parameter_list ( pl_id ) ]
                                  Query st with 1 result nodes - CONTENT : [destroy_parameter_list ( pl_id ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [pl_id ]
                                        Query params with 1 result nodes - CONTENT : [pl_id ]
                                        Query iden with 1 result nodes - CONTENT in line 5: [destroy_parameter_list ]
                                        Query fc with 1 result nodes - CONTENT in line 5: [destroy_parameter_list ( pl_id ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - destroy_parameter_list (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [pl_id ]
                                              Query expA with 1 result nodes - CONTENT : [pl_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [pl_id ]
                                                    Query s with 1 result nodes - CONTENT : [pl_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [pl_id ]
                                                    Query s with 1 result nodes - CONTENT : [pl_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [pl_id ]
                                                    Query s with 1 result nodes - CONTENT : [pl_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [pl_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [pl_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [pl_id ]
                                                    Query dec with 1 result nodes - CONTENT : [pl_id PARAMLIST ; ]
                                                    Query s with 1 result nodes - CONTENT : [pl_id ]
                                                    Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 5: [pl_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (2/7) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ( 'plista' ) ]
                            Query value with 1 result nodes - CONTENT : [pl_id ]
                            Query as with 1 result nodes - CONTENT in line 7: [pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ]
                            Query st with 1 result nodes - CONTENT : [pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: pl_id
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ( 'plista' ) ]
                                Query s with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ( 'plista' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ( 'plista' ) ]
                                Query s with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ( 'plista' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ( 'plista' ) ]
                                Query s with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ( 'plista' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ( 'plista' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ]
                                Query cast1 with 1 result nodes - CONTENT : [CREATE_PARAMETER_LIST ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 7: [CREATE_PARAMETER_LIST ( 'plista' ) ]
                                Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                Query iden with 1 result nodes - CONTENT in line 7: [CREATE_PARAMETER_LIST ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['plista' ]
                                  Query params with 1 result nodes - CONTENT : ['plista' ]
                                  Query iden with 1 result nodes - CONTENT in line 7: [CREATE_PARAMETER_LIST ]
                                  Query fc with 1 result nodes - CONTENT in line 7: [CREATE_PARAMETER_LIST ( 'plista' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - CREATE_PARAMETER_LIST (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['plista' ]
                                        Query expA with 1 result nodes - CONTENT : ['plista' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['plista' ]
                                              Query s with 1 result nodes - CONTENT : ['plista' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['plista' ]
                                              Query s with 1 result nodes - CONTENT : ['plista' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['plista' ]
                                              Query s with 1 result nodes - CONTENT : ['plista' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['plista' ]
                                                Query st with 1 result nodes - CONTENT in line 7: ['plista' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'plista' 




                        (3/7) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 8: [Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ]
                            Query st with 1 result nodes - CONTENT : [Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 4 result nodes
                                  Query params with 4 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 8: [Add_Parameter ]
                                  Query fc with 1 result nodes - CONTENT in line 8: [Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - Add_Parameter (value) 
                                  - QUERY_RESULT: 4 bindings:
                                    (1/4) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [pl_id ]
                                        Query expA with 1 result nodes - CONTENT : [pl_id ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query cast2 with 1 result nodes - CONTENT : [pl_id ]
                                              Query cast1 with 1 result nodes - CONTENT : [pl_id ]
                                              Query dec with 1 result nodes - CONTENT : [pl_id PARAMLIST ; ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 8: [pl_id ]
                                            - IF detected...true!
                                            - IF detected...true!
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                    (2/4) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['PARAM' ]
                                        Query expA with 1 result nodes - CONTENT : ['PARAM' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PARAM' ]
                                              Query s with 1 result nodes - CONTENT : ['PARAM' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PARAM' ]
                                              Query s with 1 result nodes - CONTENT : ['PARAM' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['PARAM' ]
                                              Query s with 1 result nodes - CONTENT : ['PARAM' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['PARAM' ]
                                                Query st with 1 result nodes - CONTENT in line 8: ['PARAM' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'PARAM' 


                                    (3/4) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                        Query expA with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query s with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query s with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query s with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query cast2 with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query cast1 with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 8: [TEXT_PARAMETER ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 8: [TEXT_PARAMETER ]
                                                Query fc with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - TEXT_PARAMETER (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (4/4) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: PEU_CG ]
                                        Query expA with 1 result nodes - CONTENT : [: PEU_CG ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                                              Query s with 1 result nodes - CONTENT : [: PEU_CG ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                                              Query s with 1 result nodes - CONTENT : [: PEU_CG ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: PEU_CG ]
                                              Query s with 1 result nodes - CONTENT : [: PEU_CG ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 8: [: PEU_CG ]
                                                Query ea with 1 result nodes - CONTENT : [: PEU_CG ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :PEU_CG




                        (4/7) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 9: [Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ]
                            Query st with 1 result nodes - CONTENT : [Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 4 result nodes
                                  Query params with 4 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 9: [Add_Parameter ]
                                  Query fc with 1 result nodes - CONTENT in line 9: [Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - Add_Parameter (value) 
                                  - QUERY_RESULT: 4 bindings:
                                    (1/4) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [pl_id ]
                                        Query expA with 1 result nodes - CONTENT : [pl_id ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query cast2 with 1 result nodes - CONTENT : [pl_id ]
                                              Query cast1 with 1 result nodes - CONTENT : [pl_id ]
                                              Query dec with 1 result nodes - CONTENT : [pl_id PARAMLIST ; ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 9: [pl_id ]
                                            - IF detected...true!
                                            - IF detected...true!
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                    (2/4) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['CONSULTA' ]
                                        Query expA with 1 result nodes - CONTENT : ['CONSULTA' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['CONSULTA' ]
                                              Query s with 1 result nodes - CONTENT : ['CONSULTA' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['CONSULTA' ]
                                              Query s with 1 result nodes - CONTENT : ['CONSULTA' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['CONSULTA' ]
                                              Query s with 1 result nodes - CONTENT : ['CONSULTA' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['CONSULTA' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['CONSULTA' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'CONSULTA' 


                                    (3/4) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                        Query expA with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query s with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query s with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query s with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query cast2 with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query cast1 with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 9: [TEXT_PARAMETER ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 9: [TEXT_PARAMETER ]
                                                Query fc with 1 result nodes - CONTENT : [TEXT_PARAMETER ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - TEXT_PARAMETER (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (4/4) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['C' ]
                                        Query expA with 1 result nodes - CONTENT : ['C' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['C' ]
                                              Query s with 1 result nodes - CONTENT : ['C' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['C' ]
                                              Query s with 1 result nodes - CONTENT : ['C' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['C' ]
                                              Query s with 1 result nodes - CONTENT : ['C' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['C' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['C' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'C' 




                        (5/7) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : ['OTRI' ]
                            Query value with 1 result nodes - CONTENT in line 10: [: GLOBAL . USR ]
                            Query as with 1 result nodes - CONTENT in line 10: [: GLOBAL . USR := 'OTRI' ]
                            Query st with 1 result nodes - CONTENT : [: GLOBAL . USR := 'OTRI' ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: :GLOBAL.USR
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : ['OTRI' ]
                                Query s with 1 result nodes - CONTENT : ['OTRI' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : ['OTRI' ]
                                Query s with 1 result nodes - CONTENT : ['OTRI' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : ['OTRI' ]
                                Query s with 1 result nodes - CONTENT : ['OTRI' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapStringLiteral... executing!
                                Model Element astm::gastm::StringLiteral created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['OTRI' ]
                                  Query st with 1 result nodes - CONTENT in line 10: ['OTRI' ]
                                Executing mappings...
                                  - CODE:  - node: simple_expression (kind) - Result: 'OTRI' 


                        (6/7) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 11: [CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ]
                            Query st with 1 result nodes - CONTENT : [CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 6 result nodes
                                  Query params with 6 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 11: [CALL_FORM ]
                                  Query fc with 1 result nodes - CONTENT in line 11: [CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - CALL_FORM (value) 
                                  - QUERY_RESULT: 6 bindings:
                                    (1/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                        Query expA with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                              Query s with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                              Query s with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                              Query s with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['OTG_CENTROS_GASTO_OTRI' ]
                                                Query st with 1 result nodes - CONTENT in line 11: ['OTG_CENTROS_GASTO_OTRI' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'OTG_CENTROS_GASTO_OTRI' 


                                    (2/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [HIDE ]
                                        Query expA with 1 result nodes - CONTENT : [HIDE ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [HIDE ]
                                              Query s with 1 result nodes - CONTENT : [HIDE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [HIDE ]
                                              Query s with 1 result nodes - CONTENT : [HIDE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [HIDE ]
                                              Query s with 1 result nodes - CONTENT : [HIDE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [HIDE ]
                                              Query cast2 with 1 result nodes - CONTENT : [HIDE ]
                                              Query cast1 with 1 result nodes - CONTENT : [HIDE ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [HIDE ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 11: [HIDE ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 11: [HIDE ]
                                                Query fc with 1 result nodes - CONTENT : [HIDE ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - HIDE (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (3/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [DO_REPLACE ]
                                        Query expA with 1 result nodes - CONTENT : [DO_REPLACE ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [DO_REPLACE ]
                                              Query s with 1 result nodes - CONTENT : [DO_REPLACE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [DO_REPLACE ]
                                              Query s with 1 result nodes - CONTENT : [DO_REPLACE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [DO_REPLACE ]
                                              Query s with 1 result nodes - CONTENT : [DO_REPLACE ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [DO_REPLACE ]
                                              Query cast2 with 1 result nodes - CONTENT : [DO_REPLACE ]
                                              Query cast1 with 1 result nodes - CONTENT : [DO_REPLACE ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [DO_REPLACE ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 11: [DO_REPLACE ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 11: [DO_REPLACE ]
                                                Query fc with 1 result nodes - CONTENT : [DO_REPLACE ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - DO_REPLACE (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (4/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                        Query expA with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                              Query s with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                              Query s with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                              Query s with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                              Query cast2 with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                              Query cast1 with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 11: [NO_QUERY_ONLY ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 11: [NO_QUERY_ONLY ]
                                                Query fc with 1 result nodes - CONTENT : [NO_QUERY_ONLY ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - NO_QUERY_ONLY (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (5/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                        Query expA with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                              Query s with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                              Query s with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                              Query s with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                              Query cast2 with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                              Query cast1 with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 11: [NO_SHARE_LIBRARY_DATA ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 11: [NO_SHARE_LIBRARY_DATA ]
                                                Query fc with 1 result nodes - CONTENT : [NO_SHARE_LIBRARY_DATA ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - NO_SHARE_LIBRARY_DATA (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (6/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [PL_ID ]
                                        Query expA with 1 result nodes - CONTENT : [PL_ID ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [PL_ID ]
                                              Query s with 1 result nodes - CONTENT : [PL_ID ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [PL_ID ]
                                              Query s with 1 result nodes - CONTENT : [PL_ID ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [PL_ID ]
                                              Query s with 1 result nodes - CONTENT : [PL_ID ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [PL_ID ]
                                              Query cast2 with 1 result nodes - CONTENT : [PL_ID ]
                                              Query cast1 with 1 result nodes - CONTENT : [PL_ID ]
                                              Query dec with 1 result nodes - CONTENT : [pl_id PARAMLIST ; ]
                                              Query s with 1 result nodes - CONTENT : [PL_ID ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 11: [PL_ID ]
                                            - IF detected...true!
                                            - IF detected...true!
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (7/7) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 12: [destroy_parameter_list ( pl_id ) ]
                            Query st with 1 result nodes - CONTENT : [destroy_parameter_list ( pl_id ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [pl_id ]
                                  Query params with 1 result nodes - CONTENT : [pl_id ]
                                  Query iden with 1 result nodes - CONTENT in line 12: [destroy_parameter_list ]
                                  Query fc with 1 result nodes - CONTENT in line 12: [destroy_parameter_list ( pl_id ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - destroy_parameter_list (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [pl_id ]
                                        Query expA with 1 result nodes - CONTENT : [pl_id ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [pl_id ]
                                              Query cast2 with 1 result nodes - CONTENT : [pl_id ]
                                              Query cast1 with 1 result nodes - CONTENT : [pl_id ]
                                              Query dec with 1 result nodes - CONTENT : [pl_id PARAMLIST ; ]
                                              Query s with 1 result nodes - CONTENT : [pl_id ]
                                              Query block with 1 result nodes - CONTENT in line 3: [DECLARE pl_id PARAMLIST ; BEGIN NOT Id_Null ( pl_id ) THEN destroy_parameter_list ( pl_id ) ; end if ; pl_id := CREATE_PARAMETER_LIST ( 'plista' ) ; Add_Parameter ( pl_id , 'PARAM' , TEXT_PARAMETER , : PEU_CG ) ; Add_Parameter ( pl_id , 'CONSULTA' , TEXT_PARAMETER , 'C' ) ; : GLOBAL . USR := 'OTRI' ; CALL_FORM ( 'OTG_CENTROS_GASTO_OTRI' , HIDE , DO_REPLACE , NO_QUERY_ONLY , NO_SHARE_LIBRARY_DATA , PL_ID ) ; destroy_parameter_list ( pl_id ) ; END ]
                                              Query iden with 1 result nodes - CONTENT in line 12: [pl_id ]
                                            - IF detected...true!
                                            - IF detected...true!
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!





            (27/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PEU_SEU_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; ]
                Query stats with 1 result nodes - CONTENT : [declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ]
                      Query block with 1 result nodes - CONTENT in line 8: [declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [declare cursor primary_cur is select 'x' from OTG_SEUROPEOS where SEU_CODIGO = : OTG_PEUROPEOS . PEU_SEU_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 4 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_SEU_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SEU_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SEU_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_SEU_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SEU_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_SEU_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 4 bindings:
                              (1/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (2/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/4) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 3 result nodes
                                  Query st with 1 result nodes - CONTENT : [( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ]
                                  Query cond with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipBinaryExpressionOr... executing!
                                    Skip Rule skipBinaryExpressionOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [not primary_cur %found ]
                                      Query s with 1 result nodes - CONTENT : [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [not primary_cur %found ]
                                      Query s with 1 result nodes - CONTENT in line 12: [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapUnaryExpressionNot... executing!
                                      Model Element astm::gastm::UnaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 12: [not primary_cur %found ]
                                        Query expa1 with 1 result nodes - CONTENT in line 12: [primary_cur %found ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT in line 12: [primary_cur %found ]
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [primary_cur ]
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [primary_cur ]
                                            Query cast2 with 1 result nodes - CONTENT : [primary_cur ]
                                            Query cast1 with 1 result nodes - CONTENT : [primary_cur ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                            Query block with 0 result nodes
                                            Query iden with 1 result nodes - CONTENT in line 12: [primary_cur ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 12: [primary_cur ]
                                              Query fc with 1 result nodes - CONTENT : [primary_cur ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - primary_cur (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - OPERATION_CREATION: astm::gastm::Not created

                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 13: [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                        Query st with 1 result nodes - CONTENT : [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                              Query params with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                              Query iden with 1 result nodes - CONTENT in line 13: [message ]
                                              Query fc with 1 result nodes - CONTENT in line 13: [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - message (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                    Query expA with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                            Query st with 1 result nodes - CONTENT in line 13: ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' 




                                    (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                                    (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (4/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (28/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WGO_PEU_SEU_CODIGO WHEN-BUTTON-PRESSED Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace replace ]
                Query stats with 1 result nodes - CONTENT : [Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [NomVar := ]
                      Query block with 1 result nodes - CONTENT in line 5: [Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace ]
                      Query decls with 3 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare NomVar Varchar2 ( 100 ) ; ValVar number ; r number ; Begin NomVar := replace replace ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : []
                            Query value with 1 result nodes - CONTENT : [NomVar ]
                            Query as with 1 result nodes - CONTENT in line 7: [NomVar := ]
                            Query st with 1 result nodes - CONTENT : [NomVar := ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: NomVar
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 1 result nodes - CONTENT : []
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 1 result nodes - CONTENT : []
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 0 result nodes
                              Locating skip query... SKIP VARIABLE DOESNT EXIST



            (29/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PEU_APR_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; ]
                Query stats with 1 result nodes - CONTENT : [declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ]
                      Query block with 1 result nodes - CONTENT in line 8: [declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [declare cursor primary_cur is select 'x' from OTG_APRODUCTIVAS where APR_CODIGO = : OTG_PEUROPEOS . PEU_APR_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 4 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_APR_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_APR_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_APR_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_APR_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_APR_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_APR_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_APR_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_APR_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_APR_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_APR_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_APR_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 4 bindings:
                              (1/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (2/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/4) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 3 result nodes
                                  Query st with 1 result nodes - CONTENT : [( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ]
                                  Query cond with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipBinaryExpressionOr... executing!
                                    Skip Rule skipBinaryExpressionOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [not primary_cur %found ]
                                      Query s with 1 result nodes - CONTENT : [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [not primary_cur %found ]
                                      Query s with 1 result nodes - CONTENT in line 12: [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapUnaryExpressionNot... executing!
                                      Model Element astm::gastm::UnaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 12: [not primary_cur %found ]
                                        Query expa1 with 1 result nodes - CONTENT in line 12: [primary_cur %found ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT in line 12: [primary_cur %found ]
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [primary_cur ]
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [primary_cur ]
                                            Query cast2 with 1 result nodes - CONTENT : [primary_cur ]
                                            Query cast1 with 1 result nodes - CONTENT : [primary_cur ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                            Query block with 0 result nodes
                                            Query iden with 1 result nodes - CONTENT in line 12: [primary_cur ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 12: [primary_cur ]
                                              Query fc with 1 result nodes - CONTENT : [primary_cur ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - primary_cur (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - OPERATION_CREATION: astm::gastm::Not created

                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 13: [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                        Query st with 1 result nodes - CONTENT : [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                              Query params with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                              Query iden with 1 result nodes - CONTENT in line 13: [message ]
                                              Query fc with 1 result nodes - CONTENT in line 13: [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - message (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                    Query expA with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                            Query st with 1 result nodes - CONTENT in line 13: ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' 




                                    (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                                    (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (4/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (30/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PEU_SUP_CODIGO WHEN-VALIDATE-ITEM declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; ]
                Query stats with 1 result nodes - CONTENT : [declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ]
                      Query block with 1 result nodes - CONTENT in line 8: [declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [declare cursor primary_cur is select 'x' from OTG_SUPERPROYECTOS where SUP_CODIGO = : OTG_PEUROPEOS . PEU_SUP_CODIGO ; primary_dummy char ( 1 ) ; begin ( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 4 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ) ]
                                Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ]
                                Query s with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_SUP_CODIGO is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SUP_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SUP_CODIGO ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SUP_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 9: [: OTG_PEUROPEOS . PEU_SUP_CODIGO ]
                                        Query ea with 1 result nodes - CONTENT : [: OTG_PEUROPEOS . PEU_SUP_CODIGO ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :OTG_PEUROPEOS.PEU_SUP_CODIGO

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 4 bindings:
                              (1/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (2/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/4) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 3 result nodes
                                  Query st with 1 result nodes - CONTENT : [( not primary_cur %found ) then message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ; close primary_cur ; raise form_trigger_failure ; end if ]
                                  Query cond with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( not primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipBinaryExpressionOr... executing!
                                    Skip Rule skipBinaryExpressionOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [not primary_cur %found ]
                                      Query s with 1 result nodes - CONTENT : [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [not primary_cur %found ]
                                      Query s with 1 result nodes - CONTENT in line 12: [not primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapUnaryExpressionNot... executing!
                                      Model Element astm::gastm::UnaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 12: [not primary_cur %found ]
                                        Query expa1 with 1 result nodes - CONTENT in line 12: [primary_cur %found ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT in line 12: [primary_cur %found ]
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [primary_cur ]
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [primary_cur ]
                                            Query cast2 with 1 result nodes - CONTENT : [primary_cur ]
                                            Query cast1 with 1 result nodes - CONTENT : [primary_cur ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [primary_cur ]
                                            Query block with 0 result nodes
                                            Query iden with 1 result nodes - CONTENT in line 12: [primary_cur ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 12: [primary_cur ]
                                              Query fc with 1 result nodes - CONTENT : [primary_cur ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - primary_cur (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - OPERATION_CREATION: astm::gastm::Not created

                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 13: [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                        Query st with 1 result nodes - CONTENT : [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                              Query params with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                              Query iden with 1 result nodes - CONTENT in line 13: [message ]
                                              Query fc with 1 result nodes - CONTENT in line 13: [message ( 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - message (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                    Query expA with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Query s with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                            Query st with 1 result nodes - CONTENT in line 13: ['El valor de clave ajena no existe actualmente en la tabla de claves primarias.' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'El valor de clave ajena no existe actualmente en la tabla de claves primarias.' 




                                    (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                                    (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (4/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (31/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PEU_SUP_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-CHANGE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 24: [WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; ]
                      Query stats with 4 result nodes
                      Query block with 1 result nodes - CONTENT in line 7: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                      Query decls with 4 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query value with 1 result nodes - CONTENT : [CodigoUO ]
                            Query as with 1 result nodes - CONTENT in line 9: [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query st with 1 result nodes - CONTENT : [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: CodigoUO
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 9: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query block with 1 result nodes - CONTENT in line 7: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query params with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query iden with 1 result nodes - CONTENT in line 9: [NAME_IN ]
                                  Query fc with 1 result nodes - CONTENT in line 9: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expA with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 9: [: SYSTEM . TRIGGER_ITEM ]
                                                Query ea with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.TRIGGER_ITEM




                        (2/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                            Query value with 1 result nodes - CONTENT : [n ]
                            Query as with 1 result nodes - CONTENT in line 10: [n := instr ( : system . trigger_item , '.' ) ]
                            Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: n
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [instr ]
                                Query cast1 with 1 result nodes - CONTENT : [instr ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 10: [instr ( : system . trigger_item , '.' ) ]
                                Query block with 1 result nodes - CONTENT in line 7: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 10: [instr ]
                                  Query fc with 1 result nodes - CONTENT in line 10: [instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 10: [: system . trigger_item ]
                                                Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['.' ]
                                        Query expA with 1 result nodes - CONTENT : ['.' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['.' ]
                                                Query st with 1 result nodes - CONTENT in line 10: ['.' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '.' 




                        (3/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query value with 1 result nodes - CONTENT : [NomVar ]
                            Query as with 1 result nodes - CONTENT in line 11: [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query st with 1 result nodes - CONTENT : [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: NomVar
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT in line 11: [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! SKIP RULE NOT LOCATED!

                        (4/4) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                                Query s with 1 result nodes - CONTENT in line 13: [CodigoUO IS NOT NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 13: [CodigoUO IS NOT NULL ]
                                  Query expa with 1 result nodes - CONTENT : [CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query dec with 1 result nodes - CONTENT : [CodigoUO Number ; ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query block with 1 result nodes - CONTENT in line 7: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 13: [CodigoUO ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 16: [SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ]
                                  Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                  Query st with 1 result nodes - CONTENT : [SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_SUPERPROYECTOS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 16: [SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ]
                                        Query list with 1 result nodes - CONTENT : [SUP_TITULO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [SUP_TITULO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: SUP_TITULO

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 17: [SUP_CODIGO = CodigoUO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [SUP_CODIGO = CodigoUO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 17: [SUP_CODIGO = CodigoUO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [CodigoUO ]
                                              Query exp1 with 1 result nodes - CONTENT : [SUP_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [SUP_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [SUP_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [SUP_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [SUP_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [SUP_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [SUP_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 7: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 17: [SUP_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 17: [SUP_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [SUP_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - SUP_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query dec with 1 result nodes - CONTENT : [CodigoUO Number ; ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query block with 1 result nodes - CONTENT in line 7: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 17: [CodigoUO ]
                                                - IF detected...true!
                                                - IF detected...true!
                                                Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_SUPERPROYECTOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_SUPERPROYECTOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [ValVar ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: ValVar


                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 20: [Copy ( ValVar , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [Copy ( ValVar , NomVar ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 20: [Copy ]
                                        Query fc with 1 result nodes - CONTENT in line 20: [Copy ( ValVar , NomVar ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [ValVar ]
                                              Query expA with 1 result nodes - CONTENT : [ValVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query dec with 1 result nodes - CONTENT : [ValVar Varchar2 ( 500 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                    Query block with 1 result nodes - CONTENT in line 7: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 20: [ValVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [NomVar ]
                                              Query expA with 1 result nodes - CONTENT : [NomVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                    Query block with 1 result nodes - CONTENT in line 7: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT SUP_TITULO INTO ValVar FROM OTG_SUPERPROYECTOS WHERE SUP_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 20: [NomVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (32/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WPEU_SUP_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                            Query cond with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                                Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                                  Query expa with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query s with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query params with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query iden with 1 result nodes - CONTENT in line 7: [NAME_IN ]
                                        Query fc with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 7: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item



                                  - OPERATION_CREATION: astm::gastm::NotEqual created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                  Query value with 1 result nodes - CONTENT : [n ]
                                  Query as with 1 result nodes - CONTENT in line 8: [n := instr ( : system . trigger_item , '.' ) ]
                                  Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: n
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [instr ]
                                      Query cast1 with 1 result nodes - CONTENT : [instr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 8: [instr ]
                                        Query fc with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 8: [: system . trigger_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['.' ]
                                              Query expA with 1 result nodes - CONTENT : ['.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['.' ]
                                                      Query st with 1 result nodes - CONTENT in line 8: ['.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: '.' 




                              (2/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                  Query value with 1 result nodes - CONTENT : [NomVar ]
                                  Query as with 1 result nodes - CONTENT in line 9: [NomVar := substr ( : system . current_item , 2 ) ]
                                  Query st with 1 result nodes - CONTENT : [NomVar := substr ( : system . current_item , 2 ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: NomVar
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [substr ]
                                      Query cast1 with 1 result nodes - CONTENT : [substr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 9: [substr ]
                                        Query fc with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - substr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 9: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [2 ]
                                              Query expA with 1 result nodes - CONTENT : [2 ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (3/3) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ]
                                  Query cond with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query s with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query cast2 with 2 result nodes
                                            Query cast1 with 2 result nodes
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                            Query iden with 2 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [NomVar ]
                                              Query params with 1 result nodes - CONTENT : [NomVar ]
                                              Query iden with 1 result nodes - CONTENT in line 10: [NAME_IN ]
                                              Query fc with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 0 result nodes
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                            Query fc with 1 result nodes - CONTENT : [NomVar ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - NomVar (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                        Query st with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 2 result nodes
                                              Query params with 2 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 11: [copy ]
                                              Query fc with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                              - QUERY_RESULT: 2 bindings:
                                                (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NULL ]
                                                    Query expA with 1 result nodes - CONTENT : [NULL ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapNullLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                                            Query st with 1 result nodes - CONTENT in line 11: [NULL ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: NULL 


                                                (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                                          Query iden with 1 result nodes - CONTENT in line 11: [NomVar ]
                                                        - IF detected...true!
                                                        - IF detected...true!
                                                        Locating skip query... skip located! SKIP RULE NOT LOCATED!



                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (33/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WADD_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 3 result nodes
                      Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 3 bindings:
                        (1/3) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                                Query s with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 3: [= ]
                                  Query exp with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 3: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: System . Form_Status ]
                                  Query expl2 with 1 result nodes - CONTENT : ['CHANGED' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: System . Form_Status ]
                                      Query s with 1 result nodes - CONTENT : [: System . Form_Status ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 3: [: System . Form_Status ]
                                        Query ea with 1 result nodes - CONTENT : [: System . Form_Status ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :System.Form_Status

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['CHANGED' ]
                                      Query s with 1 result nodes - CONTENT : ['CHANGED' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['CHANGED' ]
                                        Query st with 1 result nodes - CONTENT in line 3: ['CHANGED' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'CHANGED' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [15 ]
                                  Query value with 1 result nodes - CONTENT in line 4: [: SYSTEM . MESSAGE_LEVEL ]
                                  Query as with 1 result nodes - CONTENT in line 4: [: SYSTEM . MESSAGE_LEVEL := 15 ]
                                  Query st with 1 result nodes - CONTENT : [: SYSTEM . MESSAGE_LEVEL := 15 ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :SYSTEM.MESSAGE_LEVEL
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                              (2/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [POST ]
                                  Query st with 1 result nodes - CONTENT : [POST ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 4: [POST ]
                                        Query fc with 1 result nodes - CONTENT : [POST ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - POST (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (3/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [0 ]
                                  Query value with 1 result nodes - CONTENT in line 4: [: SYSTEM . MESSAGE_LEVEL ]
                                  Query as with 1 result nodes - CONTENT in line 4: [: SYSTEM . MESSAGE_LEVEL := 0 ]
                                  Query st with 1 result nodes - CONTENT : [: SYSTEM . MESSAGE_LEVEL := 0 ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :SYSTEM.MESSAGE_LEVEL
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (2/3) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [null ]
                            Query value with 1 result nodes - CONTENT in line 7: [: global . sup_codigo ]
                            Query as with 1 result nodes - CONTENT in line 7: [: global . sup_codigo := null ]
                            Query st with 1 result nodes - CONTENT : [: global . sup_codigo := null ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: :global.sup_codigo
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapNullLiteral... executing!
                                Model Element astm::gastm::StringLiteral created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [null ]
                                  Query st with 1 result nodes - CONTENT in line 7: [null ]
                                Executing mappings...
                                  - CODE:  - node: simple_expression (kind) - Result: null 


                        (3/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 8: [call ( 'otg_superproyectos' , no_hide , no_replace ) ]
                            Query st with 1 result nodes - CONTENT : [call ( 'otg_superproyectos' , no_hide , no_replace ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 3 result nodes
                                  Query params with 3 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 8: [call ]
                                  Query fc with 1 result nodes - CONTENT in line 8: [call ( 'otg_superproyectos' , no_hide , no_replace ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - call (value) 
                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                        Query expA with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['otg_superproyectos' ]
                                                Query st with 1 result nodes - CONTENT in line 8: ['otg_superproyectos' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'otg_superproyectos' 


                                    (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [no_hide ]
                                        Query expA with 1 result nodes - CONTENT : [no_hide ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query cast2 with 1 result nodes - CONTENT : [no_hide ]
                                              Query cast1 with 1 result nodes - CONTENT : [no_hide ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                              Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ]
                                              Query iden with 1 result nodes - CONTENT in line 8: [no_hide ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 8: [no_hide ]
                                                Query fc with 1 result nodes - CONTENT : [no_hide ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - no_hide (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [no_replace ]
                                        Query expA with 1 result nodes - CONTENT : [no_replace ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query cast2 with 1 result nodes - CONTENT : [no_replace ]
                                              Query cast1 with 1 result nodes - CONTENT : [no_replace ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                              Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . sup_codigo := null ; call ( 'otg_superproyectos' , no_hide , no_replace ) ; End ]
                                              Query iden with 1 result nodes - CONTENT in line 8: [no_replace ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 8: [no_replace ]
                                                Query fc with 1 result nodes - CONTENT : [no_replace ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - no_replace (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST






            (34/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WGO_PEU_SUP_CODIGO WHEN-BUTTON-PRESSED declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace replace ]
                Query stats with 1 result nodes - CONTENT : [declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [Wsup_codigo := ]
                      Query block with 1 result nodes - CONTENT in line 5: [declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace ]
                      Query decls with 3 result nodes
                      Query st with 1 result nodes - CONTENT : [declare codigo number ; Wsup_codigo Varchar2 ( 100 ) ; r number ; begin Wsup_codigo := replace replace ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : []
                            Query value with 1 result nodes - CONTENT : [Wsup_codigo ]
                            Query as with 1 result nodes - CONTENT in line 7: [Wsup_codigo := ]
                            Query st with 1 result nodes - CONTENT : [Wsup_codigo := ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: Wsup_codigo
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 1 result nodes - CONTENT : []
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 1 result nodes - CONTENT : []
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 0 result nodes
                              Locating skip query... SKIP VARIABLE DOESNT EXIST



            (35/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PEU_ACC_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-CHANGE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 23: [WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; ]
                      Query stats with 4 result nodes
                      Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                      Query decls with 4 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query value with 1 result nodes - CONTENT : [CodigoUO ]
                            Query as with 1 result nodes - CONTENT in line 8: [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query st with 1 result nodes - CONTENT : [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: CodigoUO
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 8: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query params with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query iden with 1 result nodes - CONTENT in line 8: [NAME_IN ]
                                  Query fc with 1 result nodes - CONTENT in line 8: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expA with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 8: [: SYSTEM . TRIGGER_ITEM ]
                                                Query ea with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.TRIGGER_ITEM




                        (2/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                            Query value with 1 result nodes - CONTENT : [n ]
                            Query as with 1 result nodes - CONTENT in line 9: [n := instr ( : system . trigger_item , '.' ) ]
                            Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: n
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [instr ]
                                Query cast1 with 1 result nodes - CONTENT : [instr ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 9: [instr ( : system . trigger_item , '.' ) ]
                                Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 9: [instr ]
                                  Query fc with 1 result nodes - CONTENT in line 9: [instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 9: [: system . trigger_item ]
                                                Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['.' ]
                                        Query expA with 1 result nodes - CONTENT : ['.' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['.' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['.' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '.' 




                        (3/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query value with 1 result nodes - CONTENT : [NomVar ]
                            Query as with 1 result nodes - CONTENT in line 10: [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query st with 1 result nodes - CONTENT : [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: NomVar
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT in line 10: [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! SKIP RULE NOT LOCATED!

                        (4/4) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                                Query s with 1 result nodes - CONTENT in line 12: [CodigoUO IS NOT NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 12: [CodigoUO IS NOT NULL ]
                                  Query expa with 1 result nodes - CONTENT : [CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query dec with 1 result nodes - CONTENT : [CodigoUO Number ; ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 12: [CodigoUO ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 15: [SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ]
                                  Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                  Query st with 1 result nodes - CONTENT : [SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_ACCIONES ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 15: [SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ]
                                        Query list with 1 result nodes - CONTENT : [ACC_NOMBRE ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [ACC_NOMBRE ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: ACC_NOMBRE

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 16: [ACC_CODIGO = CodigoUO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [ACC_CODIGO = CodigoUO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 16: [ACC_CODIGO = CodigoUO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [CodigoUO ]
                                              Query exp1 with 1 result nodes - CONTENT : [ACC_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [ACC_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [ACC_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [ACC_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [ACC_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [ACC_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [ACC_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 16: [ACC_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 16: [ACC_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [ACC_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - ACC_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query dec with 1 result nodes - CONTENT : [CodigoUO Number ; ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 16: [CodigoUO ]
                                                - IF detected...true!
                                                - IF detected...true!
                                                Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_ACCIONES ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_ACCIONES


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [ValVar ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: ValVar


                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 19: [Copy ( ValVar , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [Copy ( ValVar , NomVar ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 19: [Copy ]
                                        Query fc with 1 result nodes - CONTENT in line 19: [Copy ( ValVar , NomVar ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [ValVar ]
                                              Query expA with 1 result nodes - CONTENT : [ValVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query dec with 1 result nodes - CONTENT : [ValVar Varchar2 ( 500 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                    Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 19: [ValVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [NomVar ]
                                              Query expA with 1 result nodes - CONTENT : [NomVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                    Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT ACC_NOMBRE INTO ValVar FROM OTG_ACCIONES WHERE ACC_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 19: [NomVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (36/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WPEU_ACC_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                            Query cond with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                                Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                                  Query expa with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query s with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query params with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query iden with 1 result nodes - CONTENT in line 7: [NAME_IN ]
                                        Query fc with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 7: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item



                                  - OPERATION_CREATION: astm::gastm::NotEqual created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                  Query value with 1 result nodes - CONTENT : [n ]
                                  Query as with 1 result nodes - CONTENT in line 8: [n := instr ( : system . trigger_item , '.' ) ]
                                  Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: n
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [instr ]
                                      Query cast1 with 1 result nodes - CONTENT : [instr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 8: [instr ]
                                        Query fc with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 8: [: system . trigger_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['.' ]
                                              Query expA with 1 result nodes - CONTENT : ['.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['.' ]
                                                      Query st with 1 result nodes - CONTENT in line 8: ['.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: '.' 




                              (2/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                  Query value with 1 result nodes - CONTENT : [NomVar ]
                                  Query as with 1 result nodes - CONTENT in line 9: [NomVar := substr ( : system . current_item , 2 ) ]
                                  Query st with 1 result nodes - CONTENT : [NomVar := substr ( : system . current_item , 2 ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: NomVar
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [substr ]
                                      Query cast1 with 1 result nodes - CONTENT : [substr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 9: [substr ]
                                        Query fc with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - substr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 9: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [2 ]
                                              Query expA with 1 result nodes - CONTENT : [2 ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (3/3) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ]
                                  Query cond with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query s with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query cast2 with 2 result nodes
                                            Query cast1 with 2 result nodes
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                            Query iden with 2 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [NomVar ]
                                              Query params with 1 result nodes - CONTENT : [NomVar ]
                                              Query iden with 1 result nodes - CONTENT in line 10: [NAME_IN ]
                                              Query fc with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 0 result nodes
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                            Query fc with 1 result nodes - CONTENT : [NomVar ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - NomVar (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                        Query st with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 2 result nodes
                                              Query params with 2 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 11: [copy ]
                                              Query fc with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                              - QUERY_RESULT: 2 bindings:
                                                (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NULL ]
                                                    Query expA with 1 result nodes - CONTENT : [NULL ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapNullLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                                            Query st with 1 result nodes - CONTENT in line 11: [NULL ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: NULL 


                                                (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                                          Query iden with 1 result nodes - CONTENT in line 11: [NomVar ]
                                                        - IF detected...true!
                                                        - IF detected...true!
                                                        Locating skip query... skip located! SKIP RULE NOT LOCATED!



                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (37/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WADD_PEU_ACC_CODIGO WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 2 result nodes
                      Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                                Query s with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 3: [= ]
                                  Query exp with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 3: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: System . Form_Status ]
                                  Query expl2 with 1 result nodes - CONTENT : ['CHANGED' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: System . Form_Status ]
                                      Query s with 1 result nodes - CONTENT : [: System . Form_Status ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 3: [: System . Form_Status ]
                                        Query ea with 1 result nodes - CONTENT : [: System . Form_Status ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :System.Form_Status

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['CHANGED' ]
                                      Query s with 1 result nodes - CONTENT : ['CHANGED' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['CHANGED' ]
                                        Query st with 1 result nodes - CONTENT in line 3: ['CHANGED' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'CHANGED' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [15 ]
                                  Query value with 1 result nodes - CONTENT in line 4: [: SYSTEM . MESSAGE_LEVEL ]
                                  Query as with 1 result nodes - CONTENT in line 4: [: SYSTEM . MESSAGE_LEVEL := 15 ]
                                  Query st with 1 result nodes - CONTENT : [: SYSTEM . MESSAGE_LEVEL := 15 ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :SYSTEM.MESSAGE_LEVEL
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                              (2/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [POST ]
                                  Query st with 1 result nodes - CONTENT : [POST ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 4: [POST ]
                                        Query fc with 1 result nodes - CONTENT : [POST ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - POST (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (3/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [0 ]
                                  Query value with 1 result nodes - CONTENT in line 4: [: SYSTEM . MESSAGE_LEVEL ]
                                  Query as with 1 result nodes - CONTENT in line 4: [: SYSTEM . MESSAGE_LEVEL := 0 ]
                                  Query st with 1 result nodes - CONTENT : [: SYSTEM . MESSAGE_LEVEL := 0 ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :SYSTEM.MESSAGE_LEVEL
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 7: [call ( 'otg_acciones' , no_hide , no_replace ) ]
                            Query st with 1 result nodes - CONTENT : [call ( 'otg_acciones' , no_hide , no_replace ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 3 result nodes
                                  Query params with 3 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 7: [call ]
                                  Query fc with 1 result nodes - CONTENT in line 7: [call ( 'otg_acciones' , no_hide , no_replace ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - call (value) 
                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['otg_acciones' ]
                                        Query expA with 1 result nodes - CONTENT : ['otg_acciones' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_acciones' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_acciones' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_acciones' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_acciones' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_acciones' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_acciones' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['otg_acciones' ]
                                                Query st with 1 result nodes - CONTENT in line 7: ['otg_acciones' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'otg_acciones' 


                                    (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [no_hide ]
                                        Query expA with 1 result nodes - CONTENT : [no_hide ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query cast2 with 1 result nodes - CONTENT : [no_hide ]
                                              Query cast1 with 1 result nodes - CONTENT : [no_hide ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                              Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ]
                                              Query iden with 1 result nodes - CONTENT in line 7: [no_hide ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 7: [no_hide ]
                                                Query fc with 1 result nodes - CONTENT : [no_hide ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - no_hide (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [no_replace ]
                                        Query expA with 1 result nodes - CONTENT : [no_replace ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query cast2 with 1 result nodes - CONTENT : [no_replace ]
                                              Query cast1 with 1 result nodes - CONTENT : [no_replace ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                              Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; call ( 'otg_acciones' , no_hide , no_replace ) ; End ]
                                              Query iden with 1 result nodes - CONTENT in line 7: [no_replace ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 7: [no_replace ]
                                                Query fc with 1 result nodes - CONTENT : [no_replace ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - no_replace (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST






            (38/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PEU_SCO_CODIGO WHEN-LIST-CHANGED BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ; ]
                Query stats with 1 result nodes - CONTENT : [BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-LIST-CHANGED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 6: [WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; ]
                      Query stats with 1 result nodes - CONTENT : [SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ]
                      Query block with 1 result nodes - CONTENT in line 1: [BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                        RULE: mapSelectStatement... executing!
                          Model Element astm::sastm::RDBSelectStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 2: [SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ]
                            Query lvals with 1 result nodes - CONTENT in line 2: [: SUBVENCION ]
                            Query st with 1 result nodes - CONTENT : [SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                              RULE: mapSelectExpression... executing!
                                Model Element astm::sastm::RDBSelectExpression created
                                Executing queries...
                                  Query w with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                  Query fromj with 0 result nodes
                                  Query lvals with 1 result nodes - CONTENT in line 2: [: SUBVENCION ]
                                  Query fromn with 1 result nodes - CONTENT : [OTG_SCOSTES ]
                                  Query isCount with 0 result nodes
                                  Query sexpr with 1 result nodes - CONTENT in line 2: [SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ]
                                  Query list with 1 result nodes - CONTENT : [SCO_SUBVENCION ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                    RULE: mapColumn... executing!
                                      Model Element astm::sastm::RDBColumnReference created
                                      Executing queries...
                                        Query dc with 1 result nodes - CONTENT : [SCO_SUBVENCION ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: displayed_column (kind) - Result: SCO_SUBVENCION

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                    RULE: skipToConditionOr... executing!
                                    Skip Rule skipToConditionOr executing...
                                    Executing skip query...
                                      Query c with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                      Query next with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionOr... executing!
                                    Skip Rule skipConditionOr executing...
                                    Executing skip query...
                                      Query co with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                      Query next with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionAnd... executing!
                                    Skip Rule skipConditionAnd executing...
                                    Executing skip query...
                                      Query ca with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                      Query next with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipConditionNot... executing!
                                    Skip Rule skipConditionNot executing...
                                    Executing skip query...
                                      Query cn with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                      Query next with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createConditionComparison... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 4: [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query geqOp with 0 result nodes
                                        Query sc with 1 result nodes - CONTENT : [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query compar with 1 result nodes - CONTENT in line 4: [SCO_CODIGO = : PEU_SCO_CODIGO ]
                                        Query lthOp with 0 result nodes
                                        Query exp2 with 1 result nodes - CONTENT : [: PEU_SCO_CODIGO ]
                                        Query exp1 with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query cast2 with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query cast1 with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Query block with 1 result nodes - CONTENT in line 1: [BEGIN SELECT SCO_SUBVENCION INTO : SUBVENCION FROM OTG_SCOSTES WHERE SCO_CODIGO = : PEU_SCO_CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN : SUBVENCION := NULL ; END ]
                                            Query iden with 1 result nodes - CONTENT in line 4: [SCO_CODIGO ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 4: [SCO_CODIGO ]
                                              Query fc with 1 result nodes - CONTENT : [SCO_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - SCO_CODIGO (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: PEU_SCO_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: PEU_SCO_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: PEU_SCO_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: PEU_SCO_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :PEU_SCO_CODIGO

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created

                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                      RULE: mapTable... executing!
                                        Model Element astm::sastm::RDBTableReference created
                                        Executing queries...
                                          Query st with 1 result nodes - CONTENT : [OTG_SCOSTES ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - CODE:  - node: selected_table (kind) - Result: OTG_SCOSTES


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                              RULE: mapIntoVariable... executing!
                                Model Element astm::sastm::RDBHostVariableReference created
                                Executing queries...
                                  Query l with 1 result nodes - CONTENT in line 2: [: SUBVENCION ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :SUBVENCION




            (39/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item ACEPTAR WHEN-BUTTON-PRESSED DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 2 result nodes
                      Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                      Query decls with 5 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                            Query value with 1 result nodes - CONTENT : [N_AL ]
                            Query as with 1 result nodes - CONTENT in line 9: [N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                            Query st with 1 result nodes - CONTENT : [N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: N_AL
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                                Query s with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                                Query s with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                                Query s with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                                Query cast2 with 1 result nodes - CONTENT : [ALERTA ]
                                Query cast1 with 1 result nodes - CONTENT : [ALERTA ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 9: [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                                Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                                Query iden with 1 result nodes - CONTENT in line 9: [ALERTA ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 6 result nodes
                                  Query params with 6 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 9: [ALERTA ]
                                  Query fc with 1 result nodes - CONTENT in line 9: [ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - ALERTA (value) 
                                  - QUERY_RESULT: 6 bindings:
                                    (1/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['!' ]
                                        Query expA with 1 result nodes - CONTENT : ['!' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['!' ]
                                              Query s with 1 result nodes - CONTENT : ['!' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['!' ]
                                              Query s with 1 result nodes - CONTENT : ['!' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['!' ]
                                              Query s with 1 result nodes - CONTENT : ['!' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['!' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['!' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '!' 


                                    (2/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                        Query expA with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                              Query s with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                              Query s with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                              Query s with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['ATENCIÓN' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['ATENCIÓN' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'ATENCIÓN' 


                                    (3/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                        Query expA with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                              Query s with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                              Query s with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                              Query s with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' 


                                    (4/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['Si' ]
                                        Query expA with 1 result nodes - CONTENT : ['Si' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Si' ]
                                              Query s with 1 result nodes - CONTENT : ['Si' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Si' ]
                                              Query s with 1 result nodes - CONTENT : ['Si' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Si' ]
                                              Query s with 1 result nodes - CONTENT : ['Si' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['Si' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'Si' 


                                    (5/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['No' ]
                                        Query expA with 1 result nodes - CONTENT : ['No' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['No' ]
                                              Query s with 1 result nodes - CONTENT : ['No' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['No' ]
                                              Query s with 1 result nodes - CONTENT : ['No' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['No' ]
                                              Query s with 1 result nodes - CONTENT : ['No' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['No' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['No' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'No' 


                                    (6/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [NULL ]
                                        Query expA with 1 result nodes - CONTENT : [NULL ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NULL ]
                                              Query s with 1 result nodes - CONTENT : [NULL ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NULL ]
                                              Query s with 1 result nodes - CONTENT : [NULL ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NULL ]
                                              Query s with 1 result nodes - CONTENT : [NULL ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapNullLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : [NULL ]
                                                Query st with 1 result nodes - CONTENT in line 9: [NULL ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: NULL 




                        (2/2) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 1 result nodes - CONTENT : [BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ]
                            Query st with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 ]
                                Query s with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 10: [= ]
                                  Query exp with 1 result nodes - CONTENT : [N_AL = ALERT_BUTTON1 ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 10: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [N_AL ]
                                  Query expl2 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [N_AL ]
                                      Query s with 1 result nodes - CONTENT : [N_AL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [N_AL ]
                                      Query cast2 with 1 result nodes - CONTENT : [N_AL ]
                                      Query cast1 with 1 result nodes - CONTENT : [N_AL ]
                                      Query dec with 1 result nodes - CONTENT : [N_AL NUMBER ; ]
                                      Query s with 1 result nodes - CONTENT : [N_AL ]
                                      Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 10: [N_AL ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query s with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query cast2 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query cast1 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 10: [ALERT_BUTTON1 ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 10: [ALERT_BUTTON1 ]
                                        Query fc with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - ALERT_BUTTON1 (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                              RULE: mapBlockStatement... executing!
                                Model Element astm::gastm::BlockStatement created
                                Executing queries...
                                  Query excep with 1 result nodes - CONTENT in line 42: [WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; ]
                                  Query stats with 5 result nodes
                                  Query block with 1 result nodes - CONTENT in line 11: [BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ]
                                  Query decls with 0 result nodes
                                  Query st with 1 result nodes - CONTENT : [BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ]
                                Executing mappings...
                                  - QUERY_RESULT: 5 bindings:
                                    (1/5) result node: statement (kind). Rule... calling mapSelectStatement rule

                                    RULE: mapSelectStatement... executing!
                                      Model Element astm::sastm::RDBSelectStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 12: [SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ]
                                        Query lvals with 1 result nodes - CONTENT : [DP ]
                                        Query st with 1 result nodes - CONTENT : [SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                          RULE: mapSelectExpression... executing!
                                            Model Element astm::sastm::RDBSelectExpression created
                                            Executing queries...
                                              Query w with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                              Query fromj with 0 result nodes
                                              Query lvals with 1 result nodes - CONTENT : [DP ]
                                              Query fromn with 1 result nodes - CONTENT : [OTG_DPROYECTO ]
                                              Query isCount with 0 result nodes
                                              Query sexpr with 1 result nodes - CONTENT in line 12: [SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ]
                                              Query list with 1 result nodes - CONTENT : [DPR_CG ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [DPR_CG ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: DPR_CG

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                                RULE: skipToConditionOr... executing!
                                                Skip Rule skipToConditionOr executing...
                                                Executing skip query...
                                                  Query c with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                  Query next with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipConditionOr... executing!
                                                Skip Rule skipConditionOr executing...
                                                Executing skip query...
                                                  Query co with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                  Query next with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipConditionAnd... executing!
                                                Skip Rule skipConditionAnd executing...
                                                Executing skip query...
                                                  Query ca with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                  Query next with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipConditionNot... executing!
                                                Skip Rule skipConditionNot executing...
                                                Executing skip query...
                                                  Query cn with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                  Query next with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionComparison... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query eqOp with 1 result nodes - CONTENT in line 14: [DPR_CODIGO = : DESTINATARIO ]
                                                    Query gthOp with 0 result nodes
                                                    Query orOp with 0 result nodes
                                                    Query geqOp with 0 result nodes
                                                    Query sc with 1 result nodes - CONTENT : [DPR_CODIGO = : DESTINATARIO ]
                                                    Query leqOp with 0 result nodes
                                                    Query notEqOp with 0 result nodes
                                                    Query compar with 1 result nodes - CONTENT in line 14: [DPR_CODIGO = : DESTINATARIO ]
                                                    Query lthOp with 0 result nodes
                                                    Query exp2 with 1 result nodes - CONTENT : [: DESTINATARIO ]
                                                    Query exp1 with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                        Query s with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                        Query cast2 with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                        Query cast1 with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                        Query dec with 0 result nodes
                                                        Query s with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                        Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                                                        Query iden with 1 result nodes - CONTENT in line 14: [DPR_CODIGO ]
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 14: [DPR_CODIGO ]
                                                          Query fc with 1 result nodes - CONTENT : [DPR_CODIGO ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - DPR_CODIGO (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [: DESTINATARIO ]
                                                        Query s with 1 result nodes - CONTENT : [: DESTINATARIO ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFormsVariableFromExpAdd... executing!
                                                        Model Element astm::gastm::IdentifierReference created
                                                        Executing queries...
                                                          Query se with 1 result nodes - CONTENT in line 14: [: DESTINATARIO ]
                                                          Query ea with 1 result nodes - CONTENT : [: DESTINATARIO ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - CODE:  - node: simple_expression (kind) - Result: :DESTINATARIO

                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Equal created

                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                                  RULE: mapTable... executing!
                                                    Model Element astm::sastm::RDBTableReference created
                                                    Executing queries...
                                                      Query st with 1 result nodes - CONTENT : [OTG_DPROYECTO ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: selected_table (kind) - Result: OTG_DPROYECTO


                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT : [DP ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: DP


                                    (2/5) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                        Query value with 1 result nodes - CONTENT : [NXT_COD ]
                                        Query as with 1 result nodes - CONTENT in line 16: [NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                        Query st with 1 result nodes - CONTENT : [NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: NXT_COD
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                            Query s with 1 result nodes - CONTENT : [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                            Query s with 1 result nodes - CONTENT : [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                            Query s with 1 result nodes - CONTENT : [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                            Query cast2 with 6 result nodes
                                            Query cast1 with 6 result nodes
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 16: [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                            Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                                            Query iden with 6 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                              Query params with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                              Query iden with 1 result nodes - CONTENT in line 16: [RTRIM ]
                                              Query fc with 1 result nodes - CONTENT in line 16: [RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - RTRIM (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                    Query expA with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                          Query s with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                          Query s with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                          Query s with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                          Query cast2 with 5 result nodes
                                                          Query cast1 with 0 result nodes
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT in line 16: [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                          Query block with 0 result nodes
                                                          Query iden with 5 result nodes
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                            Query params with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                            Query iden with 1 result nodes - CONTENT in line 16: [LTRIM ]
                                                            Query fc with 1 result nodes - CONTENT in line 16: [LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - LTRIM (value) 
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                              RULE: mapActualParameter... executing!
                                                                Model Element astm::gastm::ActualParameterExpression created
                                                                Executing queries...
                                                                  Query cp with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                  Query expA with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                  Query expB with 0 result nodes
                                                                  Query iden with 0 result nodes
                                                                Executing mappings...
                                                                    - IF detected...true!
                                                                    - QUERY_RESULT: 1 bindings:
                                                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                                      RULE: skipAllBooleanRules... executing!
                                                                      Skip Rule skipAllBooleanRules executing...
                                                                      Executing skip query...
                                                                        Query exp with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                        Query s with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                      Locating skip query... skip located! 
                                                                      Skipping to rule...
                                                                      RULE: skipToExprAdd... executing!
                                                                      Skip Rule skipToExprAdd executing...
                                                                      Executing skip query...
                                                                        Query exp with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                        Query s with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                      Locating skip query... skip located! 
                                                                      Skipping to rule...
                                                                      RULE: skipAllArithmeticRules... executing!
                                                                      Skip Rule skipAllArithmeticRules executing...
                                                                      Executing skip query...
                                                                        Query exp with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                        Query s with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                      Locating skip query... skip located! 
                                                                      Skipping to rule...
                                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                                      Executing skip query...
                                                                        Query exp with 1 result nodes - CONTENT : [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                        Query cast2 with 4 result nodes
                                                                        Query cast1 with 0 result nodes
                                                                        Query dec with 0 result nodes
                                                                        Query s with 1 result nodes - CONTENT in line 16: [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                        Query block with 0 result nodes
                                                                        Query iden with 4 result nodes
                                                                      - IF detected...false! executing ELSE part 
                                                                      Locating skip query... skip located! 
                                                                      Skipping to rule...
                                                                      RULE: mapFunctionCall... executing!
                                                                        Model Element astm::gastm::FunctionCallExpression created
                                                                        Executing queries...
                                                                          Query exp with 2 result nodes
                                                                          Query params with 2 result nodes
                                                                          Query iden with 1 result nodes - CONTENT in line 16: [TO_CHAR ]
                                                                          Query fc with 1 result nodes - CONTENT in line 16: [TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ]
                                                                        Executing mappings...
                                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                                          - QUERY_ACCESS: variable: iden - 
                                                                            node: identifier (kind) - leaf: ID (kind) - TO_CHAR (value) 
                                                                          - QUERY_RESULT: 2 bindings:
                                                                            (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                                            RULE: mapActualParameter... executing!
                                                                              Model Element astm::gastm::ActualParameterExpression created
                                                                              Executing queries...
                                                                                Query cp with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                Query expA with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                Query expB with 0 result nodes
                                                                                Query iden with 0 result nodes
                                                                              Executing mappings...
                                                                                  - IF detected...true!
                                                                                  - QUERY_RESULT: 1 bindings:
                                                                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                                                    RULE: skipAllBooleanRules... executing!
                                                                                    Skip Rule skipAllBooleanRules executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                      Query s with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipToExprAdd... executing!
                                                                                    Skip Rule skipToExprAdd executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                      Query s with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipAllArithmeticRules... executing!
                                                                                    Skip Rule skipAllArithmeticRules executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                      Query s with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                      Query cast2 with 3 result nodes
                                                                                      Query cast1 with 0 result nodes
                                                                                      Query dec with 0 result nodes
                                                                                      Query s with 1 result nodes - CONTENT in line 16: [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                      Query block with 0 result nodes
                                                                                      Query iden with 3 result nodes
                                                                                    - IF detected...false! executing ELSE part 
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: mapFunctionCall... executing!
                                                                                      Model Element astm::gastm::FunctionCallExpression created
                                                                                      Executing queries...
                                                                                        Query exp with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                        Query params with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                        Query iden with 1 result nodes - CONTENT in line 16: [TO_NUMBER ]
                                                                                        Query fc with 1 result nodes - CONTENT in line 16: [TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) ]
                                                                                      Executing mappings...
                                                                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                                        - OPERATION_CREATION: astm::gastm::Name created
                                                                                        - QUERY_ACCESS: variable: iden - 
                                                                                          node: identifier (kind) - leaf: ID (kind) - TO_NUMBER (value) 
                                                                                        - QUERY_RESULT: 1 bindings:
                                                                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                                                          RULE: mapActualParameter... executing!
                                                                                            Model Element astm::gastm::ActualParameterExpression created
                                                                                            Executing queries...
                                                                                              Query cp with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                              Query expA with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                              Query expB with 0 result nodes
                                                                                              Query iden with 0 result nodes
                                                                                            Executing mappings...
                                                                                                - IF detected...true!
                                                                                                - QUERY_RESULT: 1 bindings:
                                                                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                                                                  RULE: skipAllBooleanRules... executing!
                                                                                                  Skip Rule skipAllBooleanRules executing...
                                                                                                  Executing skip query...
                                                                                                    Query exp with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                    Query s with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                  Locating skip query... skip located! 
                                                                                                  Skipping to rule...
                                                                                                  RULE: skipToExprAdd... executing!
                                                                                                  Skip Rule skipToExprAdd executing...
                                                                                                  Executing skip query...
                                                                                                    Query exp with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                    Query s with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                  Locating skip query... skip located! 
                                                                                                  Skipping to rule...
                                                                                                  RULE: skipAllArithmeticRules... executing!
                                                                                                  Skip Rule skipAllArithmeticRules executing...
                                                                                                  Executing skip query...
                                                                                                    Query exp with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                    Query s with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                  Locating skip query... skip located! 
                                                                                                  Skipping to rule...
                                                                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                                                                  Executing skip query...
                                                                                                    Query exp with 1 result nodes - CONTENT : [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                    Query cast2 with 2 result nodes
                                                                                                    Query cast1 with 0 result nodes
                                                                                                    Query dec with 0 result nodes
                                                                                                    Query s with 1 result nodes - CONTENT in line 16: [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                    Query block with 0 result nodes
                                                                                                    Query iden with 2 result nodes
                                                                                                  - IF detected...false! executing ELSE part 
                                                                                                  Locating skip query... skip located! 
                                                                                                  Skipping to rule...
                                                                                                  RULE: mapFunctionCall... executing!
                                                                                                    Model Element astm::gastm::FunctionCallExpression created
                                                                                                    Executing queries...
                                                                                                      Query exp with 2 result nodes
                                                                                                      Query params with 2 result nodes
                                                                                                      Query iden with 1 result nodes - CONTENT in line 16: [F_NEXT_CG ]
                                                                                                      Query fc with 1 result nodes - CONTENT in line 16: [F_NEXT_CG ( DP , 'S' ) ]
                                                                                                    Executing mappings...
                                                                                                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                                                                      - QUERY_ACCESS: variable: iden - 
                                                                                                        node: identifier (kind) - leaf: ID (kind) - F_NEXT_CG (value) 
                                                                                                      - QUERY_RESULT: 2 bindings:
                                                                                                        (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                                                                        RULE: mapActualParameter... executing!
                                                                                                          Model Element astm::gastm::ActualParameterExpression created
                                                                                                          Executing queries...
                                                                                                            Query cp with 1 result nodes - CONTENT : [DP ]
                                                                                                            Query expA with 1 result nodes - CONTENT : [DP ]
                                                                                                            Query expB with 0 result nodes
                                                                                                            Query iden with 0 result nodes
                                                                                                          Executing mappings...
                                                                                                              - IF detected...true!
                                                                                                              - QUERY_RESULT: 1 bindings:
                                                                                                                (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                                                                                RULE: skipAllBooleanRules... executing!
                                                                                                                Skip Rule skipAllBooleanRules executing...
                                                                                                                Executing skip query...
                                                                                                                  Query exp with 1 result nodes - CONTENT : [DP ]
                                                                                                                  Query s with 1 result nodes - CONTENT : [DP ]
                                                                                                                Locating skip query... skip located! 
                                                                                                                Skipping to rule...
                                                                                                                RULE: skipToExprAdd... executing!
                                                                                                                Skip Rule skipToExprAdd executing...
                                                                                                                Executing skip query...
                                                                                                                  Query exp with 1 result nodes - CONTENT : [DP ]
                                                                                                                  Query s with 1 result nodes - CONTENT : [DP ]
                                                                                                                Locating skip query... skip located! 
                                                                                                                Skipping to rule...
                                                                                                                RULE: skipAllArithmeticRules... executing!
                                                                                                                Skip Rule skipAllArithmeticRules executing...
                                                                                                                Executing skip query...
                                                                                                                  Query exp with 1 result nodes - CONTENT : [DP ]
                                                                                                                  Query s with 1 result nodes - CONTENT : [DP ]
                                                                                                                Locating skip query... skip located! 
                                                                                                                Skipping to rule...
                                                                                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                                                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                                                                                Executing skip query...
                                                                                                                  Query exp with 1 result nodes - CONTENT : [DP ]
                                                                                                                  Query cast2 with 1 result nodes - CONTENT : [DP ]
                                                                                                                  Query cast1 with 0 result nodes
                                                                                                                  Query dec with 0 result nodes
                                                                                                                  Query s with 1 result nodes - CONTENT : [DP ]
                                                                                                                  Query block with 0 result nodes
                                                                                                                  Query iden with 1 result nodes - CONTENT in line 16: [DP ]
                                                                                                                - IF detected...false! executing ELSE part 
                                                                                                                Locating skip query... skip located! 
                                                                                                                Skipping to rule...
                                                                                                                RULE: mapFunctionCall... executing!
                                                                                                                  Model Element astm::gastm::FunctionCallExpression created
                                                                                                                  Executing queries...
                                                                                                                    Query exp with 0 result nodes
                                                                                                                    Query params with 0 result nodes
                                                                                                                    Query iden with 1 result nodes - CONTENT in line 16: [DP ]
                                                                                                                    Query fc with 1 result nodes - CONTENT : [DP ]
                                                                                                                  Executing mappings...
                                                                                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                                                                                    - QUERY_ACCESS: variable: iden - 
                                                                                                                      node: identifier (kind) - leaf: ID (kind) - DP (value) 
                                                                                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                                                                        (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                                                                        RULE: mapActualParameter... executing!
                                                                                                          Model Element astm::gastm::ActualParameterExpression created
                                                                                                          Executing queries...
                                                                                                            Query cp with 1 result nodes - CONTENT : ['S' ]
                                                                                                            Query expA with 1 result nodes - CONTENT : ['S' ]
                                                                                                            Query expB with 0 result nodes
                                                                                                            Query iden with 0 result nodes
                                                                                                          Executing mappings...
                                                                                                              - IF detected...true!
                                                                                                              - QUERY_RESULT: 1 bindings:
                                                                                                                (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                                                                                RULE: skipAllBooleanRules... executing!
                                                                                                                Skip Rule skipAllBooleanRules executing...
                                                                                                                Executing skip query...
                                                                                                                  Query exp with 1 result nodes - CONTENT : ['S' ]
                                                                                                                  Query s with 1 result nodes - CONTENT : ['S' ]
                                                                                                                Locating skip query... skip located! 
                                                                                                                Skipping to rule...
                                                                                                                RULE: skipToExprAdd... executing!
                                                                                                                Skip Rule skipToExprAdd executing...
                                                                                                                Executing skip query...
                                                                                                                  Query exp with 1 result nodes - CONTENT : ['S' ]
                                                                                                                  Query s with 1 result nodes - CONTENT : ['S' ]
                                                                                                                Locating skip query... skip located! 
                                                                                                                Skipping to rule...
                                                                                                                RULE: skipAllArithmeticRules... executing!
                                                                                                                Skip Rule skipAllArithmeticRules executing...
                                                                                                                Executing skip query...
                                                                                                                  Query exp with 1 result nodes - CONTENT : ['S' ]
                                                                                                                  Query s with 1 result nodes - CONTENT : ['S' ]
                                                                                                                Locating skip query... skip located! 
                                                                                                                Skipping to rule...
                                                                                                                RULE: mapStringLiteral... executing!
                                                                                                                  Model Element astm::gastm::StringLiteral created
                                                                                                                  Executing queries...
                                                                                                                    Query exp with 1 result nodes - CONTENT : ['S' ]
                                                                                                                    Query st with 1 result nodes - CONTENT in line 16: ['S' ]
                                                                                                                  Executing mappings...
                                                                                                                    - CODE:  - node: simple_expression (kind) - Result: 'S' 






                                                                            (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                                            RULE: mapActualParameter... executing!
                                                                              Model Element astm::gastm::ActualParameterExpression created
                                                                              Executing queries...
                                                                                Query cp with 1 result nodes - CONTENT : ['00' ]
                                                                                Query expA with 1 result nodes - CONTENT : ['00' ]
                                                                                Query expB with 0 result nodes
                                                                                Query iden with 0 result nodes
                                                                              Executing mappings...
                                                                                  - IF detected...true!
                                                                                  - QUERY_RESULT: 1 bindings:
                                                                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                                                    RULE: skipAllBooleanRules... executing!
                                                                                    Skip Rule skipAllBooleanRules executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : ['00' ]
                                                                                      Query s with 1 result nodes - CONTENT : ['00' ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipToExprAdd... executing!
                                                                                    Skip Rule skipToExprAdd executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : ['00' ]
                                                                                      Query s with 1 result nodes - CONTENT : ['00' ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipAllArithmeticRules... executing!
                                                                                    Skip Rule skipAllArithmeticRules executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : ['00' ]
                                                                                      Query s with 1 result nodes - CONTENT : ['00' ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: mapStringLiteral... executing!
                                                                                      Model Element astm::gastm::StringLiteral created
                                                                                      Executing queries...
                                                                                        Query exp with 1 result nodes - CONTENT : ['00' ]
                                                                                        Query st with 1 result nodes - CONTENT in line 16: ['00' ]
                                                                                      Executing mappings...
                                                                                        - CODE:  - node: simple_expression (kind) - Result: '00' 








                                    (3/5) result node: statement (kind). Rule... calling mapSelectStatement rule

                                    RULE: mapSelectStatement... executing!
                                      Model Element astm::sastm::RDBSelectStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 18: [SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ]
                                        Query lvals with 1 result nodes - CONTENT : [CODIGO ]
                                        Query st with 1 result nodes - CONTENT : [SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                          RULE: mapSelectExpression... executing!
                                            Model Element astm::sastm::RDBSelectExpression created
                                            Executing queries...
                                              Query w with 0 result nodes
                                              Query fromj with 0 result nodes
                                              Query lvals with 1 result nodes - CONTENT : [CODIGO ]
                                              Query fromn with 1 result nodes - CONTENT : [DUAL ]
                                              Query isCount with 0 result nodes
                                              Query sexpr with 1 result nodes - CONTENT in line 18: [SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ]
                                              Query list with 1 result nodes - CONTENT : [S_CEG_CODIGO . NEXTVAL ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                RULE: mapColumn... executing!
                                                  Model Element astm::sastm::RDBColumnReference created
                                                  Executing queries...
                                                    Query dc with 1 result nodes - CONTENT : [S_CEG_CODIGO . NEXTVAL ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: displayed_column (kind) - Result: S_CEG_CODIGO.NEXTVAL

                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                                  RULE: mapTable... executing!
                                                    Model Element astm::sastm::RDBTableReference created
                                                    Executing queries...
                                                      Query st with 1 result nodes - CONTENT : [DUAL ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: selected_table (kind) - Result: DUAL


                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                          RULE: mapIntoVariable... executing!
                                            Model Element astm::sastm::RDBHostVariableReference created
                                            Executing queries...
                                              Query l with 1 result nodes - CONTENT : [CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: CODIGO


                                    (4/5) result node: statement (kind). Rule... calling mapBlockStatement rule

                                    RULE: mapBlockStatement... executing!
                                      Model Element astm::gastm::BlockStatement created
                                      Executing queries...
                                        Query excep with 1 result nodes - CONTENT in line 36: [WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; ]
                                        Query stats with 5 result nodes
                                        Query block with 1 result nodes - CONTENT in line 20: [BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ]
                                        Query decls with 0 result nodes
                                        Query st with 1 result nodes - CONTENT : [BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ]
                                      Executing mappings...
                                        - QUERY_RESULT: 5 bindings:
                                          (1/5) result node: statement (kind). Rule... calling mapSelectStatement rule

                                          RULE: mapSelectStatement... executing!
                                            Model Element astm::sastm::RDBSelectStatement created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT in line 21: [SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                              Query lvals with 1 result nodes - CONTENT : [USU ]
                                              Query st with 1 result nodes - CONTENT : [SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                                RULE: mapSelectExpression... executing!
                                                  Model Element astm::sastm::RDBSelectExpression created
                                                  Executing queries...
                                                    Query w with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                    Query fromj with 0 result nodes
                                                    Query lvals with 1 result nodes - CONTENT : [USU ]
                                                    Query fromn with 1 result nodes - CONTENT : [OTG_USR_CG ]
                                                    Query isCount with 0 result nodes
                                                    Query sexpr with 1 result nodes - CONTENT in line 21: [SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                    Query list with 1 result nodes - CONTENT : [UCG_CODIGO ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                                      RULE: mapColumn... executing!
                                                        Model Element astm::sastm::RDBColumnReference created
                                                        Executing queries...
                                                          Query dc with 1 result nodes - CONTENT : [UCG_CODIGO ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - CODE:  - node: displayed_column (kind) - Result: UCG_CODIGO

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                                      RULE: skipToConditionOr... executing!
                                                      Skip Rule skipToConditionOr executing...
                                                      Executing skip query...
                                                        Query c with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                        Query next with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipConditionOr... executing!
                                                      Skip Rule skipConditionOr executing...
                                                      Executing skip query...
                                                        Query co with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                        Query next with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipConditionAnd... executing!
                                                      Skip Rule skipConditionAnd executing...
                                                      Executing skip query...
                                                        Query ca with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                        Query next with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipConditionNot... executing!
                                                      Skip Rule skipConditionNot executing...
                                                      Executing skip query...
                                                        Query cn with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                        Query next with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createConditionComparison... executing!
                                                        Model Element astm::gastm::BinaryExpression created
                                                        Executing queries...
                                                          Query eqOp with 1 result nodes - CONTENT in line 23: [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                          Query gthOp with 0 result nodes
                                                          Query orOp with 0 result nodes
                                                          Query geqOp with 0 result nodes
                                                          Query sc with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                          Query leqOp with 0 result nodes
                                                          Query notEqOp with 0 result nodes
                                                          Query compar with 1 result nodes - CONTENT in line 23: [UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                          Query lthOp with 0 result nodes
                                                          Query exp2 with 1 result nodes - CONTENT : [UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                          Query exp1 with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                            RULE: skipAllArithmeticRules... executing!
                                                            Skip Rule skipAllArithmeticRules executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) ]
                                                              Query s with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [UPPER ( UCG_FORM ) ]
                                                              Query cast2 with 2 result nodes
                                                              Query cast1 with 2 result nodes
                                                              Query dec with 0 result nodes
                                                              Query s with 1 result nodes - CONTENT in line 23: [UPPER ( UCG_FORM ) ]
                                                              Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                                                              Query iden with 2 result nodes
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapFunctionCall... executing!
                                                              Model Element astm::gastm::FunctionCallExpression created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                Query params with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                Query iden with 1 result nodes - CONTENT in line 23: [UPPER ]
                                                                Query fc with 1 result nodes - CONTENT in line 23: [UPPER ( UCG_FORM ) ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                - OPERATION_CREATION: astm::gastm::Name created
                                                                - QUERY_ACCESS: variable: iden - 
                                                                  node: identifier (kind) - leaf: ID (kind) - UPPER (value) 
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                                  RULE: mapActualParameter... executing!
                                                                    Model Element astm::gastm::ActualParameterExpression created
                                                                    Executing queries...
                                                                      Query cp with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                      Query expA with 0 result nodes
                                                                      Query expB with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                      Query iden with 0 result nodes
                                                                    Executing mappings...
                                                                        - IF detected...false! executing ELSE part 
                                                                          - QUERY_RESULT: 1 bindings:
                                                                            (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                                            RULE: skipAllArithmeticRules... executing!
                                                                            Skip Rule skipAllArithmeticRules executing...
                                                                            Executing skip query...
                                                                              Query exp with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                              Query s with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                            Locating skip query... skip located! 
                                                                            Skipping to rule...
                                                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                                            Executing skip query...
                                                                              Query exp with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                              Query cast2 with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                              Query cast1 with 0 result nodes
                                                                              Query dec with 0 result nodes
                                                                              Query s with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                              Query block with 0 result nodes
                                                                              Query iden with 1 result nodes - CONTENT in line 23: [UCG_FORM ]
                                                                            - IF detected...false! executing ELSE part 
                                                                            Locating skip query... skip located! 
                                                                            Skipping to rule...
                                                                            RULE: mapFunctionCall... executing!
                                                                              Model Element astm::gastm::FunctionCallExpression created
                                                                              Executing queries...
                                                                                Query exp with 0 result nodes
                                                                                Query params with 0 result nodes
                                                                                Query iden with 1 result nodes - CONTENT in line 23: [UCG_FORM ]
                                                                                Query fc with 1 result nodes - CONTENT : [UCG_FORM ]
                                                                              Executing mappings...
                                                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                                - OPERATION_CREATION: astm::gastm::Name created
                                                                                - QUERY_ACCESS: variable: iden - 
                                                                                  node: identifier (kind) - leaf: ID (kind) - UCG_FORM (value) 
                                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                            RULE: skipAllArithmeticRules... executing!
                                                            Skip Rule skipAllArithmeticRules executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                              Query s with 1 result nodes - CONTENT : [UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                              Query cast2 with 1 result nodes - CONTENT : [UPPER ]
                                                              Query cast1 with 1 result nodes - CONTENT : [UPPER ]
                                                              Query dec with 0 result nodes
                                                              Query s with 1 result nodes - CONTENT in line 23: [UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                              Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                                                              Query iden with 3 result nodes
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapFunctionCall... executing!
                                                              Model Element astm::gastm::FunctionCallExpression created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_FORM ]
                                                                Query params with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_FORM ]
                                                                Query iden with 1 result nodes - CONTENT in line 23: [UPPER ]
                                                                Query fc with 1 result nodes - CONTENT in line 23: [UPPER ( : SYSTEM . CURRENT_FORM ) ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                                - OPERATION_CREATION: astm::gastm::Name created
                                                                - QUERY_ACCESS: variable: iden - 
                                                                  node: identifier (kind) - leaf: ID (kind) - UPPER (value) 
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                                  RULE: mapActualParameter... executing!
                                                                    Model Element astm::gastm::ActualParameterExpression created
                                                                    Executing queries...
                                                                      Query cp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_FORM ]
                                                                      Query expA with 0 result nodes
                                                                      Query expB with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_FORM ]
                                                                      Query iden with 0 result nodes
                                                                    Executing mappings...
                                                                        - IF detected...false! executing ELSE part 
                                                                          - QUERY_RESULT: 1 bindings:
                                                                            (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                                            RULE: skipAllArithmeticRules... executing!
                                                                            Skip Rule skipAllArithmeticRules executing...
                                                                            Executing skip query...
                                                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_FORM ]
                                                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_FORM ]
                                                                            Locating skip query... skip located! 
                                                                            Skipping to rule...
                                                                            RULE: createFormsVariableFromExpAdd... executing!
                                                                              Model Element astm::gastm::IdentifierReference created
                                                                              Executing queries...
                                                                                Query se with 1 result nodes - CONTENT in line 23: [: SYSTEM . CURRENT_FORM ]
                                                                                Query ea with 1 result nodes - CONTENT : [: SYSTEM . CURRENT_FORM ]
                                                                              Executing mappings...
                                                                                - OPERATION_CREATION: astm::gastm::Name created
                                                                                - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.CURRENT_FORM



                                                            - IF detected...true!
                                                            - OPERATION_CREATION: astm::gastm::Equal created

                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                                        RULE: mapTable... executing!
                                                          Model Element astm::sastm::RDBTableReference created
                                                          Executing queries...
                                                            Query st with 1 result nodes - CONTENT : [OTG_USR_CG ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - CODE:  - node: selected_table (kind) - Result: OTG_USR_CG


                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                                RULE: mapIntoVariable... executing!
                                                  Model Element astm::sastm::RDBHostVariableReference created
                                                  Executing queries...
                                                    Query l with 1 result nodes - CONTENT : [USU ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: lvalue (kind) - Result: USU


                                          (2/5) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                                          (3/5) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                                          (4/5) result node: statement (kind). Rule... calling mapAssignment rule

                                          RULE: mapAssignment... executing!
                                            Model Element astm::gastm::ExpressionStatement created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [: TIPO_CG || DP || NXT_COD ]
                                              Query value with 1 result nodes - CONTENT in line 33: [: WPEU_CG ]
                                              Query as with 1 result nodes - CONTENT in line 33: [: WPEU_CG := : TIPO_CG || DP || NXT_COD ]
                                              Query st with 1 result nodes - CONTENT : [: WPEU_CG := : TIPO_CG || DP || NXT_COD ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :WPEU_CG
                                              - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                RULE: skipAllBooleanRules... executing!
                                                Skip Rule skipAllBooleanRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: TIPO_CG || DP || NXT_COD ]
                                                  Query s with 1 result nodes - CONTENT : [: TIPO_CG || DP || NXT_COD ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipToExprAdd... executing!
                                                Skip Rule skipToExprAdd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: TIPO_CG || DP || NXT_COD ]
                                                  Query s with 1 result nodes - CONTENT in line 33: [: TIPO_CG || DP || NXT_COD ]
                                                Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (5/5) result node: statement (kind). Rule... calling mapAssignment rule

                                          RULE: mapAssignment... executing!
                                            Model Element astm::gastm::ExpressionStatement created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [CODIGO ]
                                              Query value with 1 result nodes - CONTENT in line 34: [: PEU_CG ]
                                              Query as with 1 result nodes - CONTENT in line 34: [: PEU_CG := CODIGO ]
                                              Query st with 1 result nodes - CONTENT : [: PEU_CG := CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: lvalue (kind) - Result: :PEU_CG
                                              - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                RULE: skipAllBooleanRules... executing!
                                                Skip Rule skipAllBooleanRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipToExprAdd... executing!
                                                Skip Rule skipToExprAdd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CODIGO ]
                                                  Query dec with 1 result nodes - CONTENT : [CODIGO NUMBER ; ]
                                                  Query s with 1 result nodes - CONTENT : [CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 7: [DECLARE N_AL NUMBER ; NXT_COD VARCHAR2 ( 2 ) ; CODIGO NUMBER ; DP VARCHAR2 ( 2 ) ; USU VARCHAR2 ( 256 ) ; BEGIN N_AL := ALERTA ( '!' , 'ATENCIÓN' , '¿Seguro que desea generar un nuevo centro de gasto para el tipo de proyecto e investigador indicados?' , 'Si' , 'No' , NULL ) ; N_AL = ALERT_BUTTON1 THEN BEGIN SELECT DPR_CG INTO DP FROM OTG_DPROYECTO WHERE DPR_CODIGO = : DESTINATARIO ; NXT_COD := RTRIM ( LTRIM ( TO_CHAR ( TO_NUMBER ( F_NEXT_CG ( DP , 'S' ) ) , '00' ) ) ) ; SELECT S_CEG_CODIGO . NEXTVAL INTO CODIGO FROM DUAL ; BEGIN SELECT UCG_CODIGO INTO USU FROM OTG_USR_CG WHERE UPPER ( UCG_FORM ) = UPPER ( : SYSTEM . CURRENT_FORM ) ; INSERT INTO OTG_CENTROS_GASTO ( CEG_CODIGO , CEG_CG , CEG_FFIN , CEG_UCG_CODIGO ) VALUES ( CODIGO , : TIPO_CG || DP || NXT_COD , NULL , USU ) ; COMMIT ; : WPEU_CG := : TIPO_CG || DP || NXT_COD ; : PEU_CG := CODIGO ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Imposible determinar el usuario de creación del Centro de Gasto. Por favor contacte con el administrador de la aplicación. ' , 'Aceptar' , NULL , NULL ) ; END ; GO_ITEM ( 'WPEU_CG' ) ; EXCEPTION WHEN NO_DATA_FOUND THEN N_AL := ALERTA ( '!' , 'ATENCIÓN' , 'Para generar un centro de gasto es necesario indicar un Destinatario. ' , 'Aceptar' , NULL , NULL ) ; END ; END IF ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 34: [CODIGO ]
                                                - IF detected...true!
                                                - IF detected...true!
                                                Locating skip query... skip located! SKIP RULE NOT LOCATED!


                                    (5/5) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 40: [GO_ITEM ( 'WPEU_CG' ) ]
                                        Query st with 1 result nodes - CONTENT : [GO_ITEM ( 'WPEU_CG' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                              Query params with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                              Query iden with 1 result nodes - CONTENT in line 40: [GO_ITEM ]
                                              Query fc with 1 result nodes - CONTENT in line 40: [GO_ITEM ( 'WPEU_CG' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - GO_ITEM (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                    Query expA with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                          Query s with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                          Query s with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                          Query s with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                                            Query st with 1 result nodes - CONTENT in line 40: ['WPEU_CG' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'WPEU_CG' 





                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (40/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item CANCELAR WHEN-BUTTON-PRESSED GO_ITEM ( 'WPEU_CG' ) ; ]
                Query stats with 1 result nodes - CONTENT : [GO_ITEM ( 'WPEU_CG' ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [GO_ITEM ( 'WPEU_CG' ) ]
                      Query st with 1 result nodes - CONTENT : [GO_ITEM ( 'WPEU_CG' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                            Query params with 1 result nodes - CONTENT : ['WPEU_CG' ]
                            Query iden with 1 result nodes - CONTENT in line 1: [GO_ITEM ]
                            Query fc with 1 result nodes - CONTENT in line 1: [GO_ITEM ( 'WPEU_CG' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - GO_ITEM (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                  Query expA with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                        Query s with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                        Query s with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                        Query s with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['WPEU_CG' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['WPEU_CG' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'WPEU_CG' 





            (41/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item UPE_UOR_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-CHANGE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 23: [WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; ]
                      Query stats with 4 result nodes
                      Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                      Query decls with 4 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query value with 1 result nodes - CONTENT : [CodigoUO ]
                            Query as with 1 result nodes - CONTENT in line 8: [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query st with 1 result nodes - CONTENT : [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: CodigoUO
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 8: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query params with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query iden with 1 result nodes - CONTENT in line 8: [NAME_IN ]
                                  Query fc with 1 result nodes - CONTENT in line 8: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expA with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 8: [: SYSTEM . TRIGGER_ITEM ]
                                                Query ea with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.TRIGGER_ITEM




                        (2/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                            Query value with 1 result nodes - CONTENT : [n ]
                            Query as with 1 result nodes - CONTENT in line 9: [n := instr ( : system . trigger_item , '.' ) ]
                            Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: n
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [instr ]
                                Query cast1 with 1 result nodes - CONTENT : [instr ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 9: [instr ( : system . trigger_item , '.' ) ]
                                Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 9: [instr ]
                                  Query fc with 1 result nodes - CONTENT in line 9: [instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 9: [: system . trigger_item ]
                                                Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['.' ]
                                        Query expA with 1 result nodes - CONTENT : ['.' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['.' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['.' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '.' 




                        (3/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query value with 1 result nodes - CONTENT : [NomVar ]
                            Query as with 1 result nodes - CONTENT in line 10: [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query st with 1 result nodes - CONTENT : [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: NomVar
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT in line 10: [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! SKIP RULE NOT LOCATED!

                        (4/4) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                                Query s with 1 result nodes - CONTENT in line 12: [CodigoUO IS NOT NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 12: [CodigoUO IS NOT NULL ]
                                  Query expa with 1 result nodes - CONTENT : [CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query dec with 1 result nodes - CONTENT : [CodigoUO Number ; ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 12: [CodigoUO ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 15: [SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ]
                                  Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                  Query st with 1 result nodes - CONTENT : [SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                        Query fromn with 1 result nodes - CONTENT : [GEA_UORGANIZATIVA ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 15: [SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ]
                                        Query list with 1 result nodes - CONTENT : [UOR_DESCRI ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [UOR_DESCRI ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: UOR_DESCRI

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 16: [UOR_COD = CodigoUO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [UOR_COD = CodigoUO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 16: [UOR_COD = CodigoUO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [CodigoUO ]
                                              Query exp1 with 1 result nodes - CONTENT : [UOR_COD ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [UOR_COD ]
                                                  Query s with 1 result nodes - CONTENT : [UOR_COD ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [UOR_COD ]
                                                  Query cast2 with 1 result nodes - CONTENT : [UOR_COD ]
                                                  Query cast1 with 1 result nodes - CONTENT : [UOR_COD ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [UOR_COD ]
                                                  Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 16: [UOR_COD ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 16: [UOR_COD ]
                                                    Query fc with 1 result nodes - CONTENT : [UOR_COD ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - UOR_COD (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query dec with 1 result nodes - CONTENT : [CodigoUO Number ; ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 16: [CodigoUO ]
                                                - IF detected...true!
                                                - IF detected...true!
                                                Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [GEA_UORGANIZATIVA ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: GEA_UORGANIZATIVA


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [ValVar ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: ValVar


                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 19: [Copy ( ValVar , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [Copy ( ValVar , NomVar ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 19: [Copy ]
                                        Query fc with 1 result nodes - CONTENT in line 19: [Copy ( ValVar , NomVar ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [ValVar ]
                                              Query expA with 1 result nodes - CONTENT : [ValVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query dec with 1 result nodes - CONTENT : [ValVar Varchar2 ( 500 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                    Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 19: [ValVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [NomVar ]
                                              Query expA with 1 result nodes - CONTENT : [NomVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                    Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT UOR_DESCRI INTO ValVar FROM GEA_UORGANIZATIVA WHERE UOR_COD = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 19: [NomVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (42/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item UPE_UOR_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_UPEUROPEOS . UPE_UOR_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_UOR_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_UOR_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_UOR_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_UPEUROPEOS . UPE_UOR_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_UOR_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_UPEUROPEOS.UPE_UOR_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (43/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item UPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_UPEUROPEOS . UPE_PEU_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_UPEUROPEOS . UPE_PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_UPEUROPEOS . UPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_UPEUROPEOS.UPE_PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (44/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WUPE_UOR_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                            Query cond with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                                Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                                  Query expa with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query s with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query params with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query iden with 1 result nodes - CONTENT in line 7: [NAME_IN ]
                                        Query fc with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 7: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item



                                  - OPERATION_CREATION: astm::gastm::NotEqual created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                  Query value with 1 result nodes - CONTENT : [n ]
                                  Query as with 1 result nodes - CONTENT in line 8: [n := instr ( : system . trigger_item , '.' ) ]
                                  Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: n
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [instr ]
                                      Query cast1 with 1 result nodes - CONTENT : [instr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 8: [instr ]
                                        Query fc with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 8: [: system . trigger_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['.' ]
                                              Query expA with 1 result nodes - CONTENT : ['.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['.' ]
                                                      Query st with 1 result nodes - CONTENT in line 8: ['.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: '.' 




                              (2/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                  Query value with 1 result nodes - CONTENT : [NomVar ]
                                  Query as with 1 result nodes - CONTENT in line 9: [NomVar := substr ( : system . current_item , 2 ) ]
                                  Query st with 1 result nodes - CONTENT : [NomVar := substr ( : system . current_item , 2 ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: NomVar
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [substr ]
                                      Query cast1 with 1 result nodes - CONTENT : [substr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 9: [substr ]
                                        Query fc with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - substr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 9: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [2 ]
                                              Query expA with 1 result nodes - CONTENT : [2 ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (3/3) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ]
                                  Query cond with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query s with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query cast2 with 2 result nodes
                                            Query cast1 with 2 result nodes
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                            Query iden with 2 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [NomVar ]
                                              Query params with 1 result nodes - CONTENT : [NomVar ]
                                              Query iden with 1 result nodes - CONTENT in line 10: [NAME_IN ]
                                              Query fc with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 0 result nodes
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                            Query fc with 1 result nodes - CONTENT : [NomVar ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - NomVar (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                        Query st with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 2 result nodes
                                              Query params with 2 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 11: [copy ]
                                              Query fc with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                              - QUERY_RESULT: 2 bindings:
                                                (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NULL ]
                                                    Query expA with 1 result nodes - CONTENT : [NULL ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapNullLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                                            Query st with 1 result nodes - CONTENT in line 11: [NULL ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: NULL 


                                                (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                                          Query iden with 1 result nodes - CONTENT in line 11: [NomVar ]
                                                        - IF detected...true!
                                                        - IF detected...true!
                                                        Locating skip query... skip located! SKIP RULE NOT LOCATED!



                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (45/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PPE_PER_ID POST-CHANGE Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ; ]
                Query stats with 1 result nodes - CONTENT : [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-CHANGE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 31: [when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; ]
                      Query stats with 5 result nodes
                      Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                      Query decls with 6 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                    Executing mappings...
                      - QUERY_RESULT: 5 bindings:
                        (1/5) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                            Query value with 1 result nodes - CONTENT : [n ]
                            Query as with 1 result nodes - CONTENT in line 12: [n := instr ( : system . trigger_item , '.' ) ]
                            Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: n
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [instr ]
                                Query cast1 with 1 result nodes - CONTENT : [instr ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 12: [instr ( : system . trigger_item , '.' ) ]
                                Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 12: [instr ]
                                  Query fc with 1 result nodes - CONTENT in line 12: [instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 12: [: system . trigger_item ]
                                                Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['.' ]
                                        Query expA with 1 result nodes - CONTENT : ['.' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['.' ]
                                                Query st with 1 result nodes - CONTENT in line 12: ['.' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '.' 




                        (2/5) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ]
                            Query value with 1 result nodes - CONTENT : [WDNI ]
                            Query as with 1 result nodes - CONTENT in line 13: [WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ]
                            Query st with 1 result nodes - CONTENT : [WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: WDNI
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT : [: system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT in line 13: [: system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! SKIP RULE NOT LOCATED!

                        (3/5) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ]
                            Query value with 1 result nodes - CONTENT : [WNOMBRE ]
                            Query as with 1 result nodes - CONTENT in line 14: [WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ]
                            Query st with 1 result nodes - CONTENT : [WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: WNOMBRE
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT : [: system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT in line 14: [: system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! SKIP RULE NOT LOCATED!

                        (4/5) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                            Query value with 1 result nodes - CONTENT : [vper_id ]
                            Query as with 1 result nodes - CONTENT in line 16: [vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ]
                            Query st with 1 result nodes - CONTENT : [vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: vper_id
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                                Query s with 1 result nodes - CONTENT : [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                                Query s with 1 result nodes - CONTENT : [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                                Query s with 1 result nodes - CONTENT : [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                                Query cast2 with 2 result nodes
                                Query cast1 with 2 result nodes
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 16: [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                                Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                Query iden with 4 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                  Query params with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                  Query iden with 1 result nodes - CONTENT in line 16: [to_number ]
                                  Query fc with 1 result nodes - CONTENT in line 16: [to_number ( NAME_IN ( : system . trigger_item ) ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - to_number (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                        Query expA with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                              Query s with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                              Query s with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                              Query s with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . trigger_item ) ]
                                              Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                              Query cast1 with 0 result nodes
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT in line 16: [NAME_IN ( : system . trigger_item ) ]
                                              Query block with 0 result nodes
                                              Query iden with 3 result nodes
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                Query params with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                Query iden with 1 result nodes - CONTENT in line 16: [NAME_IN ]
                                                Query fc with 1 result nodes - CONTENT in line 16: [NAME_IN ( : system . trigger_item ) ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                  RULE: mapActualParameter... executing!
                                                    Model Element astm::gastm::ActualParameterExpression created
                                                    Executing queries...
                                                      Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                      Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                      Query expB with 0 result nodes
                                                      Query iden with 0 result nodes
                                                    Executing mappings...
                                                        - IF detected...true!
                                                        - QUERY_RESULT: 1 bindings:
                                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                          RULE: skipAllBooleanRules... executing!
                                                          Skip Rule skipAllBooleanRules executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                            Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipToExprAdd... executing!
                                                          Skip Rule skipToExprAdd executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                            Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAllArithmeticRules... executing!
                                                          Skip Rule skipAllArithmeticRules executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                            Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: createFormsVariableFromExpAdd... executing!
                                                            Model Element astm::gastm::IdentifierReference created
                                                            Executing queries...
                                                              Query se with 1 result nodes - CONTENT in line 16: [: system . trigger_item ]
                                                              Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                            Executing mappings...
                                                              - OPERATION_CREATION: astm::gastm::Name created
                                                              - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item






                        (5/5) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 2 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ]
                            Query cond with 1 result nodes - CONTENT : [vper_id is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [vper_id is not null ]
                                Query s with 1 result nodes - CONTENT in line 18: [vper_id is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 18: [vper_id is not null ]
                                  Query expa with 1 result nodes - CONTENT : [vper_id ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [vper_id ]
                                      Query s with 1 result nodes - CONTENT : [vper_id ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [vper_id ]
                                      Query cast2 with 1 result nodes - CONTENT : [vper_id ]
                                      Query cast1 with 1 result nodes - CONTENT : [vper_id ]
                                      Query dec with 1 result nodes - CONTENT : [vper_id Number ; ]
                                      Query s with 1 result nodes - CONTENT : [vper_id ]
                                      Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                      Query iden with 1 result nodes - CONTENT in line 18: [vper_id ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 19: [Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ]
                                  Query lvals with 2 result nodes
                                  Query st with 1 result nodes - CONTENT : [Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [PER_ID = vper_id and rownum = 1 ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 2 result nodes
                                        Query fromn with 1 result nodes - CONTENT : [OTG_PERSONAS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 19: [Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ]
                                        Query list with 2 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [per_dni ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: per_dni

                                          (2/2) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [per_nombrec ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: per_nombrec

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [PER_ID = vper_id and rownum = 1 ]
                                            Query next with 1 result nodes - CONTENT : [PER_ID = vper_id and rownum = 1 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [PER_ID = vper_id and rownum = 1 ]
                                            Query next with 1 result nodes - CONTENT in line 22: [PER_ID = vper_id and rownum = 1 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionAnd... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query ca with 1 result nodes - CONTENT in line 22: [PER_ID = vper_id and rownum = 1 ]
                                              Query ex2 with 1 result nodes - CONTENT : [rownum = 1 ]
                                              Query ex1 with 1 result nodes - CONTENT : [PER_ID = vper_id ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: condition_not (kind). Rule... calling skipConditionNot rule

                                                RULE: skipConditionNot... executing!
                                                Skip Rule skipConditionNot executing...
                                                Executing skip query...
                                                  Query cn with 1 result nodes - CONTENT : [PER_ID = vper_id ]
                                                  Query next with 1 result nodes - CONTENT : [PER_ID = vper_id ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionComparison... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query eqOp with 1 result nodes - CONTENT in line 22: [PER_ID = vper_id ]
                                                    Query gthOp with 0 result nodes
                                                    Query orOp with 0 result nodes
                                                    Query geqOp with 0 result nodes
                                                    Query sc with 1 result nodes - CONTENT : [PER_ID = vper_id ]
                                                    Query leqOp with 0 result nodes
                                                    Query notEqOp with 0 result nodes
                                                    Query compar with 1 result nodes - CONTENT in line 22: [PER_ID = vper_id ]
                                                    Query lthOp with 0 result nodes
                                                    Query exp2 with 1 result nodes - CONTENT : [vper_id ]
                                                    Query exp1 with 1 result nodes - CONTENT : [PER_ID ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [PER_ID ]
                                                        Query s with 1 result nodes - CONTENT : [PER_ID ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [PER_ID ]
                                                        Query cast2 with 1 result nodes - CONTENT : [PER_ID ]
                                                        Query cast1 with 1 result nodes - CONTENT : [PER_ID ]
                                                        Query dec with 0 result nodes
                                                        Query s with 1 result nodes - CONTENT : [PER_ID ]
                                                        Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                        Query iden with 1 result nodes - CONTENT in line 22: [PER_ID ]
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 22: [PER_ID ]
                                                          Query fc with 1 result nodes - CONTENT : [PER_ID ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - PER_ID (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [vper_id ]
                                                        Query s with 1 result nodes - CONTENT : [vper_id ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [vper_id ]
                                                        Query cast2 with 1 result nodes - CONTENT : [vper_id ]
                                                        Query cast1 with 1 result nodes - CONTENT : [vper_id ]
                                                        Query dec with 1 result nodes - CONTENT : [vper_id Number ; ]
                                                        Query s with 1 result nodes - CONTENT : [vper_id ]
                                                        Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                        Query iden with 1 result nodes - CONTENT in line 22: [vper_id ]
                                                      - IF detected...true!
                                                      - IF detected...true!
                                                      Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Equal created

                                              - OPERATION_CREATION: astm::gastm::And created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: condition_not (kind). Rule... calling skipConditionNot rule

                                                RULE: skipConditionNot... executing!
                                                Skip Rule skipConditionNot executing...
                                                Executing skip query...
                                                  Query cn with 1 result nodes - CONTENT : [rownum = 1 ]
                                                  Query next with 1 result nodes - CONTENT : [rownum = 1 ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionComparison... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query eqOp with 1 result nodes - CONTENT in line 22: [rownum = 1 ]
                                                    Query gthOp with 0 result nodes
                                                    Query orOp with 0 result nodes
                                                    Query geqOp with 0 result nodes
                                                    Query sc with 1 result nodes - CONTENT : [rownum = 1 ]
                                                    Query leqOp with 0 result nodes
                                                    Query notEqOp with 0 result nodes
                                                    Query compar with 1 result nodes - CONTENT in line 22: [rownum = 1 ]
                                                    Query lthOp with 0 result nodes
                                                    Query exp2 with 1 result nodes - CONTENT : [1 ]
                                                    Query exp1 with 1 result nodes - CONTENT : [rownum ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [rownum ]
                                                        Query s with 1 result nodes - CONTENT : [rownum ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [rownum ]
                                                        Query cast2 with 1 result nodes - CONTENT : [rownum ]
                                                        Query cast1 with 1 result nodes - CONTENT : [rownum ]
                                                        Query dec with 0 result nodes
                                                        Query s with 1 result nodes - CONTENT : [rownum ]
                                                        Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                        Query iden with 1 result nodes - CONTENT in line 22: [rownum ]
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 22: [rownum ]
                                                          Query fc with 1 result nodes - CONTENT : [rownum ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - rownum (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [1 ]
                                                        Query s with 1 result nodes - CONTENT : [1 ]
                                                      Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Equal created


                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_PERSONAS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_PERSONAS


                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [DNI ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: DNI

                                    (2/2) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [Nombre ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: Nombre


                              (2/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 24: [copy ( Nombre , WNombre ) ]
                                  Query st with 1 result nodes - CONTENT : [copy ( Nombre , WNombre ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 24: [copy ]
                                        Query fc with 1 result nodes - CONTENT in line 24: [copy ( Nombre , WNombre ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [Nombre ]
                                              Query expA with 1 result nodes - CONTENT : [Nombre ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [Nombre ]
                                                    Query s with 1 result nodes - CONTENT : [Nombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [Nombre ]
                                                    Query s with 1 result nodes - CONTENT : [Nombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [Nombre ]
                                                    Query s with 1 result nodes - CONTENT : [Nombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [Nombre ]
                                                    Query cast2 with 1 result nodes - CONTENT : [Nombre ]
                                                    Query cast1 with 1 result nodes - CONTENT : [Nombre ]
                                                    Query dec with 1 result nodes - CONTENT : [Nombre Varchar2 ( 100 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [Nombre ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                    Query iden with 1 result nodes - CONTENT in line 24: [Nombre ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [WNombre ]
                                              Query expA with 1 result nodes - CONTENT : [WNombre ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query cast2 with 1 result nodes - CONTENT : [WNombre ]
                                                    Query cast1 with 1 result nodes - CONTENT : [WNombre ]
                                                    Query dec with 1 result nodes - CONTENT : [WNombre Varchar2 ( 100 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                    Query iden with 1 result nodes - CONTENT in line 24: [WNombre ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (3/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 25: [copy ( DNI , WDNI ) ]
                                  Query st with 1 result nodes - CONTENT : [copy ( DNI , WDNI ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 25: [copy ]
                                        Query fc with 1 result nodes - CONTENT in line 25: [copy ( DNI , WDNI ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [DNI ]
                                              Query expA with 1 result nodes - CONTENT : [DNI ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DNI ]
                                                    Query s with 1 result nodes - CONTENT : [DNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DNI ]
                                                    Query s with 1 result nodes - CONTENT : [DNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DNI ]
                                                    Query s with 1 result nodes - CONTENT : [DNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DNI ]
                                                    Query cast2 with 1 result nodes - CONTENT : [DNI ]
                                                    Query cast1 with 1 result nodes - CONTENT : [DNI ]
                                                    Query dec with 1 result nodes - CONTENT : [DNI Varchar2 ( 14 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [DNI ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                    Query iden with 1 result nodes - CONTENT in line 25: [DNI ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [WDNI ]
                                              Query expA with 1 result nodes - CONTENT : [WDNI ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WDNI ]
                                                    Query s with 1 result nodes - CONTENT : [WDNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WDNI ]
                                                    Query s with 1 result nodes - CONTENT : [WDNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WDNI ]
                                                    Query s with 1 result nodes - CONTENT : [WDNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WDNI ]
                                                    Query cast2 with 1 result nodes - CONTENT : [WDNI ]
                                                    Query cast1 with 1 result nodes - CONTENT : [WDNI ]
                                                    Query dec with 1 result nodes - CONTENT : [WDNI Varchar2 ( 100 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [WDNI ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                    Query iden with 1 result nodes - CONTENT in line 25: [WDNI ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 27: [copy ( NULL , WNombre ) ]
                                  Query st with 1 result nodes - CONTENT : [copy ( NULL , WNombre ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 27: [copy ]
                                        Query fc with 1 result nodes - CONTENT in line 27: [copy ( NULL , WNombre ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [NULL ]
                                              Query expA with 1 result nodes - CONTENT : [NULL ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NULL ]
                                                    Query s with 1 result nodes - CONTENT : [NULL ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NULL ]
                                                    Query s with 1 result nodes - CONTENT : [NULL ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NULL ]
                                                    Query s with 1 result nodes - CONTENT : [NULL ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapNullLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : [NULL ]
                                                      Query st with 1 result nodes - CONTENT in line 27: [NULL ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: NULL 


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [WNombre ]
                                              Query expA with 1 result nodes - CONTENT : [WNombre ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query cast2 with 1 result nodes - CONTENT : [WNombre ]
                                                    Query cast1 with 1 result nodes - CONTENT : [WNombre ]
                                                    Query dec with 1 result nodes - CONTENT : [WNombre Varchar2 ( 100 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                    Query iden with 1 result nodes - CONTENT in line 27: [WNombre ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 28: [copy ( NULL , WDNI ) ]
                                  Query st with 1 result nodes - CONTENT : [copy ( NULL , WDNI ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 28: [copy ]
                                        Query fc with 1 result nodes - CONTENT in line 28: [copy ( NULL , WDNI ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [NULL ]
                                              Query expA with 1 result nodes - CONTENT : [NULL ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NULL ]
                                                    Query s with 1 result nodes - CONTENT : [NULL ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NULL ]
                                                    Query s with 1 result nodes - CONTENT : [NULL ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NULL ]
                                                    Query s with 1 result nodes - CONTENT : [NULL ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapNullLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : [NULL ]
                                                      Query st with 1 result nodes - CONTENT in line 28: [NULL ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: NULL 


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [WDNI ]
                                              Query expA with 1 result nodes - CONTENT : [WDNI ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WDNI ]
                                                    Query s with 1 result nodes - CONTENT : [WDNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WDNI ]
                                                    Query s with 1 result nodes - CONTENT : [WDNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WDNI ]
                                                    Query s with 1 result nodes - CONTENT : [WDNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WDNI ]
                                                    Query cast2 with 1 result nodes - CONTENT : [WDNI ]
                                                    Query cast1 with 1 result nodes - CONTENT : [WDNI ]
                                                    Query dec with 1 result nodes - CONTENT : [WDNI Varchar2 ( 100 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [WDNI ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WDNI Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Nombre Varchar2 ( 100 ) ; vper_id Number ; n Number ; begin n := instr ( : system . trigger_item , '.' ) ; WDNI := : system . current_block || '.WDNI_' || substr ( : system . trigger_item , n + 1 ) ; WNOMBRE := : system . current_block || '.WNOMBRE_' || substr ( : system . trigger_item , n + 1 ) ; vper_id := to_number ( NAME_IN ( : system . trigger_item ) ) ; vper_id is not null then Select per_dni , per_nombrec INTO DNI , Nombre FROM OTG_PERSONAS WHERE PER_ID = vper_id and rownum = 1 ; copy ( Nombre , WNombre ) ; copy ( DNI , WDNI ) ; Else copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; End if ; Exception when others then copy ( NULL , WNombre ) ; copy ( NULL , WDNI ) ; raise form_trigger_failure ; end ]
                                                    Query iden with 1 result nodes - CONTENT in line 28: [WDNI ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!






            (46/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PPE_PER_ID WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_PERPEUROPEOS . PPE_PER_ID IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PER_ID ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PER_ID ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PER_ID ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_PERPEUROPEOS . PPE_PER_ID ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PER_ID ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_PERPEUROPEOS.PPE_PER_ID

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (47/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_PERPEUROPEOS . PPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_PERPEUROPEOS.PPE_PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (48/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WDNI_PPE_PER_ID WHEN-NEW-ITEM-INSTANCE set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ; ]
                Query stats with 1 result nodes - CONTENT : [set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-NEW-ITEM-INSTANCE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ]
                      Query st with 1 result nodes - CONTENT : [set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 3 result nodes
                            Query params with 3 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [set_item_property ]
                            Query fc with 1 result nodes - CONTENT in line 1: [set_item_property ( : system . cursor_item , CURRENT_RECORD_ATTRIBUTE , 'campo_azul' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - set_item_property (value) 
                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                  Query expA with 1 result nodes - CONTENT : [: system . cursor_item ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Query s with 1 result nodes - CONTENT : [: system . cursor_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFormsVariableFromExpAdd... executing!
                                        Model Element astm::gastm::IdentifierReference created
                                        Executing queries...
                                          Query se with 1 result nodes - CONTENT in line 1: [: system . cursor_item ]
                                          Query ea with 1 result nodes - CONTENT : [: system . cursor_item ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - CODE:  - node: simple_expression (kind) - Result: :system.cursor_item


                              (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                  Query expA with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query s with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query cast2 with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query cast1 with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Query block with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 1: [CURRENT_RECORD_ATTRIBUTE ]
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 1 result nodes - CONTENT in line 1: [CURRENT_RECORD_ATTRIBUTE ]
                                          Query fc with 1 result nodes - CONTENT : [CURRENT_RECORD_ATTRIBUTE ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - CURRENT_RECORD_ATTRIBUTE (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['campo_azul' ]
                                  Query expA with 1 result nodes - CONTENT : ['campo_azul' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['campo_azul' ]
                                        Query s with 1 result nodes - CONTENT : ['campo_azul' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['campo_azul' ]
                                        Query s with 1 result nodes - CONTENT : ['campo_azul' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['campo_azul' ]
                                        Query s with 1 result nodes - CONTENT : ['campo_azul' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['campo_azul' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['campo_azul' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'campo_azul' 





            (49/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WDNI_PPE_PER_ID WHEN-MOUSE-DOUBLECLICK execute_trigger ( 'KEY-LISTVAL' ) ; ]
                Query stats with 1 result nodes - CONTENT : [execute_trigger ( 'KEY-LISTVAL' ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-DOUBLECLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [execute_trigger ( 'KEY-LISTVAL' ) ]
                      Query st with 1 result nodes - CONTENT : [execute_trigger ( 'KEY-LISTVAL' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                            Query params with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                            Query iden with 1 result nodes - CONTENT in line 1: [execute_trigger ]
                            Query fc with 1 result nodes - CONTENT in line 1: [execute_trigger ( 'KEY-LISTVAL' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - execute_trigger (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                  Query expA with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                        Query s with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                        Query s with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                        Query s with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['KEY-LISTVAL' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['KEY-LISTVAL' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'KEY-LISTVAL' 





            (50/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WDNI_PPE_PER_ID KEY-LISTVAL Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-LISTVAL (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 4 result nodes
                      Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                      Query decls with 4 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [null ]
                            Query value with 1 result nodes - CONTENT in line 16: [: global . per_id ]
                            Query as with 1 result nodes - CONTENT in line 16: [: global . per_id := null ]
                            Query st with 1 result nodes - CONTENT : [: global . per_id := null ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: :global.per_id
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapNullLiteral... executing!
                                Model Element astm::gastm::StringLiteral created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [null ]
                                  Query st with 1 result nodes - CONTENT in line 16: [null ]
                                Executing mappings...
                                  - CODE:  - node: simple_expression (kind) - Result: null 


                        (2/4) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 17: [call ( 'otg_busca_personas' , no_hide , no_replace ) ]
                            Query st with 1 result nodes - CONTENT : [call ( 'otg_busca_personas' , no_hide , no_replace ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 3 result nodes
                                  Query params with 3 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 17: [call ]
                                  Query fc with 1 result nodes - CONTENT in line 17: [call ( 'otg_busca_personas' , no_hide , no_replace ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - call (value) 
                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                        Query expA with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['otg_busca_personas' ]
                                                Query st with 1 result nodes - CONTENT in line 17: ['otg_busca_personas' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'otg_busca_personas' 


                                    (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [no_hide ]
                                        Query expA with 1 result nodes - CONTENT : [no_hide ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query cast2 with 1 result nodes - CONTENT : [no_hide ]
                                              Query cast1 with 1 result nodes - CONTENT : [no_hide ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                              Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                                              Query iden with 1 result nodes - CONTENT in line 17: [no_hide ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 17: [no_hide ]
                                                Query fc with 1 result nodes - CONTENT : [no_hide ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - no_hide (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [no_replace ]
                                        Query expA with 1 result nodes - CONTENT : [no_replace ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query cast2 with 1 result nodes - CONTENT : [no_replace ]
                                              Query cast1 with 1 result nodes - CONTENT : [no_replace ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                              Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                                              Query iden with 1 result nodes - CONTENT in line 17: [no_replace ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 17: [no_replace ]
                                                Query fc with 1 result nodes - CONTENT : [no_replace ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - no_replace (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST




                        (3/4) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 7 result nodes
                            Query st with 1 result nodes - CONTENT : [: global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ]
                            Query cond with 1 result nodes - CONTENT : [: global . per_id is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: global . per_id is not null ]
                                Query s with 1 result nodes - CONTENT in line 19: [: global . per_id is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 19: [: global . per_id is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: global . per_id ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: global . per_id ]
                                      Query s with 1 result nodes - CONTENT : [: global . per_id ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 19: [: global . per_id ]
                                        Query ea with 1 result nodes - CONTENT : [: global . per_id ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :global.per_id

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 7 bindings:
                              (1/7) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [: system . current_block || '.' || substr ( : system . current_item , 6 ) ]
                                  Query value with 1 result nodes - CONTENT : [Wper_id ]
                                  Query as with 1 result nodes - CONTENT in line 20: [Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ]
                                  Query st with 1 result nodes - CONTENT : [Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: Wper_id
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: system . current_block || '.' || substr ( : system . current_item , 6 ) ]
                                      Query s with 1 result nodes - CONTENT : [: system . current_block || '.' || substr ( : system . current_item , 6 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: system . current_block || '.' || substr ( : system . current_item , 6 ) ]
                                      Query s with 1 result nodes - CONTENT in line 20: [: system . current_block || '.' || substr ( : system . current_item , 6 ) ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                              (2/7) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 21: [copy ( : global . per_id , WPer_id ) ]
                                  Query st with 1 result nodes - CONTENT : [copy ( : global . per_id , WPer_id ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 21: [copy ]
                                        Query fc with 1 result nodes - CONTENT in line 21: [copy ( : global . per_id , WPer_id ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: global . per_id ]
                                              Query expA with 1 result nodes - CONTENT : [: global . per_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: global . per_id ]
                                                    Query s with 1 result nodes - CONTENT : [: global . per_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: global . per_id ]
                                                    Query s with 1 result nodes - CONTENT : [: global . per_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: global . per_id ]
                                                    Query s with 1 result nodes - CONTENT : [: global . per_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 21: [: global . per_id ]
                                                      Query ea with 1 result nodes - CONTENT : [: global . per_id ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :global.per_id


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [WPer_id ]
                                              Query expA with 1 result nodes - CONTENT : [WPer_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WPer_id ]
                                                    Query s with 1 result nodes - CONTENT : [WPer_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WPer_id ]
                                                    Query s with 1 result nodes - CONTENT : [WPer_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WPer_id ]
                                                    Query s with 1 result nodes - CONTENT : [WPer_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WPer_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [WPer_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [WPer_id ]
                                                    Query dec with 1 result nodes - CONTENT : [WPer_id Varchar2 ( 100 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [WPer_id ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                                                    Query iden with 1 result nodes - CONTENT in line 21: [WPer_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (3/7) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 24: [select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ]
                                  Query lvals with 2 result nodes
                                  Query st with 1 result nodes - CONTENT : [select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [per_id = : global . per_id and rownum = 1 ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 2 result nodes
                                        Query fromn with 1 result nodes - CONTENT : [otg_personas ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 24: [select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ]
                                        Query list with 2 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [per_dni ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: per_dni

                                          (2/2) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [per_nombrec ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: per_nombrec

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [per_id = : global . per_id and rownum = 1 ]
                                            Query next with 1 result nodes - CONTENT : [per_id = : global . per_id and rownum = 1 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [per_id = : global . per_id and rownum = 1 ]
                                            Query next with 1 result nodes - CONTENT in line 26: [per_id = : global . per_id and rownum = 1 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionAnd... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query ca with 1 result nodes - CONTENT in line 26: [per_id = : global . per_id and rownum = 1 ]
                                              Query ex2 with 1 result nodes - CONTENT : [rownum = 1 ]
                                              Query ex1 with 1 result nodes - CONTENT : [per_id = : global . per_id ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: condition_not (kind). Rule... calling skipConditionNot rule

                                                RULE: skipConditionNot... executing!
                                                Skip Rule skipConditionNot executing...
                                                Executing skip query...
                                                  Query cn with 1 result nodes - CONTENT : [per_id = : global . per_id ]
                                                  Query next with 1 result nodes - CONTENT : [per_id = : global . per_id ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionComparison... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query eqOp with 1 result nodes - CONTENT in line 26: [per_id = : global . per_id ]
                                                    Query gthOp with 0 result nodes
                                                    Query orOp with 0 result nodes
                                                    Query geqOp with 0 result nodes
                                                    Query sc with 1 result nodes - CONTENT : [per_id = : global . per_id ]
                                                    Query leqOp with 0 result nodes
                                                    Query notEqOp with 0 result nodes
                                                    Query compar with 1 result nodes - CONTENT in line 26: [per_id = : global . per_id ]
                                                    Query lthOp with 0 result nodes
                                                    Query exp2 with 1 result nodes - CONTENT : [: global . per_id ]
                                                    Query exp1 with 1 result nodes - CONTENT : [per_id ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [per_id ]
                                                        Query s with 1 result nodes - CONTENT : [per_id ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [per_id ]
                                                        Query cast2 with 1 result nodes - CONTENT : [per_id ]
                                                        Query cast1 with 1 result nodes - CONTENT : [per_id ]
                                                        Query dec with 0 result nodes
                                                        Query s with 1 result nodes - CONTENT : [per_id ]
                                                        Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                                                        Query iden with 1 result nodes - CONTENT in line 26: [per_id ]
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 26: [per_id ]
                                                          Query fc with 1 result nodes - CONTENT : [per_id ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - per_id (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [: global . per_id ]
                                                        Query s with 1 result nodes - CONTENT : [: global . per_id ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFormsVariableFromExpAdd... executing!
                                                        Model Element astm::gastm::IdentifierReference created
                                                        Executing queries...
                                                          Query se with 1 result nodes - CONTENT in line 26: [: global . per_id ]
                                                          Query ea with 1 result nodes - CONTENT : [: global . per_id ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - CODE:  - node: simple_expression (kind) - Result: :global.per_id

                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Equal created

                                              - OPERATION_CREATION: astm::gastm::And created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: condition_not (kind). Rule... calling skipConditionNot rule

                                                RULE: skipConditionNot... executing!
                                                Skip Rule skipConditionNot executing...
                                                Executing skip query...
                                                  Query cn with 1 result nodes - CONTENT : [rownum = 1 ]
                                                  Query next with 1 result nodes - CONTENT : [rownum = 1 ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createConditionComparison... executing!
                                                  Model Element astm::gastm::BinaryExpression created
                                                  Executing queries...
                                                    Query eqOp with 1 result nodes - CONTENT in line 26: [rownum = 1 ]
                                                    Query gthOp with 0 result nodes
                                                    Query orOp with 0 result nodes
                                                    Query geqOp with 0 result nodes
                                                    Query sc with 1 result nodes - CONTENT : [rownum = 1 ]
                                                    Query leqOp with 0 result nodes
                                                    Query notEqOp with 0 result nodes
                                                    Query compar with 1 result nodes - CONTENT in line 26: [rownum = 1 ]
                                                    Query lthOp with 0 result nodes
                                                    Query exp2 with 1 result nodes - CONTENT : [1 ]
                                                    Query exp1 with 1 result nodes - CONTENT : [rownum ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [rownum ]
                                                        Query s with 1 result nodes - CONTENT : [rownum ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [rownum ]
                                                        Query cast2 with 1 result nodes - CONTENT : [rownum ]
                                                        Query cast1 with 1 result nodes - CONTENT : [rownum ]
                                                        Query dec with 0 result nodes
                                                        Query s with 1 result nodes - CONTENT : [rownum ]
                                                        Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                                                        Query iden with 1 result nodes - CONTENT in line 26: [rownum ]
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapFunctionCall... executing!
                                                        Model Element astm::gastm::FunctionCallExpression created
                                                        Executing queries...
                                                          Query exp with 0 result nodes
                                                          Query params with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 26: [rownum ]
                                                          Query fc with 1 result nodes - CONTENT : [rownum ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                          - OPERATION_CREATION: astm::gastm::Name created
                                                          - QUERY_ACCESS: variable: iden - 
                                                            node: identifier (kind) - leaf: ID (kind) - rownum (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                      RULE: skipAllArithmeticRules... executing!
                                                      Skip Rule skipAllArithmeticRules executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : [1 ]
                                                        Query s with 1 result nodes - CONTENT : [1 ]
                                                      Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                      - IF detected...true!
                                                      - OPERATION_CREATION: astm::gastm::Equal created


                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [otg_personas ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: otg_personas


                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [DNI ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: DNI

                                    (2/2) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [Nombre ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: Nombre


                              (4/7) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ]
                                  Query value with 1 result nodes - CONTENT : [WNombre ]
                                  Query as with 1 result nodes - CONTENT in line 28: [WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ]
                                  Query st with 1 result nodes - CONTENT : [WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: WNombre
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ]
                                      Query s with 1 result nodes - CONTENT : [: system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ]
                                      Query s with 1 result nodes - CONTENT in line 28: [: system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                              (5/7) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 29: [copy ( Nombre , WNombre ) ]
                                  Query st with 1 result nodes - CONTENT : [copy ( Nombre , WNombre ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 29: [copy ]
                                        Query fc with 1 result nodes - CONTENT in line 29: [copy ( Nombre , WNombre ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [Nombre ]
                                              Query expA with 1 result nodes - CONTENT : [Nombre ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [Nombre ]
                                                    Query s with 1 result nodes - CONTENT : [Nombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [Nombre ]
                                                    Query s with 1 result nodes - CONTENT : [Nombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [Nombre ]
                                                    Query s with 1 result nodes - CONTENT : [Nombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [Nombre ]
                                                    Query cast2 with 1 result nodes - CONTENT : [Nombre ]
                                                    Query cast1 with 1 result nodes - CONTENT : [Nombre ]
                                                    Query dec with 1 result nodes - CONTENT : [Nombre Varchar2 ( 100 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [Nombre ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                                                    Query iden with 1 result nodes - CONTENT in line 29: [Nombre ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [WNombre ]
                                              Query expA with 1 result nodes - CONTENT : [WNombre ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [WNombre ]
                                                    Query cast2 with 1 result nodes - CONTENT : [WNombre ]
                                                    Query cast1 with 1 result nodes - CONTENT : [WNombre ]
                                                    Query dec with 1 result nodes - CONTENT : [WNombre Varchar2 ( 100 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [WNombre ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                                                    Query iden with 1 result nodes - CONTENT in line 29: [WNombre ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (6/7) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 30: [copy ( DNI , : system . current_item ) ]
                                  Query st with 1 result nodes - CONTENT : [copy ( DNI , : system . current_item ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 30: [copy ]
                                        Query fc with 1 result nodes - CONTENT in line 30: [copy ( DNI , : system . current_item ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [DNI ]
                                              Query expA with 1 result nodes - CONTENT : [DNI ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DNI ]
                                                    Query s with 1 result nodes - CONTENT : [DNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DNI ]
                                                    Query s with 1 result nodes - CONTENT : [DNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DNI ]
                                                    Query s with 1 result nodes - CONTENT : [DNI ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [DNI ]
                                                    Query cast2 with 1 result nodes - CONTENT : [DNI ]
                                                    Query cast1 with 1 result nodes - CONTENT : [DNI ]
                                                    Query dec with 1 result nodes - CONTENT : [DNI Varchar2 ( 14 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [DNI ]
                                                    Query block with 1 result nodes - CONTENT in line 10: [Declare WPer_id Varchar2 ( 100 ) ; WNombre Varchar2 ( 100 ) ; Nombre Varchar2 ( 100 ) ; DNI Varchar2 ( 14 ) ; Begin : global . per_id := null ; call ( 'otg_busca_personas' , no_hide , no_replace ) ; : global . per_id is not null then Wper_id := : system . current_block || '.' || substr ( : system . current_item , 6 ) ; copy ( : global . per_id , WPer_id ) ; select per_dni , per_nombrec into DNI , Nombre from otg_personas where per_id = : global . per_id and rownum = 1 ; WNombre := : system . current_block || '.WNOMBRE_' || substr ( : system . current_item , 6 ) ; copy ( Nombre , WNombre ) ; copy ( DNI , : system . current_item ) ; synchronize ; end if ; : global . per_id := null ; End ]
                                                    Query iden with 1 result nodes - CONTENT in line 30: [DNI ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 30: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item




                              (7/7) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [synchronize ]
                                  Query st with 1 result nodes - CONTENT : [synchronize ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 31: [synchronize ]
                                        Query fc with 1 result nodes - CONTENT : [synchronize ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - synchronize (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (4/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [null ]
                            Query value with 1 result nodes - CONTENT in line 33: [: global . per_id ]
                            Query as with 1 result nodes - CONTENT in line 33: [: global . per_id := null ]
                            Query st with 1 result nodes - CONTENT : [: global . per_id := null ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: :global.per_id
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapNullLiteral... executing!
                                Model Element astm::gastm::StringLiteral created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [null ]
                                  Query st with 1 result nodes - CONTENT in line 33: [null ]
                                Executing mappings...
                                  - CODE:  - node: simple_expression (kind) - Result: null 




            (51/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WADD_PPE_PER_ID WHEN-BUTTON-PRESSED Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 3 result nodes
                      Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 3 bindings:
                        (1/3) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                                Query s with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 2: [= ]
                                  Query exp with 1 result nodes - CONTENT : [: System . Form_Status = 'CHANGED' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 2: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: System . Form_Status ]
                                  Query expl2 with 1 result nodes - CONTENT : ['CHANGED' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: System . Form_Status ]
                                      Query s with 1 result nodes - CONTENT : [: System . Form_Status ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 2: [: System . Form_Status ]
                                        Query ea with 1 result nodes - CONTENT : [: System . Form_Status ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :System.Form_Status

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['CHANGED' ]
                                      Query s with 1 result nodes - CONTENT : ['CHANGED' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['CHANGED' ]
                                        Query st with 1 result nodes - CONTENT in line 2: ['CHANGED' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'CHANGED' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [15 ]
                                  Query value with 1 result nodes - CONTENT in line 3: [: SYSTEM . MESSAGE_LEVEL ]
                                  Query as with 1 result nodes - CONTENT in line 3: [: SYSTEM . MESSAGE_LEVEL := 15 ]
                                  Query st with 1 result nodes - CONTENT : [: SYSTEM . MESSAGE_LEVEL := 15 ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :SYSTEM.MESSAGE_LEVEL
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [15 ]
                                      Query s with 1 result nodes - CONTENT : [15 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                              (2/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [POST ]
                                  Query st with 1 result nodes - CONTENT : [POST ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 4: [POST ]
                                        Query fc with 1 result nodes - CONTENT : [POST ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - POST (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (3/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [0 ]
                                  Query value with 1 result nodes - CONTENT in line 5: [: SYSTEM . MESSAGE_LEVEL ]
                                  Query as with 1 result nodes - CONTENT in line 5: [: SYSTEM . MESSAGE_LEVEL := 0 ]
                                  Query st with 1 result nodes - CONTENT : [: SYSTEM . MESSAGE_LEVEL := 0 ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :SYSTEM.MESSAGE_LEVEL
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [0 ]
                                      Query s with 1 result nodes - CONTENT : [0 ]
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (2/3) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [null ]
                            Query value with 1 result nodes - CONTENT in line 8: [: global . per_id ]
                            Query as with 1 result nodes - CONTENT in line 8: [: global . per_id := null ]
                            Query st with 1 result nodes - CONTENT : [: global . per_id := null ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: :global.per_id
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [null ]
                                Query s with 1 result nodes - CONTENT : [null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapNullLiteral... executing!
                                Model Element astm::gastm::StringLiteral created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [null ]
                                  Query st with 1 result nodes - CONTENT in line 8: [null ]
                                Executing mappings...
                                  - CODE:  - node: simple_expression (kind) - Result: null 


                        (3/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 9: [call ( 'otg_perotri' , no_hide , no_replace ) ]
                            Query st with 1 result nodes - CONTENT : [call ( 'otg_perotri' , no_hide , no_replace ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 3 result nodes
                                  Query params with 3 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 9: [call ]
                                  Query fc with 1 result nodes - CONTENT in line 9: [call ( 'otg_perotri' , no_hide , no_replace ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - call (value) 
                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['otg_perotri' ]
                                        Query expA with 1 result nodes - CONTENT : ['otg_perotri' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_perotri' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_perotri' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_perotri' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_perotri' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['otg_perotri' ]
                                              Query s with 1 result nodes - CONTENT : ['otg_perotri' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['otg_perotri' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['otg_perotri' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'otg_perotri' 


                                    (2/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [no_hide ]
                                        Query expA with 1 result nodes - CONTENT : [no_hide ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_hide ]
                                              Query cast2 with 1 result nodes - CONTENT : [no_hide ]
                                              Query cast1 with 1 result nodes - CONTENT : [no_hide ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [no_hide ]
                                              Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ]
                                              Query iden with 1 result nodes - CONTENT in line 9: [no_hide ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 9: [no_hide ]
                                                Query fc with 1 result nodes - CONTENT : [no_hide ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - no_hide (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                    (3/3) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [no_replace ]
                                        Query expA with 1 result nodes - CONTENT : [no_replace ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                            Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [no_replace ]
                                              Query cast2 with 1 result nodes - CONTENT : [no_replace ]
                                              Query cast1 with 1 result nodes - CONTENT : [no_replace ]
                                              Query dec with 0 result nodes
                                              Query s with 1 result nodes - CONTENT : [no_replace ]
                                              Query block with 1 result nodes - CONTENT in line 1: [Begin : System . Form_Status = 'CHANGED' THEN : SYSTEM . MESSAGE_LEVEL := 15 ; POST ; : SYSTEM . MESSAGE_LEVEL := 0 ; END IF ; : global . per_id := null ; call ( 'otg_perotri' , no_hide , no_replace ) ; End ]
                                              Query iden with 1 result nodes - CONTENT in line 9: [no_replace ]
                                            - IF detected...false! executing ELSE part 
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapFunctionCall... executing!
                                              Model Element astm::gastm::FunctionCallExpression created
                                              Executing queries...
                                                Query exp with 0 result nodes
                                                Query params with 0 result nodes
                                                Query iden with 1 result nodes - CONTENT in line 9: [no_replace ]
                                                Query fc with 1 result nodes - CONTENT : [no_replace ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - QUERY_ACCESS: variable: iden - 
                                                  node: identifier (kind) - leaf: ID (kind) - no_replace (value) 
                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST






            (52/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WGO_PPE_PER_ID WHEN-BUTTON-PRESSED declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace replace ]
                Query stats with 1 result nodes - CONTENT : [declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [Wper_id := ]
                      Query block with 1 result nodes - CONTENT in line 6: [declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace ]
                      Query decls with 4 result nodes
                      Query st with 1 result nodes - CONTENT : [declare tipo Varchar2 ( 1 ) ; id Number ; WPer_id Varchar2 ( 100 ) ; r Number ; begin Wper_id := replace replace ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : []
                            Query value with 1 result nodes - CONTENT : [Wper_id ]
                            Query as with 1 result nodes - CONTENT in line 8: [Wper_id := ]
                            Query st with 1 result nodes - CONTENT : [Wper_id := ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: Wper_id
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 1 result nodes - CONTENT : []
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 1 result nodes - CONTENT : []
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : []
                                Query s with 0 result nodes
                              Locating skip query... SKIP VARIABLE DOESNT EXIST



            (53/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_DISEUROPEOS . DPE_CON_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_DISEUROPEOS . DPE_CON_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_DISEUROPEOS . DPE_CON_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_DISEUROPEOS . DPE_CON_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_DISEUROPEOS . DPE_CON_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_DISEUROPEOS . DPE_CON_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_DISEUROPEOS.DPE_CON_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (54/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-CHANGE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 4 result nodes
                      Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                      Query decls with 4 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query value with 1 result nodes - CONTENT : [CodigoUO ]
                            Query as with 1 result nodes - CONTENT in line 8: [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query st with 1 result nodes - CONTENT : [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: CodigoUO
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 8: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query params with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query iden with 1 result nodes - CONTENT in line 8: [NAME_IN ]
                                  Query fc with 1 result nodes - CONTENT in line 8: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expA with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 8: [: SYSTEM . TRIGGER_ITEM ]
                                                Query ea with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.TRIGGER_ITEM




                        (2/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                            Query value with 1 result nodes - CONTENT : [n ]
                            Query as with 1 result nodes - CONTENT in line 9: [n := instr ( : system . trigger_item , '.' ) ]
                            Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: n
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [instr ]
                                Query cast1 with 1 result nodes - CONTENT : [instr ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 9: [instr ( : system . trigger_item , '.' ) ]
                                Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 9: [instr ]
                                  Query fc with 1 result nodes - CONTENT in line 9: [instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 9: [: system . trigger_item ]
                                                Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['.' ]
                                        Query expA with 1 result nodes - CONTENT : ['.' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['.' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['.' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '.' 




                        (3/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query value with 1 result nodes - CONTENT : [NomVar ]
                            Query as with 1 result nodes - CONTENT in line 10: [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query st with 1 result nodes - CONTENT : [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: NomVar
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT in line 10: [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! SKIP RULE NOT LOCATED!

                        (4/4) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                                Query s with 1 result nodes - CONTENT in line 12: [CodigoUO IS NOT NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 12: [CodigoUO IS NOT NULL ]
                                  Query expa with 1 result nodes - CONTENT : [CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query dec with 1 result nodes - CONTENT : [CodigoUO VARCHAR2 ( 50 ) ; ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 12: [CodigoUO ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 14: [SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ]
                                  Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                  Query st with 1 result nodes - CONTENT : [SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_CONCEPTOS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 14: [SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ]
                                        Query list with 1 result nodes - CONTENT : [CON_NOMBRE ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [CON_NOMBRE ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: CON_NOMBRE

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 15: [CON_CODIGO = CodigoUO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 15: [CON_CODIGO = CodigoUO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [CodigoUO ]
                                              Query exp1 with 1 result nodes - CONTENT : [CON_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 15: [CON_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 15: [CON_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - CON_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query dec with 1 result nodes - CONTENT : [CodigoUO VARCHAR2 ( 50 ) ; ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 15: [CodigoUO ]
                                                - IF detected...true!
                                                - IF detected...true!
                                                Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_CONCEPTOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_CONCEPTOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [ValVar ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: ValVar


                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 17: [Copy ( ValVar , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [Copy ( ValVar , NomVar ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 17: [Copy ]
                                        Query fc with 1 result nodes - CONTENT in line 17: [Copy ( ValVar , NomVar ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [ValVar ]
                                              Query expA with 1 result nodes - CONTENT : [ValVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query dec with 1 result nodes - CONTENT : [ValVar Varchar2 ( 500 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                    Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 17: [ValVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [NomVar ]
                                              Query expA with 1 result nodes - CONTENT : [NomVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                    Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO VARCHAR2 ( 50 ) ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 17: [NomVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (55/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WDPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                            Query cond with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                                Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                                  Query expa with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query s with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query params with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query iden with 1 result nodes - CONTENT in line 7: [NAME_IN ]
                                        Query fc with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 7: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item



                                  - OPERATION_CREATION: astm::gastm::NotEqual created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                  Query value with 1 result nodes - CONTENT : [n ]
                                  Query as with 1 result nodes - CONTENT in line 8: [n := instr ( : system . trigger_item , '.' ) ]
                                  Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: n
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [instr ]
                                      Query cast1 with 1 result nodes - CONTENT : [instr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 8: [instr ]
                                        Query fc with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 8: [: system . trigger_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['.' ]
                                              Query expA with 1 result nodes - CONTENT : ['.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['.' ]
                                                      Query st with 1 result nodes - CONTENT in line 8: ['.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: '.' 




                              (2/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                  Query value with 1 result nodes - CONTENT : [NomVar ]
                                  Query as with 1 result nodes - CONTENT in line 9: [NomVar := substr ( : system . current_item , 2 ) ]
                                  Query st with 1 result nodes - CONTENT : [NomVar := substr ( : system . current_item , 2 ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: NomVar
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [substr ]
                                      Query cast1 with 1 result nodes - CONTENT : [substr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 9: [substr ]
                                        Query fc with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - substr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 9: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [2 ]
                                              Query expA with 1 result nodes - CONTENT : [2 ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (3/3) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ]
                                  Query cond with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query s with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query cast2 with 2 result nodes
                                            Query cast1 with 2 result nodes
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                            Query iden with 2 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [NomVar ]
                                              Query params with 1 result nodes - CONTENT : [NomVar ]
                                              Query iden with 1 result nodes - CONTENT in line 10: [NAME_IN ]
                                              Query fc with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 0 result nodes
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                            Query fc with 1 result nodes - CONTENT : [NomVar ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - NomVar (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                        Query st with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 2 result nodes
                                              Query params with 2 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 11: [copy ]
                                              Query fc with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                              - QUERY_RESULT: 2 bindings:
                                                (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NULL ]
                                                    Query expA with 1 result nodes - CONTENT : [NULL ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapNullLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                                            Query st with 1 result nodes - CONTENT in line 11: [NULL ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: NULL 


                                                (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                                          Query iden with 1 result nodes - CONTENT in line 11: [NomVar ]
                                                        - IF detected...true!
                                                        - IF detected...true!
                                                        Locating skip query... skip located! SKIP RULE NOT LOCATED!



                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (56/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_JPEUROPEOS KEY-DELREC declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ; delete_record ; ]
                Query stats with 2 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-DELREC (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ]
                      Query block with 1 result nodes - CONTENT in line 8: [declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [declare cursor primary_cur is select 'x' from OTG_PPEUROPEOS where PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; primary_dummy char ( 1 ) ; begin ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ; end ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 4 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) then open primary_cur ; fetch primary_cur into primary_dummy ; ( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ; close primary_cur ; end if ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipBinaryExpressionOr... executing!
                              Skip Rule skipBinaryExpressionOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                Query s with 1 result nodes - CONTENT in line 9: [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionAnd... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 9: [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) and ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                  Query expa2 with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ]
                                      Query s with 1 result nodes - CONTENT in line 9: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 9: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 9: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_JPEUROPEOS.JPE_PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::And created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ]
                                      Query s with 1 result nodes - CONTENT in line 9: [: OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 9: [: OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 9: [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_JPEUROPEOS.JPE_JUSTIFICA

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)


                            - QUERY_RESULT: 4 bindings:
                              (1/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (2/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/4) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 3 result nodes
                                  Query st with 1 result nodes - CONTENT : [( primary_cur %found ) then message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; close primary_cur ; raise form_trigger_failure ; end if ]
                                  Query cond with 1 result nodes - CONTENT : [( primary_cur %found ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [( primary_cur %found ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( primary_cur %found ) ]
                                      Query s with 1 result nodes - CONTENT : [primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [primary_cur %found ]
                                      Query s with 1 result nodes - CONTENT in line 12: [primary_cur %found ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT in line 12: [primary_cur %found ]
                                      Query s with 1 result nodes - CONTENT : [primary_cur ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [primary_cur ]
                                      Query s with 1 result nodes - CONTENT : [primary_cur ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [primary_cur ]
                                      Query cast2 with 1 result nodes - CONTENT : [primary_cur ]
                                      Query cast1 with 1 result nodes - CONTENT : [primary_cur ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT : [primary_cur ]
                                      Query block with 0 result nodes
                                      Query iden with 1 result nodes - CONTENT in line 12: [primary_cur ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 12: [primary_cur ]
                                        Query fc with 1 result nodes - CONTENT : [primary_cur ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - primary_cur (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                  - QUERY_RESULT: 3 bindings:
                                    (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 13: [message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                        Query st with 1 result nodes - CONTENT : [message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query params with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query iden with 1 result nodes - CONTENT in line 13: [message ]
                                              Query fc with 1 result nodes - CONTENT in line 13: [message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - message (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query expA with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                          Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                          Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                          Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                            Query st with 1 result nodes - CONTENT in line 13: ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' 




                                    (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                                    (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                              (4/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                  (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT : [delete_record ]
                      Query st with 1 result nodes - CONTENT : [delete_record ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 0 result nodes
                            Query params with 0 result nodes
                            Query iden with 1 result nodes - CONTENT in line 20: [delete_record ]
                            Query fc with 1 result nodes - CONTENT : [delete_record ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - delete_record (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (57/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_JPEUROPEOS ON-POPULATE-DETAILS DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - ON-POPULATE-DETAILS (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 3 result nodes
                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                      Query decls with 3 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 3 bindings:
                        (1/3) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 1 result nodes - CONTENT : [RETURN ]
                            Query st with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                                Query s with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                                Query s with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                                Query s with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( recstat = 'NEW' or recstat = 'INSERT' ) ]
                                Query s with 1 result nodes - CONTENT in line 15: [recstat = 'NEW' or recstat = 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionOr... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 15: [recstat = 'NEW' or recstat = 'INSERT' ]
                                  Query expo1 with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                  Query expo2 with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_or (kind). Rule... calling skipBinaryExpressionAnd rule

                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                      Query s with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                      Query s with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 15: [= ]
                                        Query exp with 1 result nodes - CONTENT : [recstat = 'NEW' ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 15: [= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [recstat ]
                                        Query expl2 with 1 result nodes - CONTENT : ['NEW' ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [recstat ]
                                            Query s with 1 result nodes - CONTENT : [recstat ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [recstat ]
                                            Query cast2 with 1 result nodes - CONTENT : [recstat ]
                                            Query cast1 with 1 result nodes - CONTENT : [recstat ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [recstat ]
                                            Query block with 0 result nodes
                                            Query iden with 1 result nodes - CONTENT in line 15: [recstat ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 15: [recstat ]
                                              Query fc with 1 result nodes - CONTENT : [recstat ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - recstat (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['NEW' ]
                                            Query s with 1 result nodes - CONTENT : ['NEW' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapStringLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['NEW' ]
                                              Query st with 1 result nodes - CONTENT in line 15: ['NEW' ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: 'NEW' 

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created

                                  - OPERATION_CREATION: astm::gastm::Or created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_or (kind). Rule... calling skipBinaryExpressionAnd rule

                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                      Query s with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                      Query s with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 15: [= ]
                                        Query exp with 1 result nodes - CONTENT : [recstat = 'INSERT' ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 15: [= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [recstat ]
                                        Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [recstat ]
                                            Query s with 1 result nodes - CONTENT : [recstat ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [recstat ]
                                            Query cast2 with 1 result nodes - CONTENT : [recstat ]
                                            Query cast1 with 1 result nodes - CONTENT : [recstat ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [recstat ]
                                            Query block with 0 result nodes
                                            Query iden with 1 result nodes - CONTENT in line 15: [recstat ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 15: [recstat ]
                                              Query fc with 1 result nodes - CONTENT : [recstat ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - recstat (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                            Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapStringLiteral... executing!
                                            Model Element astm::gastm::StringLiteral created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                              Query st with 1 result nodes - CONTENT in line 15: ['INSERT' ]
                                            Executing mappings...
                                              - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapReturnStatement rule

                              RULE: mapReturnStatement... executing!
                                Model Element astm::gastm::ReturnStatement created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query st with 1 result nodes - CONTENT : [RETURN ]
                                Executing mappings...
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (2/3) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                                Query s with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) ]
                                Query s with 1 result nodes - CONTENT in line 21: [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionOr... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 21: [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                  Query expo1 with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                  Query expo2 with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_or (kind). Rule... calling skipBinaryExpressionAnd rule

                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ]
                                      Query s with 1 result nodes - CONTENT in line 21: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 21: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 21: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_JPEUROPEOS.JPE_PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Or created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_or (kind). Rule... calling skipBinaryExpressionAnd rule

                                    RULE: skipBinaryExpressionAnd... executing!
                                    Skip Rule skipBinaryExpressionAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNot... executing!
                                    Skip Rule skipUnaryExpressionNot executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ]
                                      Query s with 1 result nodes - CONTENT in line 21: [: OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 21: [: OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 21: [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_JUSTIFICA ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_JPEUROPEOS.JPE_JUSTIFICA

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)


                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                  Query value with 1 result nodes - CONTENT : [rel_id ]
                                  Query as with 1 result nodes - CONTENT in line 22: [rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: rel_id
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                      Query s with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query cast1 with 1 result nodes - CONTENT : [Find_Relation ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 22: [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                      Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 22: [Find_Relation ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                        Query params with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                        Query iden with 1 result nodes - CONTENT in line 22: [Find_Relation ]
                                        Query fc with 1 result nodes - CONTENT in line 22: [Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Find_Relation (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 22: ['OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' 




                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 23: [Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ]
                                  Query st with 1 result nodes - CONTENT : [Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 23: [Query_Master_Details ]
                                        Query fc with 1 result nodes - CONTENT in line 23: [Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Query_Master_Details (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [rel_id ]
                                              Query expA with 1 result nodes - CONTENT : [rel_id ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast2 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query cast1 with 1 result nodes - CONTENT : [rel_id ]
                                                    Query dec with 1 result nodes - CONTENT : [rel_id Relation ; ]
                                                    Query s with 1 result nodes - CONTENT : [rel_id ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 23: [rel_id ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                              Query expA with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                                    Query s with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['OTG_PPEUROPEOS' ]
                                                      Query st with 1 result nodes - CONTENT in line 23: ['OTG_PPEUROPEOS' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'OTG_PPEUROPEOS' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (3/3) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                                Query s with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                                Query s with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                                Query s with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( : System . cursor_item <> startitm ) ]
                                Query s with 1 result nodes - CONTENT : [: System . cursor_item <> startitm ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: System . cursor_item <> startitm ]
                                Query s with 1 result nodes - CONTENT : [: System . cursor_item <> startitm ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: System . cursor_item <> startitm ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 29: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: System . cursor_item ]
                                  Query expl2 with 1 result nodes - CONTENT : [startitm ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 29: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: System . cursor_item ]
                                      Query s with 1 result nodes - CONTENT : [: System . cursor_item ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 29: [: System . cursor_item ]
                                        Query ea with 1 result nodes - CONTENT : [: System . cursor_item ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :System.cursor_item

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [startitm ]
                                      Query s with 1 result nodes - CONTENT : [startitm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [startitm ]
                                      Query cast2 with 1 result nodes - CONTENT : [startitm ]
                                      Query cast1 with 1 result nodes - CONTENT : [startitm ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT : [startitm ]
                                      Query block with 0 result nodes
                                      Query iden with 1 result nodes - CONTENT in line 29: [startitm ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 29: [startitm ]
                                        Query fc with 1 result nodes - CONTENT : [startitm ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - startitm (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 30: [Go_Item ( startitm ) ]
                                  Query st with 1 result nodes - CONTENT : [Go_Item ( startitm ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [startitm ]
                                        Query params with 1 result nodes - CONTENT : [startitm ]
                                        Query iden with 1 result nodes - CONTENT in line 30: [Go_Item ]
                                        Query fc with 1 result nodes - CONTENT in line 30: [Go_Item ( startitm ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Go_Item (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [startitm ]
                                              Query expA with 1 result nodes - CONTENT : [startitm ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [startitm ]
                                                    Query s with 1 result nodes - CONTENT : [startitm ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [startitm ]
                                                    Query s with 1 result nodes - CONTENT : [startitm ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [startitm ]
                                                    Query s with 1 result nodes - CONTENT : [startitm ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [startitm ]
                                                    Query cast2 with 1 result nodes - CONTENT : [startitm ]
                                                    Query cast1 with 1 result nodes - CONTENT : [startitm ]
                                                    Query dec with 1 result nodes - CONTENT : [startitm VARCHAR2 ( 61 ) := : System . cursor_item ; ]
                                                    Query s with 1 result nodes - CONTENT : [startitm ]
                                                    Query block with 1 result nodes - CONTENT in line 14: [DECLARE recstat VARCHAR2 ( 20 ) := : System . record_status ; startitm VARCHAR2 ( 61 ) := : System . cursor_item ; rel_id Relation ; BEGIN ( recstat = 'NEW' or recstat = 'INSERT' ) THEN RETURN ; END IF ; ( ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO is not null ) or ( : OTG_JPEUROPEOS . JPE_JUSTIFICA is not null ) ) THEN rel_id := Find_Relation ( 'OTG_JPEUROPEOS.OTG_JPEUROPEOS_OTG_PPEUROPEOS' ) ; Query_Master_Details ( rel_id , 'OTG_PPEUROPEOS' ) ; END IF ; ( : System . cursor_item <> startitm ) THEN Go_Item ( startitm ) ; Check_Package_Failure ; END IF ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 30: [startitm ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [Check_Package_Failure ]
                                  Query st with 1 result nodes - CONTENT : [Check_Package_Failure ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 31: [Check_Package_Failure ]
                                        Query fc with 1 result nodes - CONTENT : [Check_Package_Failure ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Check_Package_Failure (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (58/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_JPEUROPEOS ON-CHECK-DELETE-MASTER DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - ON-CHECK-DELETE-MASTER (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 4 result nodes
                      Query block with 1 result nodes - CONTENT in line 21: [DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE Dummy_Define CHAR ( 1 ) ; CURSOR OTG_PPEUROPEOS_cur IS SELECT 1 FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : OTG_JPEUROPEOS . JPE_PEU_CODIGO and PPE_JUSTIFICA = : OTG_JPEUROPEOS . JPE_JUSTIFICA ; BEGIN OPEN OTG_PPEUROPEOS_cur ; FETCH OTG_PPEUROPEOS_cur INTO Dummy_Define ; ( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ; CLOSE OTG_PPEUROPEOS_cur ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (2/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements
                        (3/4) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) THEN Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ; CLOSE OTG_PPEUROPEOS_cur ; RAISE Form_Trigger_Failure ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprBoolFromExprParen... executing!
                              Skip Rule skipToExprBoolFromExprParen executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( OTG_PPEUROPEOS_cur %found ) ]
                                Query s with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT in line 27: [OTG_PPEUROPEOS_cur %found ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT in line 27: [OTG_PPEUROPEOS_cur %found ]
                                Query s with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur ]
                                Query s with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur ]
                                Query cast2 with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur ]
                                Query cast1 with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur ]
                                Query block with 0 result nodes
                                Query iden with 1 result nodes - CONTENT in line 27: [OTG_PPEUROPEOS_cur ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 27: [OTG_PPEUROPEOS_cur ]
                                  Query fc with 1 result nodes - CONTENT : [OTG_PPEUROPEOS_cur ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - OTG_PPEUROPEOS_cur (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 28: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                  Query st with 1 result nodes - CONTENT : [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query params with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                        Query iden with 1 result nodes - CONTENT in line 28: [Message ]
                                        Query fc with 1 result nodes - CONTENT in line 28: [Message ( 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Message (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expA with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Query s with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                      Query st with 1 result nodes - CONTENT in line 28: ['No puede borrar registro maestro cuando existen registros detalle coincidentes.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'No puede borrar registro maestro cuando existen registros detalle coincidentes.' 




                              (2/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                              (3/3) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (4/4) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: subStatements


            (59/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item JPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_JPEUROPEOS . JPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_JPEUROPEOS.JPE_PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (60/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PPEUROPEOS POST-CHANGE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-CHANGE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 11: [When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; ]
                      Query stats with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ]
                      Query block with 1 result nodes - CONTENT in line 3: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [: C_WADD_PPE_IMPE := null ]
                            Query thenSt with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                            Query st with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ]
                            Query cond with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                                Query s with 1 result nodes - CONTENT in line 4: [: peu_codigo is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [: peu_codigo is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: peu_codigo ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Query s with 1 result nodes - CONTENT : [: peu_codigo ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: peu_codigo ]
                                        Query ea with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :peu_codigo

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 5: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                  Query lvals with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                  Query st with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 5: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                        Query list with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: SUM(PPE_IMPE)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                              Query exp1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 3: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                                                  Query iden with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - PPE_PEU_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFormsVariableFromExpAdd... executing!
                                                  Model Element astm::gastm::IdentifierReference created
                                                  Executing queries...
                                                    Query se with 1 result nodes - CONTENT in line 6: [: PEU_CODIGO ]
                                                    Query ea with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: simple_expression (kind) - Result: :PEU_CODIGO

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_PPEUROPEOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [null ]
                                  Query value with 1 result nodes - CONTENT in line 9: [: C_WADD_PPE_IMPE ]
                                  Query as with 1 result nodes - CONTENT in line 9: [: C_WADD_PPE_IMPE := null ]
                                  Query st with 1 result nodes - CONTENT : [: C_WADD_PPE_IMPE := null ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapNullLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [null ]
                                        Query st with 1 result nodes - CONTENT in line 9: [null ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: null 





            (61/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PPEUROPEOS POST-UPDATE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-UPDATE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 11: [When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; ]
                      Query stats with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ]
                      Query block with 1 result nodes - CONTENT in line 3: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [: C_WADD_PPE_IMPE := null ]
                            Query thenSt with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                            Query st with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ]
                            Query cond with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                                Query s with 1 result nodes - CONTENT in line 4: [: peu_codigo is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [: peu_codigo is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: peu_codigo ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Query s with 1 result nodes - CONTENT : [: peu_codigo ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: peu_codigo ]
                                        Query ea with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :peu_codigo

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 5: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                  Query lvals with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                  Query st with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 5: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                        Query list with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: SUM(PPE_IMPE)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                              Query exp1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 3: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                                                  Query iden with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - PPE_PEU_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFormsVariableFromExpAdd... executing!
                                                  Model Element astm::gastm::IdentifierReference created
                                                  Executing queries...
                                                    Query se with 1 result nodes - CONTENT in line 6: [: PEU_CODIGO ]
                                                    Query ea with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: simple_expression (kind) - Result: :PEU_CODIGO

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_PPEUROPEOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [null ]
                                  Query value with 1 result nodes - CONTENT in line 9: [: C_WADD_PPE_IMPE ]
                                  Query as with 1 result nodes - CONTENT in line 9: [: C_WADD_PPE_IMPE := null ]
                                  Query st with 1 result nodes - CONTENT : [: C_WADD_PPE_IMPE := null ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapNullLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [null ]
                                        Query st with 1 result nodes - CONTENT in line 9: [null ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: null 





            (62/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PPEUROPEOS POST-INSERT Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-INSERT (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 11: [When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; ]
                      Query stats with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ]
                      Query block with 1 result nodes - CONTENT in line 3: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [: C_WADD_PPE_IMPE := null ]
                            Query thenSt with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                            Query st with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ]
                            Query cond with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                                Query s with 1 result nodes - CONTENT in line 4: [: peu_codigo is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [: peu_codigo is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: peu_codigo ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Query s with 1 result nodes - CONTENT : [: peu_codigo ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: peu_codigo ]
                                        Query ea with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :peu_codigo

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 5: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                  Query lvals with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                  Query st with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 5: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                        Query list with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: SUM(PPE_IMPE)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                              Query exp1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 3: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                                                  Query iden with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - PPE_PEU_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFormsVariableFromExpAdd... executing!
                                                  Model Element astm::gastm::IdentifierReference created
                                                  Executing queries...
                                                    Query se with 1 result nodes - CONTENT in line 6: [: PEU_CODIGO ]
                                                    Query ea with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: simple_expression (kind) - Result: :PEU_CODIGO

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_PPEUROPEOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [null ]
                                  Query value with 1 result nodes - CONTENT in line 9: [: C_WADD_PPE_IMPE ]
                                  Query as with 1 result nodes - CONTENT in line 9: [: C_WADD_PPE_IMPE := null ]
                                  Query st with 1 result nodes - CONTENT : [: C_WADD_PPE_IMPE := null ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapNullLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [null ]
                                        Query st with 1 result nodes - CONTENT in line 9: [null ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: null 





            (63/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_PPEUROPEOS POST-DELETE Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-DELETE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 11: [When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; ]
                      Query stats with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ]
                      Query block with 1 result nodes - CONTENT in line 3: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                      Query decls with 0 result nodes
                      Query st with 1 result nodes - CONTENT : [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [: C_WADD_PPE_IMPE := null ]
                            Query thenSt with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                            Query st with 1 result nodes - CONTENT : [: peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ]
                            Query cond with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: peu_codigo is not null ]
                                Query s with 1 result nodes - CONTENT in line 4: [: peu_codigo is not null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [: peu_codigo is not null ]
                                  Query expa with 1 result nodes - CONTENT : [: peu_codigo ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Query s with 1 result nodes - CONTENT : [: peu_codigo ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: peu_codigo ]
                                        Query ea with 1 result nodes - CONTENT : [: peu_codigo ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :peu_codigo

                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 5: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                  Query lvals with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                  Query st with 1 result nodes - CONTENT : [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 5: [SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ]
                                        Query list with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [SUM ( PPE_IMPE ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: SUM(PPE_IMPE)

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                            Query next with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO = : PEU_CODIGO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                              Query exp1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 3: [Begin : peu_codigo is not null Then SELECT SUM ( PPE_IMPE ) INTO : C_WADD_PPE_IMPE FROM OTG_PPEUROPEOS WHERE PPE_PEU_CODIGO = : PEU_CODIGO GROUP BY PPE_PEU_CODIGO ; Else : C_WADD_PPE_IMPE := null ; End if ; Exception When Others then : C_WADD_PPE_IMPE := null ; Raise Form_trigger_failure ; End ]
                                                  Query iden with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 6: [PPE_PEU_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [PPE_PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - PPE_PEU_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFormsVariableFromExpAdd... executing!
                                                  Model Element astm::gastm::IdentifierReference created
                                                  Executing queries...
                                                    Query se with 1 result nodes - CONTENT in line 6: [: PEU_CODIGO ]
                                                    Query ea with 1 result nodes - CONTENT : [: PEU_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - CODE:  - node: simple_expression (kind) - Result: :PEU_CODIGO

                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_PPEUROPEOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_PPEUROPEOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT in line 5: [: C_WADD_PPE_IMPE ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE


                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [null ]
                                  Query value with 1 result nodes - CONTENT in line 9: [: C_WADD_PPE_IMPE ]
                                  Query as with 1 result nodes - CONTENT in line 9: [: C_WADD_PPE_IMPE := null ]
                                  Query st with 1 result nodes - CONTENT : [: C_WADD_PPE_IMPE := null ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: :C_WADD_PPE_IMPE
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query s with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapNullLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [null ]
                                        Query st with 1 result nodes - CONTENT in line 9: [null ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: null 





            (64/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_PEU_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_PPEUROPEOS.PPE_PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (65/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PPE_JUSTIFICA WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_JUSTIFICA IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_JUSTIFICA ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_JUSTIFICA ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_JUSTIFICA ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_JUSTIFICA ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_JUSTIFICA ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_PPEUROPEOS.PPE_JUSTIFICA

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (66/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PPE_CON_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_CON_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_CON_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_CON_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_CON_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_PPEUROPEOS . PPE_CON_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_PPEUROPEOS . PPE_CON_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_PPEUROPEOS.PPE_CON_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (67/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PPE_CON_CODIGO POST-CHANGE DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ; ]
                Query stats with 1 result nodes - CONTENT : [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - POST-CHANGE (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 1 result nodes - CONTENT in line 23: [WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; ]
                      Query stats with 4 result nodes
                      Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                      Query decls with 4 result nodes
                      Query st with 1 result nodes - CONTENT : [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                    Executing mappings...
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query value with 1 result nodes - CONTENT : [CodigoUO ]
                            Query as with 1 result nodes - CONTENT in line 8: [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                            Query st with 1 result nodes - CONTENT : [CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: CodigoUO
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query s with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 8: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query params with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                  Query iden with 1 result nodes - CONTENT in line 8: [NAME_IN ]
                                  Query fc with 1 result nodes - CONTENT in line 8: [NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expA with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Query s with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 8: [: SYSTEM . TRIGGER_ITEM ]
                                                Query ea with 1 result nodes - CONTENT : [: SYSTEM . TRIGGER_ITEM ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.TRIGGER_ITEM




                        (2/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                            Query value with 1 result nodes - CONTENT : [n ]
                            Query as with 1 result nodes - CONTENT in line 9: [n := instr ( : system . trigger_item , '.' ) ]
                            Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: n
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                Query cast2 with 1 result nodes - CONTENT : [instr ]
                                Query cast1 with 1 result nodes - CONTENT : [instr ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 9: [instr ( : system . trigger_item , '.' ) ]
                                Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                Query iden with 3 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 2 result nodes
                                  Query params with 2 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 9: [instr ]
                                  Query fc with 1 result nodes - CONTENT in line 9: [instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: createFormsVariableFromExpAdd... executing!
                                              Model Element astm::gastm::IdentifierReference created
                                              Executing queries...
                                                Query se with 1 result nodes - CONTENT in line 9: [: system . trigger_item ]
                                                Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                    (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['.' ]
                                        Query expA with 1 result nodes - CONTENT : ['.' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['.' ]
                                              Query s with 1 result nodes - CONTENT : ['.' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['.' ]
                                                Query st with 1 result nodes - CONTENT in line 9: ['.' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '.' 




                        (3/4) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query value with 1 result nodes - CONTENT : [NomVar ]
                            Query as with 1 result nodes - CONTENT in line 10: [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                            Query st with 1 result nodes - CONTENT : [NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: NomVar
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                                Query s with 1 result nodes - CONTENT in line 10: [: system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ]
                              Locating skip query... skip located! SKIP RULE NOT LOCATED!

                        (4/4) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [CodigoUO IS NOT NULL ]
                                Query s with 1 result nodes - CONTENT in line 12: [CodigoUO IS NOT NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNotNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 12: [CodigoUO IS NOT NULL ]
                                  Query expa with 1 result nodes - CONTENT : [CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query dec with 1 result nodes - CONTENT : [CodigoUO Number ; ]
                                      Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                      Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                      Query iden with 1 result nodes - CONTENT in line 12: [CodigoUO ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - OPERATION_CREATION: astm::gastm::Equal created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapSelectStatement rule

                              RULE: mapSelectStatement... executing!
                                Model Element astm::sastm::RDBSelectStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 15: [SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ]
                                  Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                  Query st with 1 result nodes - CONTENT : [SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                                    RULE: mapSelectExpression... executing!
                                      Model Element astm::sastm::RDBSelectExpression created
                                      Executing queries...
                                        Query w with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                        Query fromj with 0 result nodes
                                        Query lvals with 1 result nodes - CONTENT : [ValVar ]
                                        Query fromn with 1 result nodes - CONTENT : [OTG_CONCEPTOS ]
                                        Query isCount with 0 result nodes
                                        Query sexpr with 1 result nodes - CONTENT in line 15: [SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ]
                                        Query list with 1 result nodes - CONTENT : [CON_NOMBRE ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                                          RULE: mapColumn... executing!
                                            Model Element astm::sastm::RDBColumnReference created
                                            Executing queries...
                                              Query dc with 1 result nodes - CONTENT : [CON_NOMBRE ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: displayed_column (kind) - Result: CON_NOMBRE

                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: sql_condition (kind). Rule... calling skipToConditionOr rule

                                          RULE: skipToConditionOr... executing!
                                          Skip Rule skipToConditionOr executing...
                                          Executing skip query...
                                            Query c with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionOr... executing!
                                          Skip Rule skipConditionOr executing...
                                          Executing skip query...
                                            Query co with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionAnd... executing!
                                          Skip Rule skipConditionAnd executing...
                                          Executing skip query...
                                            Query ca with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionNot... executing!
                                          Skip Rule skipConditionNot executing...
                                          Executing skip query...
                                            Query cn with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                            Query next with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createConditionComparison... executing!
                                            Model Element astm::gastm::BinaryExpression created
                                            Executing queries...
                                              Query eqOp with 1 result nodes - CONTENT in line 16: [CON_CODIGO = CodigoUO ]
                                              Query gthOp with 0 result nodes
                                              Query orOp with 0 result nodes
                                              Query geqOp with 0 result nodes
                                              Query sc with 1 result nodes - CONTENT : [CON_CODIGO = CodigoUO ]
                                              Query leqOp with 0 result nodes
                                              Query notEqOp with 0 result nodes
                                              Query compar with 1 result nodes - CONTENT in line 16: [CON_CODIGO = CodigoUO ]
                                              Query lthOp with 0 result nodes
                                              Query exp2 with 1 result nodes - CONTENT : [CodigoUO ]
                                              Query exp1 with 1 result nodes - CONTENT : [CON_CODIGO ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query s with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query dec with 0 result nodes
                                                  Query s with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 16: [CON_CODIGO ]
                                                - IF detected...false! executing ELSE part 
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapFunctionCall... executing!
                                                  Model Element astm::gastm::FunctionCallExpression created
                                                  Executing queries...
                                                    Query exp with 0 result nodes
                                                    Query params with 0 result nodes
                                                    Query iden with 1 result nodes - CONTENT in line 16: [CON_CODIGO ]
                                                    Query fc with 1 result nodes - CONTENT : [CON_CODIGO ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                    - OPERATION_CREATION: astm::gastm::Name created
                                                    - QUERY_ACCESS: variable: iden - 
                                                      node: identifier (kind) - leaf: ID (kind) - CON_CODIGO (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                                RULE: skipAllArithmeticRules... executing!
                                                Skip Rule skipAllArithmeticRules executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast2 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query cast1 with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query dec with 1 result nodes - CONTENT : [CodigoUO Number ; ]
                                                  Query s with 1 result nodes - CONTENT : [CodigoUO ]
                                                  Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                  Query iden with 1 result nodes - CONTENT in line 16: [CodigoUO ]
                                                - IF detected...true!
                                                - IF detected...true!
                                                Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                                - IF detected...true!
                                                - OPERATION_CREATION: astm::gastm::Equal created

                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                            RULE: mapTable... executing!
                                              Model Element astm::sastm::RDBTableReference created
                                              Executing queries...
                                                Query st with 1 result nodes - CONTENT : [OTG_CONCEPTOS ]
                                              Executing mappings...
                                                - OPERATION_CREATION: astm::gastm::Name created
                                                - CODE:  - node: selected_table (kind) - Result: OTG_CONCEPTOS


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                                    RULE: mapIntoVariable... executing!
                                      Model Element astm::sastm::RDBHostVariableReference created
                                      Executing queries...
                                        Query l with 1 result nodes - CONTENT : [ValVar ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: ValVar


                              (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 19: [Copy ( ValVar , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [Copy ( ValVar , NomVar ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 19: [Copy ]
                                        Query fc with 1 result nodes - CONTENT in line 19: [Copy ( ValVar , NomVar ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - Copy (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [ValVar ]
                                              Query expA with 1 result nodes - CONTENT : [ValVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [ValVar ]
                                                    Query dec with 1 result nodes - CONTENT : [ValVar Varchar2 ( 500 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [ValVar ]
                                                    Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 19: [ValVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [NomVar ]
                                              Query expA with 1 result nodes - CONTENT : [NomVar ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                  Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                    Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                    Query s with 1 result nodes - CONTENT : [NomVar ]
                                                    Query block with 1 result nodes - CONTENT in line 6: [DECLARE CodigoUO Number ; n Number ; NomVar Varchar2 ( 50 ) ; ValVar Varchar2 ( 500 ) ; BEGIN CodigoUO := NAME_IN ( : SYSTEM . TRIGGER_ITEM ) ; n := instr ( : system . trigger_item , '.' ) ; NomVar := : system . current_block || '.W' || substr ( : system . trigger_item , n + 1 ) ; CodigoUO IS NOT NULL THEN SELECT CON_NOMBRE INTO ValVar FROM OTG_CONCEPTOS WHERE CON_CODIGO = CodigoUO ; Copy ( ValVar , NomVar ) ; END IF ; EXCEPTION WHEN OTHERS THEN RAISE FORM_TRIGGER_FAILURE ; END ]
                                                    Query iden with 1 result nodes - CONTENT in line 19: [NomVar ]
                                                  - IF detected...true!
                                                  - IF detected...true!
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (68/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item WPPE_CON_CODIGO WHEN-VALIDATE-ITEM Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                      Query decls with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 3 result nodes
                            Query st with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ]
                            Query cond with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) IS NULL ]
                                Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionIsNull... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) IS NULL ]
                                  Query expa with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query s with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( : system . current_item ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query cast1 with 1 result nodes - CONTENT : [NAME_IN ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query params with 1 result nodes - CONTENT : [: system . current_item ]
                                        Query iden with 1 result nodes - CONTENT in line 7: [NAME_IN ]
                                        Query fc with 1 result nodes - CONTENT in line 7: [NAME_IN ( : system . current_item ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 7: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item



                                  - OPERATION_CREATION: astm::gastm::NotEqual created
                                  - OPERATION_CREATION: astm::gastm::StringLiteral created
                                  - VALUE: value (property) - null (value)

                            - QUERY_RESULT: 3 bindings:
                              (1/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                  Query value with 1 result nodes - CONTENT : [n ]
                                  Query as with 1 result nodes - CONTENT in line 8: [n := instr ( : system . trigger_item , '.' ) ]
                                  Query st with 1 result nodes - CONTENT : [n := instr ( : system . trigger_item , '.' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: n
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query s with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [instr ( : system . trigger_item , '.' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [instr ]
                                      Query cast1 with 1 result nodes - CONTENT : [instr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 8: [instr ]
                                        Query fc with 1 result nodes - CONTENT in line 8: [instr ( : system . trigger_item , '.' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - instr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . trigger_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 8: [: system . trigger_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . trigger_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.trigger_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['.' ]
                                              Query expA with 1 result nodes - CONTENT : ['.' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['.' ]
                                                    Query s with 1 result nodes - CONTENT : ['.' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['.' ]
                                                      Query st with 1 result nodes - CONTENT in line 8: ['.' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: '.' 




                              (2/3) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                  Query value with 1 result nodes - CONTENT : [NomVar ]
                                  Query as with 1 result nodes - CONTENT in line 9: [NomVar := substr ( : system . current_item , 2 ) ]
                                  Query st with 1 result nodes - CONTENT : [NomVar := substr ( : system . current_item , 2 ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: NomVar
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query s with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [substr ( : system . current_item , 2 ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [substr ]
                                      Query cast1 with 1 result nodes - CONTENT : [substr ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                      Query iden with 3 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 2 result nodes
                                        Query params with 2 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 9: [substr ]
                                        Query fc with 1 result nodes - CONTENT in line 9: [substr ( : system . current_item , 2 ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - substr (value) 
                                        - QUERY_RESULT: 2 bindings:
                                          (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expA with 1 result nodes - CONTENT : [: system . current_item ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Query s with 1 result nodes - CONTENT : [: system . current_item ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: createFormsVariableFromExpAdd... executing!
                                                    Model Element astm::gastm::IdentifierReference created
                                                    Executing queries...
                                                      Query se with 1 result nodes - CONTENT in line 9: [: system . current_item ]
                                                      Query ea with 1 result nodes - CONTENT : [: system . current_item ]
                                                    Executing mappings...
                                                      - OPERATION_CREATION: astm::gastm::Name created
                                                      - CODE:  - node: simple_expression (kind) - Result: :system.current_item


                                          (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : [2 ]
                                              Query expA with 1 result nodes - CONTENT : [2 ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : [2 ]
                                                    Query s with 1 result nodes - CONTENT : [2 ]
                                                  Locating skip query... skip located! SKIP RULE NOT LOCATED!



                              (3/3) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 0 result nodes
                                  Query thenSt with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                  Query st with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ]
                                  Query cond with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query s with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [NAME_IN ( NomVar ) ]
                                            Query cast2 with 2 result nodes
                                            Query cast1 with 2 result nodes
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                            Query iden with 2 result nodes
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [NomVar ]
                                              Query params with 1 result nodes - CONTENT : [NomVar ]
                                              Query iden with 1 result nodes - CONTENT in line 10: [NAME_IN ]
                                              Query fc with 1 result nodes - CONTENT in line 10: [NAME_IN ( NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - NAME_IN (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 0 result nodes
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 0 result nodes
                                                          Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 10: [NomVar ]
                                                            Query fc with 1 result nodes - CONTENT : [NomVar ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - NomVar (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                        Query st with 1 result nodes - CONTENT : [copy ( NULL , NomVar ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 2 result nodes
                                              Query params with 2 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 11: [copy ]
                                              Query fc with 1 result nodes - CONTENT in line 11: [copy ( NULL , NomVar ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - copy (value) 
                                              - QUERY_RESULT: 2 bindings:
                                                (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NULL ]
                                                    Query expA with 1 result nodes - CONTENT : [NULL ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NULL ]
                                                          Query s with 1 result nodes - CONTENT : [NULL ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapNullLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : [NULL ]
                                                            Query st with 1 result nodes - CONTENT in line 11: [NULL ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: NULL 


                                                (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expA with 1 result nodes - CONTENT : [NomVar ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query cast1 with 1 result nodes - CONTENT : [NomVar ]
                                                          Query dec with 1 result nodes - CONTENT : [NomVar Varchar2 ( 50 ) ; ]
                                                          Query s with 1 result nodes - CONTENT : [NomVar ]
                                                          Query block with 1 result nodes - CONTENT in line 5: [Declare n Number ; NomVar Varchar2 ( 50 ) ; Begin NAME_IN ( : system . current_item ) IS NULL then n := instr ( : system . trigger_item , '.' ) ; NomVar := substr ( : system . current_item , 2 ) ; NAME_IN ( NomVar ) IS NOT NULL Then copy ( NULL , NomVar ) ; End if ; End If ; End ]
                                                          Query iden with 1 result nodes - CONTENT in line 11: [NomVar ]
                                                        - IF detected...true!
                                                        - IF detected...true!
                                                        Locating skip query... skip located! SKIP RULE NOT LOCATED!



                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (69/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_SPEUROPEOS PRE-INSERT select s_spe_codigo . nextval into : spe_codigo from dual ; ]
                Query stats with 1 result nodes - CONTENT : [select s_spe_codigo . nextval into : spe_codigo from dual ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - PRE-INSERT (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                  RULE: mapSelectStatement... executing!
                    Model Element astm::sastm::RDBSelectStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT in line 1: [select s_spe_codigo . nextval into : spe_codigo from dual ]
                      Query lvals with 1 result nodes - CONTENT in line 1: [: spe_codigo ]
                      Query st with 1 result nodes - CONTENT : [select s_spe_codigo . nextval into : spe_codigo from dual ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                        RULE: mapSelectExpression... executing!
                          Model Element astm::sastm::RDBSelectExpression created
                          Executing queries...
                            Query w with 0 result nodes
                            Query fromj with 0 result nodes
                            Query lvals with 1 result nodes - CONTENT in line 1: [: spe_codigo ]
                            Query fromn with 1 result nodes - CONTENT : [dual ]
                            Query isCount with 0 result nodes
                            Query sexpr with 1 result nodes - CONTENT in line 1: [select s_spe_codigo . nextval into : spe_codigo from dual ]
                            Query list with 1 result nodes - CONTENT : [s_spe_codigo . nextval ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                              RULE: mapColumn... executing!
                                Model Element astm::sastm::RDBColumnReference created
                                Executing queries...
                                  Query dc with 1 result nodes - CONTENT : [s_spe_codigo . nextval ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: displayed_column (kind) - Result: s_spe_codigo.nextval

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                              - IF detected...true!
                              - QUERY_RESULT: 1 bindings:
                                (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                RULE: mapTable... executing!
                                  Model Element astm::sastm::RDBTableReference created
                                  Executing queries...
                                    Query st with 1 result nodes - CONTENT : [dual ]
                                  Executing mappings...
                                    - OPERATION_CREATION: astm::gastm::Name created
                                    - CODE:  - node: selected_table (kind) - Result: dual


                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                        RULE: mapIntoVariable... executing!
                          Model Element astm::sastm::RDBHostVariableReference created
                          Executing queries...
                            Query l with 1 result nodes - CONTENT in line 1: [: spe_codigo ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: :spe_codigo



            (70/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item SPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_SPEUROPEOS . SPE_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_SPEUROPEOS . SPE_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_SPEUROPEOS.SPE_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (71/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item SPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_SPEUROPEOS . SPE_PEU_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_SPEUROPEOS . SPE_PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_SPEUROPEOS . SPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_SPEUROPEOS.SPE_PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (72/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block OTG_OPEUROPEOS PRE-INSERT select s_oeu_codigo . nextval into : ope_codigo from dual ; ]
                Query stats with 1 result nodes - CONTENT : [select s_oeu_codigo . nextval into : ope_codigo from dual ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - PRE-INSERT (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapSelectStatement rule

                  RULE: mapSelectStatement... executing!
                    Model Element astm::sastm::RDBSelectStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT in line 1: [select s_oeu_codigo . nextval into : ope_codigo from dual ]
                      Query lvals with 1 result nodes - CONTENT in line 1: [: ope_codigo ]
                      Query st with 1 result nodes - CONTENT : [select s_oeu_codigo . nextval into : ope_codigo from dual ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: select_expression (kind). Rule... calling mapSelectExpression rule

                        RULE: mapSelectExpression... executing!
                          Model Element astm::sastm::RDBSelectExpression created
                          Executing queries...
                            Query w with 0 result nodes
                            Query fromj with 0 result nodes
                            Query lvals with 1 result nodes - CONTENT in line 1: [: ope_codigo ]
                            Query fromn with 1 result nodes - CONTENT : [dual ]
                            Query isCount with 0 result nodes
                            Query sexpr with 1 result nodes - CONTENT in line 1: [select s_oeu_codigo . nextval into : ope_codigo from dual ]
                            Query list with 1 result nodes - CONTENT : [s_oeu_codigo . nextval ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: displayed_column (kind). Rule... calling mapColumn rule

                              RULE: mapColumn... executing!
                                Model Element astm::sastm::RDBColumnReference created
                                Executing queries...
                                  Query dc with 1 result nodes - CONTENT : [s_oeu_codigo . nextval ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: displayed_column (kind) - Result: s_oeu_codigo.nextval

                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                              - IF detected...true!
                              - QUERY_RESULT: 1 bindings:
                                (1/1) result node: selected_table (kind). Rule... calling mapTable rule

                                RULE: mapTable... executing!
                                  Model Element astm::sastm::RDBTableReference created
                                  Executing queries...
                                    Query st with 1 result nodes - CONTENT : [dual ]
                                  Executing mappings...
                                    - OPERATION_CREATION: astm::gastm::Name created
                                    - CODE:  - node: selected_table (kind) - Result: dual


                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: lvalue (kind). Rule... calling mapIntoVariable rule

                        RULE: mapIntoVariable... executing!
                          Model Element astm::sastm::RDBHostVariableReference created
                          Executing queries...
                            Query l with 1 result nodes - CONTENT in line 1: [: ope_codigo ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: :ope_codigo



            (73/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item OPE_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_OPEUROPEOS . OPE_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_OPEUROPEOS . OPE_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_OPEUROPEOS.OPE_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (74/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item OPE_PEU_CODIGO WHEN-VALIDATE-ITEM not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-VALIDATE-ITEM (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 2 result nodes
                      Query st with 1 result nodes - CONTENT : [not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' then message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ; raise form_trigger_failure ; end if ]
                      Query cond with 1 result nodes - CONTENT : [not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipBinaryExpressionOr rule

                        RULE: skipBinaryExpressionOr... executing!
                        Skip Rule skipBinaryExpressionOr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                          Query s with 1 result nodes - CONTENT in line 4: [not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionAnd... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) AND : SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa2 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                            Query expa1 with 1 result nodes - CONTENT in line 4: [not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling mapUnaryExpressionNot rule

                              RULE: mapUnaryExpressionNot... executing!
                                Model Element astm::gastm::UnaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 4: [not ( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) ]
                                  Query expa1 with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_not (kind). Rule... calling skipToExprAdd rule

                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprBoolFromExprParen... executing!
                                    Skip Rule skipToExprBoolFromExprParen executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( : OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ) ]
                                      Query s with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ]
                                      Query s with 1 result nodes - CONTENT in line 4: [: OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionIsNotNull... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 4: [: OTG_OPEUROPEOS . OPE_PEU_CODIGO IS NOT NULL ]
                                        Query expa with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_PEU_CODIGO ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_PEU_CODIGO ]
                                            Query s with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_PEU_CODIGO ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFormsVariableFromExpAdd... executing!
                                            Model Element astm::gastm::IdentifierReference created
                                            Executing queries...
                                              Query se with 1 result nodes - CONTENT in line 4: [: OTG_OPEUROPEOS . OPE_PEU_CODIGO ]
                                              Query ea with 1 result nodes - CONTENT : [: OTG_OPEUROPEOS . OPE_PEU_CODIGO ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - CODE:  - node: simple_expression (kind) - Result: :OTG_OPEUROPEOS.OPE_PEU_CODIGO

                                        - OPERATION_CREATION: astm::gastm::Equal created
                                        - OPERATION_CREATION: astm::gastm::StringLiteral created
                                        - VALUE: value (property) - null (value)

                                  - OPERATION_CREATION: astm::gastm::Not created

                            - OPERATION_CREATION: astm::gastm::And created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_and (kind). Rule... calling skipUnaryExpressionNot rule

                              RULE: skipUnaryExpressionNot... executing!
                              Skip Rule skipUnaryExpressionNot executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS <> 'INSERT' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['INSERT' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 1 result nodes - CONTENT in line 4: [<> ]
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . RECORD_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . RECORD_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.RECORD_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                      Query s with 1 result nodes - CONTENT : ['INSERT' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['INSERT' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['INSERT' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'INSERT' 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! executing ELSE part 
                                            - IF detected...false! executing ELSE part 
                                                - IF detected...false! executing ELSE part 
                                                    - IF detected...true!
                                                    - OPERATION_CREATION: astm::gastm::NotEqual created


                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                            Query st with 1 result nodes - CONTENT : [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query params with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                  Query iden with 1 result nodes - CONTENT in line 5: [message ]
                                  Query fc with 1 result nodes - CONTENT in line 5: [message ( 'WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - message (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expA with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                              Query s with 1 result nodes - CONTENT in line 5: ['WHEN-VALIDATE-ITEM trigger failed on field - ' || : system . trigger_field ]
                                            Locating skip query... skip located! SKIP RULE NOT LOCATED!



                        (2/2) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: thenBody
                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (75/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_ENTQ WHEN-BUTTON-PRESSED do_key ( 'Enter_query' ) ; ]
                Query stats with 1 result nodes - CONTENT : [do_key ( 'Enter_query' ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [do_key ( 'Enter_query' ) ]
                      Query st with 1 result nodes - CONTENT : [do_key ( 'Enter_query' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : ['Enter_query' ]
                            Query params with 1 result nodes - CONTENT : ['Enter_query' ]
                            Query iden with 1 result nodes - CONTENT in line 1: [do_key ]
                            Query fc with 1 result nodes - CONTENT in line 1: [do_key ( 'Enter_query' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - do_key (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['Enter_query' ]
                                  Query expA with 1 result nodes - CONTENT : ['Enter_query' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['Enter_query' ]
                                        Query s with 1 result nodes - CONTENT : ['Enter_query' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['Enter_query' ]
                                        Query s with 1 result nodes - CONTENT : ['Enter_query' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['Enter_query' ]
                                        Query s with 1 result nodes - CONTENT : ['Enter_query' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['Enter_query' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['Enter_query' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'Enter_query' 





            (76/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_EXEQ WHEN-BUTTON-PRESSED do_key ( 'Execute_query' ) ; ]
                Query stats with 1 result nodes - CONTENT : [do_key ( 'Execute_query' ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [do_key ( 'Execute_query' ) ]
                      Query st with 1 result nodes - CONTENT : [do_key ( 'Execute_query' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : ['Execute_query' ]
                            Query params with 1 result nodes - CONTENT : ['Execute_query' ]
                            Query iden with 1 result nodes - CONTENT in line 1: [do_key ]
                            Query fc with 1 result nodes - CONTENT in line 1: [do_key ( 'Execute_query' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - do_key (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['Execute_query' ]
                                  Query expA with 1 result nodes - CONTENT : ['Execute_query' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['Execute_query' ]
                                        Query s with 1 result nodes - CONTENT : ['Execute_query' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['Execute_query' ]
                                        Query s with 1 result nodes - CONTENT : ['Execute_query' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['Execute_query' ]
                                        Query s with 1 result nodes - CONTENT : ['Execute_query' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['Execute_query' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['Execute_query' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'Execute_query' 





            (77/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_CANQ WHEN-BUTTON-PRESSED : system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ; ]
                Query stats with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 1 result nodes - CONTENT : [do_key ( 'Exit_form' ) ]
                      Query st with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' then do_key ( 'Exit_form' ) ; end if ]
                      Query cond with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' ]
                          Query s with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionRelational... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query eqOp with 1 result nodes - CONTENT in line 1: [= ]
                            Query exp with 1 result nodes - CONTENT : [: system . mode = 'ENTER-QUERY' ]
                            Query gthOp with 0 result nodes
                            Query orOp with 0 result nodes
                            Query op with 1 result nodes - CONTENT in line 1: [= ]
                            Query geqOp with 0 result nodes
                            Query expl1 with 1 result nodes - CONTENT : [: system . mode ]
                            Query expl2 with 1 result nodes - CONTENT : ['ENTER-QUERY' ]
                            Query leqOp with 0 result nodes
                            Query notEqOp with 0 result nodes
                            Query lthOp with 0 result nodes
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: system . mode ]
                                Query s with 1 result nodes - CONTENT : [: system . mode ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFormsVariableFromExpAdd... executing!
                                Model Element astm::gastm::IdentifierReference created
                                Executing queries...
                                  Query se with 1 result nodes - CONTENT in line 1: [: system . mode ]
                                  Query ea with 1 result nodes - CONTENT : [: system . mode ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: simple_expression (kind) - Result: :system.mode

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : ['ENTER-QUERY' ]
                                Query s with 1 result nodes - CONTENT : ['ENTER-QUERY' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapStringLiteral... executing!
                                Model Element astm::gastm::StringLiteral created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['ENTER-QUERY' ]
                                  Query st with 1 result nodes - CONTENT in line 1: ['ENTER-QUERY' ]
                                Executing mappings...
                                  - CODE:  - node: simple_expression (kind) - Result: 'ENTER-QUERY' 

                              - IF detected...true!
                              - OPERATION_CREATION: astm::gastm::Equal created

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT in line 2: [do_key ( 'Exit_form' ) ]
                            Query st with 1 result nodes - CONTENT : [do_key ( 'Exit_form' ) ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : ['Exit_form' ]
                                  Query params with 1 result nodes - CONTENT : ['Exit_form' ]
                                  Query iden with 1 result nodes - CONTENT in line 2: [do_key ]
                                  Query fc with 1 result nodes - CONTENT in line 2: [do_key ( 'Exit_form' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - do_key (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['Exit_form' ]
                                        Query expA with 1 result nodes - CONTENT : ['Exit_form' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Exit_form' ]
                                              Query s with 1 result nodes - CONTENT : ['Exit_form' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Exit_form' ]
                                              Query s with 1 result nodes - CONTENT : ['Exit_form' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Exit_form' ]
                                              Query s with 1 result nodes - CONTENT : ['Exit_form' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['Exit_form' ]
                                                Query st with 1 result nodes - CONTENT in line 2: ['Exit_form' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'Exit_form' 




                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (78/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_SAVE WHEN-BUTTON-PRESSED do_key ( 'commit_form' ) ; ]
                Query stats with 1 result nodes - CONTENT : [do_key ( 'commit_form' ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [do_key ( 'commit_form' ) ]
                      Query st with 1 result nodes - CONTENT : [do_key ( 'commit_form' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                            Query params with 1 result nodes - CONTENT : ['commit_form' ]
                            Query iden with 1 result nodes - CONTENT in line 1: [do_key ]
                            Query fc with 1 result nodes - CONTENT in line 1: [do_key ( 'commit_form' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - do_key (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['commit_form' ]
                                  Query expA with 1 result nodes - CONTENT : ['commit_form' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                        Query s with 1 result nodes - CONTENT : ['commit_form' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                        Query s with 1 result nodes - CONTENT : ['commit_form' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                        Query s with 1 result nodes - CONTENT : ['commit_form' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['commit_form' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'commit_form' 





            (79/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_ANT WHEN-BUTTON-PRESSED previous_record ; ]
                Query stats with 1 result nodes - CONTENT : [previous_record ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT : [previous_record ]
                      Query st with 1 result nodes - CONTENT : [previous_record ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 0 result nodes
                            Query params with 0 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [previous_record ]
                            Query fc with 1 result nodes - CONTENT : [previous_record ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - previous_record (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (80/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_SIG WHEN-BUTTON-PRESSED next_record ; ]
                Query stats with 1 result nodes - CONTENT : [next_record ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT : [next_record ]
                      Query st with 1 result nodes - CONTENT : [next_record ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 0 result nodes
                            Query params with 0 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [next_record ]
                            Query fc with 1 result nodes - CONTENT : [next_record ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - next_record (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (81/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_INS WHEN-BUTTON-PRESSED do_key ( 'create_record' ) ; ]
                Query stats with 1 result nodes - CONTENT : [do_key ( 'create_record' ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [do_key ( 'create_record' ) ]
                      Query st with 1 result nodes - CONTENT : [do_key ( 'create_record' ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : ['create_record' ]
                            Query params with 1 result nodes - CONTENT : ['create_record' ]
                            Query iden with 1 result nodes - CONTENT in line 1: [do_key ]
                            Query fc with 1 result nodes - CONTENT in line 1: [do_key ( 'create_record' ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - do_key (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : ['create_record' ]
                                  Query expA with 1 result nodes - CONTENT : ['create_record' ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['create_record' ]
                                        Query s with 1 result nodes - CONTENT : ['create_record' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['create_record' ]
                                        Query s with 1 result nodes - CONTENT : ['create_record' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : ['create_record' ]
                                        Query s with 1 result nodes - CONTENT : ['create_record' ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapStringLiteral... executing!
                                        Model Element astm::gastm::StringLiteral created
                                        Executing queries...
                                          Query exp with 1 result nodes - CONTENT : ['create_record' ]
                                          Query st with 1 result nodes - CONTENT in line 1: ['create_record' ]
                                        Executing mappings...
                                          - CODE:  - node: simple_expression (kind) - Result: 'create_record' 





            (82/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_DEL WHEN-BUTTON-PRESSED Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 2 result nodes
                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ]
                      Query decls with 1 result nodes - CONTENT : [r number ; ]
                      Query st with 1 result nodes - CONTENT : [Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 2 bindings:
                        (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                        RULE: mapAssignment... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                            Query value with 1 result nodes - CONTENT : [r ]
                            Query as with 1 result nodes - CONTENT in line 4: [r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                            Query st with 1 result nodes - CONTENT : [r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::BinaryExpression created
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - CODE:  - node: lvalue (kind) - Result: r
                            - OPERATION_CREATION: astm::gastm::OperatorAssign created
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                                Query s with 1 result nodes - CONTENT : [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipToExprAdd... executing!
                              Skip Rule skipToExprAdd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                                Query s with 1 result nodes - CONTENT : [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                                Query s with 1 result nodes - CONTENT : [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                                Query cast2 with 1 result nodes - CONTENT : [alerta ]
                                Query cast1 with 1 result nodes - CONTENT : [alerta ]
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT in line 4: [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                                Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ]
                                Query iden with 1 result nodes - CONTENT in line 4: [alerta ]
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 6 result nodes
                                  Query params with 6 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 4: [alerta ]
                                  Query fc with 1 result nodes - CONTENT in line 4: [alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - alerta (value) 
                                  - QUERY_RESULT: 6 bindings:
                                    (1/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['?' ]
                                        Query expA with 1 result nodes - CONTENT : ['?' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['?' ]
                                              Query s with 1 result nodes - CONTENT : ['?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['?' ]
                                              Query s with 1 result nodes - CONTENT : ['?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['?' ]
                                              Query s with 1 result nodes - CONTENT : ['?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['?' ]
                                                Query st with 1 result nodes - CONTENT in line 4: ['?' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '?' 


                                    (2/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                        Query expA with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                              Query s with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                              Query s with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                              Query s with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['Eliminar Registro' ]
                                                Query st with 1 result nodes - CONTENT in line 4: ['Eliminar Registro' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'Eliminar Registro' 


                                    (3/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                        Query expA with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                              Query s with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                              Query s with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                              Query s with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                                Query st with 1 result nodes - CONTENT in line 4: ['¿ Esta seguro de que desea eliminar el registro ?' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: '¿ Esta seguro de que desea eliminar el registro ?' 


                                    (4/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['Aceptar' ]
                                        Query expA with 1 result nodes - CONTENT : ['Aceptar' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                              Query s with 1 result nodes - CONTENT : ['Aceptar' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['Aceptar' ]
                                                Query st with 1 result nodes - CONTENT in line 4: ['Aceptar' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'Aceptar' 


                                    (5/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : ['Cancelar' ]
                                        Query expA with 1 result nodes - CONTENT : ['Cancelar' ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                              Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                              Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                              Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapStringLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                Query st with 1 result nodes - CONTENT in line 4: ['Cancelar' ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: 'Cancelar' 


                                    (6/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                    RULE: mapActualParameter... executing!
                                      Model Element astm::gastm::ActualParameterExpression created
                                      Executing queries...
                                        Query cp with 1 result nodes - CONTENT : [null ]
                                        Query expA with 1 result nodes - CONTENT : [null ]
                                        Query expB with 0 result nodes
                                        Query iden with 0 result nodes
                                      Executing mappings...
                                          - IF detected...true!
                                          - QUERY_RESULT: 1 bindings:
                                            (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                            RULE: skipAllBooleanRules... executing!
                                            Skip Rule skipAllBooleanRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                              Query s with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipToExprAdd... executing!
                                            Skip Rule skipToExprAdd executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                              Query s with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: skipAllArithmeticRules... executing!
                                            Skip Rule skipAllArithmeticRules executing...
                                            Executing skip query...
                                              Query exp with 1 result nodes - CONTENT : [null ]
                                              Query s with 1 result nodes - CONTENT : [null ]
                                            Locating skip query... skip located! 
                                            Skipping to rule...
                                            RULE: mapNullLiteral... executing!
                                              Model Element astm::gastm::StringLiteral created
                                              Executing queries...
                                                Query exp with 1 result nodes - CONTENT : [null ]
                                                Query st with 1 result nodes - CONTENT in line 4: [null ]
                                              Executing mappings...
                                                - CODE:  - node: simple_expression (kind) - Result: null 




                        (2/2) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 0 result nodes
                            Query thenSt with 1 result nodes - CONTENT : [do_key ( 'delete_record' ) ]
                            Query st with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ]
                            Query cond with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 ]
                                Query s with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 5: [= ]
                                  Query exp with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 5: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [r ]
                                  Query expl2 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [r ]
                                      Query s with 1 result nodes - CONTENT : [r ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [r ]
                                      Query cast2 with 1 result nodes - CONTENT : [r ]
                                      Query cast1 with 1 result nodes - CONTENT : [r ]
                                      Query dec with 1 result nodes - CONTENT : [r number ; ]
                                      Query s with 1 result nodes - CONTENT : [r ]
                                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ]
                                      Query iden with 1 result nodes - CONTENT in line 5: [r ]
                                    - IF detected...true!
                                    - IF detected...true!
                                    Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query s with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query cast2 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query cast1 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin r := alerta ( '?' , 'Eliminar Registro' , '¿ Esta seguro de que desea eliminar el registro ?' , 'Aceptar' , 'Cancelar' , null ) ; r = ALERT_BUTTON1 then do_key ( 'delete_record' ) ; End if ; End ]
                                      Query iden with 1 result nodes - CONTENT in line 5: [ALERT_BUTTON1 ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 5: [ALERT_BUTTON1 ]
                                        Query fc with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - ALERT_BUTTON1 (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT in line 6: [do_key ( 'delete_record' ) ]
                                  Query st with 1 result nodes - CONTENT : [do_key ( 'delete_record' ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['delete_record' ]
                                        Query params with 1 result nodes - CONTENT : ['delete_record' ]
                                        Query iden with 1 result nodes - CONTENT in line 6: [do_key ]
                                        Query fc with 1 result nodes - CONTENT in line 6: [do_key ( 'delete_record' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - do_key (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['delete_record' ]
                                              Query expA with 1 result nodes - CONTENT : ['delete_record' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['delete_record' ]
                                                    Query s with 1 result nodes - CONTENT : ['delete_record' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['delete_record' ]
                                                    Query s with 1 result nodes - CONTENT : ['delete_record' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['delete_record' ]
                                                    Query s with 1 result nodes - CONTENT : ['delete_record' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['delete_record' ]
                                                      Query st with 1 result nodes - CONTENT in line 6: ['delete_record' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'delete_record' 




                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (83/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item PB_EXIT WHEN-BUTTON-PRESSED Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ; ]
                Query stats with 1 result nodes - CONTENT : [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapBlockStatement rule

                  RULE: mapBlockStatement... executing!
                    Model Element astm::gastm::BlockStatement created
                    Executing queries...
                      Query excep with 0 result nodes
                      Query stats with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ]
                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
                      Query decls with 1 result nodes - CONTENT : [r number ; ]
                      Query st with 1 result nodes - CONTENT : [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapIf rule

                        RULE: mapIf... executing!
                          Model Element astm::gastm::IfStatement created
                          Executing queries...
                            Query elseSt with 1 result nodes - CONTENT : [exit_form ]
                            Query thenSt with 2 result nodes
                            Query st with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ]
                            Query cond with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS = 'CHANGED' ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                              RULE: skipAllBooleanRules... executing!
                              Skip Rule skipAllBooleanRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS = 'CHANGED' ]
                                Query s with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS = 'CHANGED' ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapBinaryExpressionRelational... executing!
                                Model Element astm::gastm::BinaryExpression created
                                Executing queries...
                                  Query eqOp with 1 result nodes - CONTENT in line 4: [= ]
                                  Query exp with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS = 'CHANGED' ]
                                  Query gthOp with 0 result nodes
                                  Query orOp with 0 result nodes
                                  Query op with 1 result nodes - CONTENT in line 4: [= ]
                                  Query geqOp with 0 result nodes
                                  Query expl1 with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS ]
                                  Query expl2 with 1 result nodes - CONTENT : ['CHANGED' ]
                                  Query leqOp with 0 result nodes
                                  Query notEqOp with 0 result nodes
                                  Query lthOp with 0 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS ]
                                      Query s with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFormsVariableFromExpAdd... executing!
                                      Model Element astm::gastm::IdentifierReference created
                                      Executing queries...
                                        Query se with 1 result nodes - CONTENT in line 4: [: SYSTEM . FORM_STATUS ]
                                        Query ea with 1 result nodes - CONTENT : [: SYSTEM . FORM_STATUS ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: simple_expression (kind) - Result: :SYSTEM.FORM_STATUS

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : ['CHANGED' ]
                                      Query s with 1 result nodes - CONTENT : ['CHANGED' ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStringLiteral... executing!
                                      Model Element astm::gastm::StringLiteral created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : ['CHANGED' ]
                                        Query st with 1 result nodes - CONTENT in line 4: ['CHANGED' ]
                                      Executing mappings...
                                        - CODE:  - node: simple_expression (kind) - Result: 'CHANGED' 

                                    - IF detected...true!
                                    - OPERATION_CREATION: astm::gastm::Equal created

                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                              RULE: mapAssignment... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                  Query value with 1 result nodes - CONTENT : [r ]
                                  Query as with 1 result nodes - CONTENT in line 5: [r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                  Query st with 1 result nodes - CONTENT : [r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - CODE:  - node: lvalue (kind) - Result: r
                                  - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipToExprAdd... executing!
                                    Skip Rule skipToExprAdd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAllArithmeticRules... executing!
                                    Skip Rule skipAllArithmeticRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                      Query s with 1 result nodes - CONTENT : [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                      Query cast2 with 1 result nodes - CONTENT : [alerta ]
                                      Query cast1 with 1 result nodes - CONTENT : [alerta ]
                                      Query dec with 0 result nodes
                                      Query s with 1 result nodes - CONTENT in line 5: [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                      Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
                                      Query iden with 1 result nodes - CONTENT in line 5: [alerta ]
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 6 result nodes
                                        Query params with 6 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 5: [alerta ]
                                        Query fc with 1 result nodes - CONTENT in line 5: [alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - alerta (value) 
                                        - QUERY_RESULT: 6 bindings:
                                          (1/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['?' ]
                                              Query expA with 1 result nodes - CONTENT : ['?' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['?' ]
                                                    Query s with 1 result nodes - CONTENT : ['?' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['?' ]
                                                    Query s with 1 result nodes - CONTENT : ['?' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['?' ]
                                                    Query s with 1 result nodes - CONTENT : ['?' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['?' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['?' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: '?' 


                                          (2/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Salida' ]
                                              Query expA with 1 result nodes - CONTENT : ['Salida' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Salida' ]
                                                    Query s with 1 result nodes - CONTENT : ['Salida' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Salida' ]
                                                    Query s with 1 result nodes - CONTENT : ['Salida' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Salida' ]
                                                    Query s with 1 result nodes - CONTENT : ['Salida' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Salida' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['Salida' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Salida' 


                                          (3/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                              Query expA with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                                    Query s with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                                    Query s with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                                    Query s with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['¿ Desea guardar los cambios realizados ?' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['¿ Desea guardar los cambios realizados ?' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: '¿ Desea guardar los cambios realizados ?' 


                                          (4/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Si' ]
                                              Query expA with 1 result nodes - CONTENT : ['Si' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                    Query s with 1 result nodes - CONTENT : ['Si' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                    Query s with 1 result nodes - CONTENT : ['Si' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                    Query s with 1 result nodes - CONTENT : ['Si' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Si' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['Si' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Si' 


                                          (5/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['No' ]
                                              Query expA with 1 result nodes - CONTENT : ['No' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No' ]
                                                    Query s with 1 result nodes - CONTENT : ['No' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No' ]
                                                    Query s with 1 result nodes - CONTENT : ['No' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['No' ]
                                                    Query s with 1 result nodes - CONTENT : ['No' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['No' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['No' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'No' 


                                          (6/6) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                          RULE: mapActualParameter... executing!
                                            Model Element astm::gastm::ActualParameterExpression created
                                            Executing queries...
                                              Query cp with 1 result nodes - CONTENT : ['Cancelar' ]
                                              Query expA with 1 result nodes - CONTENT : ['Cancelar' ]
                                              Query expB with 0 result nodes
                                              Query iden with 0 result nodes
                                            Executing mappings...
                                                - IF detected...true!
                                                - QUERY_RESULT: 1 bindings:
                                                  (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                  RULE: skipAllBooleanRules... executing!
                                                  Skip Rule skipAllBooleanRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipToExprAdd... executing!
                                                  Skip Rule skipToExprAdd executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: skipAllArithmeticRules... executing!
                                                  Skip Rule skipAllArithmeticRules executing...
                                                  Executing skip query...
                                                    Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                    Query s with 1 result nodes - CONTENT : ['Cancelar' ]
                                                  Locating skip query... skip located! 
                                                  Skipping to rule...
                                                  RULE: mapStringLiteral... executing!
                                                    Model Element astm::gastm::StringLiteral created
                                                    Executing queries...
                                                      Query exp with 1 result nodes - CONTENT : ['Cancelar' ]
                                                      Query st with 1 result nodes - CONTENT in line 5: ['Cancelar' ]
                                                    Executing mappings...
                                                      - CODE:  - node: simple_expression (kind) - Result: 'Cancelar' 




                              (2/2) result node: statement (kind). Rule... calling mapIf rule

                              RULE: mapIf... executing!
                                Model Element astm::gastm::IfStatement created
                                Executing queries...
                                  Query elseSt with 1 result nodes - CONTENT : [exit_form ( NO_COMMIT ) ]
                                  Query thenSt with 4 result nodes
                                  Query st with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ]
                                  Query cond with 2 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 ]
                                      Query s with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 6: [= ]
                                        Query exp with 1 result nodes - CONTENT : [r = ALERT_BUTTON1 ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 6: [= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [r ]
                                        Query expl2 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [r ]
                                            Query s with 1 result nodes - CONTENT : [r ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [r ]
                                            Query cast2 with 1 result nodes - CONTENT : [r ]
                                            Query cast1 with 1 result nodes - CONTENT : [r ]
                                            Query dec with 1 result nodes - CONTENT : [r number ; ]
                                            Query s with 1 result nodes - CONTENT : [r ]
                                            Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
                                            Query iden with 1 result nodes - CONTENT in line 6: [r ]
                                          - IF detected...true!
                                          - IF detected...true!
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                            Query s with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                            Query cast2 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                            Query cast1 with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                            Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
                                            Query iden with 1 result nodes - CONTENT in line 6: [ALERT_BUTTON1 ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 6: [ALERT_BUTTON1 ]
                                              Query fc with 1 result nodes - CONTENT : [ALERT_BUTTON1 ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - ALERT_BUTTON1 (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created

                                    (2/2) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                    RULE: skipAllBooleanRules... executing!
                                    Skip Rule skipAllBooleanRules executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [r = ALERT_BUTTON2 ]
                                      Query s with 1 result nodes - CONTENT : [r = ALERT_BUTTON2 ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapBinaryExpressionRelational... executing!
                                      Model Element astm::gastm::BinaryExpression created
                                      Executing queries...
                                        Query eqOp with 1 result nodes - CONTENT in line 11: [= ]
                                        Query exp with 1 result nodes - CONTENT : [r = ALERT_BUTTON2 ]
                                        Query gthOp with 0 result nodes
                                        Query orOp with 0 result nodes
                                        Query op with 1 result nodes - CONTENT in line 11: [= ]
                                        Query geqOp with 0 result nodes
                                        Query expl1 with 1 result nodes - CONTENT : [r ]
                                        Query expl2 with 1 result nodes - CONTENT : [ALERT_BUTTON2 ]
                                        Query leqOp with 0 result nodes
                                        Query notEqOp with 0 result nodes
                                        Query lthOp with 0 result nodes
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [r ]
                                            Query s with 1 result nodes - CONTENT : [r ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [r ]
                                            Query cast2 with 1 result nodes - CONTENT : [r ]
                                            Query cast1 with 1 result nodes - CONTENT : [r ]
                                            Query dec with 1 result nodes - CONTENT : [r number ; ]
                                            Query s with 1 result nodes - CONTENT : [r ]
                                            Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
                                            Query iden with 1 result nodes - CONTENT in line 11: [r ]
                                          - IF detected...true!
                                          - IF detected...true!
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON2 ]
                                            Query s with 1 result nodes - CONTENT : [ALERT_BUTTON2 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                          Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [ALERT_BUTTON2 ]
                                            Query cast2 with 1 result nodes - CONTENT : [ALERT_BUTTON2 ]
                                            Query cast1 with 1 result nodes - CONTENT : [ALERT_BUTTON2 ]
                                            Query dec with 0 result nodes
                                            Query s with 1 result nodes - CONTENT : [ALERT_BUTTON2 ]
                                            Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
                                            Query iden with 1 result nodes - CONTENT in line 11: [ALERT_BUTTON2 ]
                                          - IF detected...false! executing ELSE part 
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 11: [ALERT_BUTTON2 ]
                                              Query fc with 1 result nodes - CONTENT : [ALERT_BUTTON2 ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - ALERT_BUTTON2 (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                          - IF detected...true!
                                          - OPERATION_CREATION: astm::gastm::Equal created

                                  - QUERY_RESULT: 4 bindings:
                                    (1/4) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [15 ]
                                        Query value with 1 result nodes - CONTENT in line 7: [: SYSTEM . MESSAGE_LEVEL ]
                                        Query as with 1 result nodes - CONTENT in line 7: [: SYSTEM . MESSAGE_LEVEL := 15 ]
                                        Query st with 1 result nodes - CONTENT : [: SYSTEM . MESSAGE_LEVEL := 15 ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :SYSTEM.MESSAGE_LEVEL
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [15 ]
                                            Query s with 1 result nodes - CONTENT : [15 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [15 ]
                                            Query s with 1 result nodes - CONTENT : [15 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [15 ]
                                            Query s with 1 result nodes - CONTENT : [15 ]
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                    (2/4) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 8: [do_key ( 'commit_form' ) ]
                                        Query st with 1 result nodes - CONTENT : [do_key ( 'commit_form' ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                              Query params with 1 result nodes - CONTENT : ['commit_form' ]
                                              Query iden with 1 result nodes - CONTENT in line 8: [do_key ]
                                              Query fc with 1 result nodes - CONTENT in line 8: [do_key ( 'commit_form' ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - do_key (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : ['commit_form' ]
                                                    Query expA with 1 result nodes - CONTENT : ['commit_form' ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                                          Query s with 1 result nodes - CONTENT : ['commit_form' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                                          Query s with 1 result nodes - CONTENT : ['commit_form' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                                          Query s with 1 result nodes - CONTENT : ['commit_form' ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapStringLiteral... executing!
                                                          Model Element astm::gastm::StringLiteral created
                                                          Executing queries...
                                                            Query exp with 1 result nodes - CONTENT : ['commit_form' ]
                                                            Query st with 1 result nodes - CONTENT in line 8: ['commit_form' ]
                                                          Executing mappings...
                                                            - CODE:  - node: simple_expression (kind) - Result: 'commit_form' 




                                    (3/4) result node: statement (kind). Rule... calling mapAssignment rule

                                    RULE: mapAssignment... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [0 ]
                                        Query value with 1 result nodes - CONTENT in line 9: [: SYSTEM . MESSAGE_LEVEL ]
                                        Query as with 1 result nodes - CONTENT in line 9: [: SYSTEM . MESSAGE_LEVEL := 0 ]
                                        Query st with 1 result nodes - CONTENT : [: SYSTEM . MESSAGE_LEVEL := 0 ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::BinaryExpression created
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - CODE:  - node: lvalue (kind) - Result: :SYSTEM.MESSAGE_LEVEL
                                        - OPERATION_CREATION: astm::gastm::OperatorAssign created
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                          RULE: skipAllBooleanRules... executing!
                                          Skip Rule skipAllBooleanRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [0 ]
                                            Query s with 1 result nodes - CONTENT : [0 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipToExprAdd... executing!
                                          Skip Rule skipToExprAdd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [0 ]
                                            Query s with 1 result nodes - CONTENT : [0 ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAllArithmeticRules... executing!
                                          Skip Rule skipAllArithmeticRules executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [0 ]
                                            Query s with 1 result nodes - CONTENT : [0 ]
                                          Locating skip query... skip located! SKIP RULE NOT LOCATED!

                                    (4/4) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT : [exit_form ]
                                        Query st with 1 result nodes - CONTENT : [exit_form ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 0 result nodes
                                              Query params with 0 result nodes
                                              Query iden with 1 result nodes - CONTENT in line 10: [exit_form ]
                                              Query fc with 1 result nodes - CONTENT : [exit_form ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - exit_form (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::ExpressionStatement created
                                      Executing queries...
                                        Query f with 1 result nodes - CONTENT in line 12: [exit_form ( NO_COMMIT ) ]
                                        Query st with 1 result nodes - CONTENT : [exit_form ( NO_COMMIT ) ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                          RULE: mapFunctionCall... executing!
                                            Model Element astm::gastm::FunctionCallExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [NO_COMMIT ]
                                              Query params with 1 result nodes - CONTENT : [NO_COMMIT ]
                                              Query iden with 1 result nodes - CONTENT in line 12: [exit_form ]
                                              Query fc with 1 result nodes - CONTENT in line 12: [exit_form ( NO_COMMIT ) ]
                                            Executing mappings...
                                              - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                              - OPERATION_CREATION: astm::gastm::Name created
                                              - QUERY_ACCESS: variable: iden - 
                                                node: identifier (kind) - leaf: ID (kind) - exit_form (value) 
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                                RULE: mapActualParameter... executing!
                                                  Model Element astm::gastm::ActualParameterExpression created
                                                  Executing queries...
                                                    Query cp with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                    Query expA with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                    Query expB with 0 result nodes
                                                    Query iden with 0 result nodes
                                                  Executing mappings...
                                                      - IF detected...true!
                                                      - QUERY_RESULT: 1 bindings:
                                                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                        RULE: skipAllBooleanRules... executing!
                                                        Skip Rule skipAllBooleanRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                          Query s with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipToExprAdd... executing!
                                                        Skip Rule skipToExprAdd executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                          Query s with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: skipAllArithmeticRules... executing!
                                                        Skip Rule skipAllArithmeticRules executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                          Query s with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                        Executing skip query...
                                                          Query exp with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                          Query cast2 with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                          Query cast1 with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                          Query dec with 0 result nodes
                                                          Query s with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                          Query block with 1 result nodes - CONTENT in line 3: [Declare r number ; Begin : SYSTEM . FORM_STATUS = 'CHANGED' THEN r := alerta ( '?' , 'Salida' , '¿ Desea guardar los cambios realizados ?' , 'Si' , 'No' , 'Cancelar' ) ; r = ALERT_BUTTON1 then : SYSTEM . MESSAGE_LEVEL := 15 ; do_key ( 'commit_form' ) ; : SYSTEM . MESSAGE_LEVEL := 0 ; exit_form ; Elsif r = ALERT_BUTTON2 then exit_form ( NO_COMMIT ) ; End if ; ELSE exit_form ; END IF ; End ]
                                                          Query iden with 1 result nodes - CONTENT in line 12: [NO_COMMIT ]
                                                        - IF detected...false! executing ELSE part 
                                                        Locating skip query... skip located! 
                                                        Skipping to rule...
                                                        RULE: mapFunctionCall... executing!
                                                          Model Element astm::gastm::FunctionCallExpression created
                                                          Executing queries...
                                                            Query exp with 0 result nodes
                                                            Query params with 0 result nodes
                                                            Query iden with 1 result nodes - CONTENT in line 12: [NO_COMMIT ]
                                                            Query fc with 1 result nodes - CONTENT : [NO_COMMIT ]
                                                          Executing mappings...
                                                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                            - OPERATION_CREATION: astm::gastm::Name created
                                                            - QUERY_ACCESS: variable: iden - 
                                                              node: identifier (kind) - leaf: ID (kind) - NO_COMMIT (value) 
                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST





                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::ExpressionStatement created
                                Executing queries...
                                  Query f with 1 result nodes - CONTENT : [exit_form ]
                                  Query st with 1 result nodes - CONTENT : [exit_form ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                                    RULE: mapFunctionCall... executing!
                                      Model Element astm::gastm::FunctionCallExpression created
                                      Executing queries...
                                        Query exp with 0 result nodes
                                        Query params with 0 result nodes
                                        Query iden with 1 result nodes - CONTENT in line 15: [exit_form ]
                                        Query fc with 1 result nodes - CONTENT : [exit_form ]
                                      Executing mappings...
                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                        - OPERATION_CREATION: astm::gastm::Name created
                                        - QUERY_ACCESS: variable: iden - 
                                          node: identifier (kind) - leaf: ID (kind) - exit_form (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (84/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block CALENDARIO WHEN-MOUSE-DOUBLECLICK NULL ; ]
                Query stats with 1 result nodes - CONTENT : [NULL ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-DOUBLECLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (85/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block CALENDARIO WHEN-MOUSE-CLICK date_lov . date_click ; ]
                Query stats with 1 result nodes - CONTENT : [date_lov . date_click ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT : [date_lov . date_click ]
                      Query st with 1 result nodes - CONTENT : [date_lov . date_click ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 0 result nodes
                            Query params with 0 result nodes
                            Query iden with 2 result nodes
                            Query fc with 1 result nodes - CONTENT : [date_lov . date_click ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                              node: identifier (kind) - leaf: ID (kind) - date_click (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST



            (86/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Block CALENDARIO KEY-OTHERS NULL ; ]
                Query stats with 1 result nodes - CONTENT : [NULL ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - KEY-OTHERS (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (87/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item OK_BUTTON WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (88/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item OK_BUTTON WHEN-BUTTON-PRESSED copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ; go_item ( date_lov . date_lov_return_item ) ; date_lov . lov_auto_skip = TRUE then next_item ; end if ; ]
                Query stats with 3 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 3 bindings:
                  (1/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ]
                      Query st with 1 result nodes - CONTENT : [copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 2 result nodes
                            Query params with 2 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [copy ]
                            Query fc with 1 result nodes - CONTENT in line 1: [copy ( to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) , date_lov . date_lov_return_item ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - copy (value) 
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                  Query expA with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                        Query s with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                        Query s with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                        Query s with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                        Query cast2 with 3 result nodes
                                        Query cast1 with 3 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT in line 1: [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                        Query block with 0 result nodes
                                        Query iden with 3 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 2 result nodes
                                          Query params with 2 result nodes
                                          Query iden with 1 result nodes - CONTENT in line 1: [to_char ]
                                          Query fc with 1 result nodes - CONTENT in line 1: [to_char ( date_lov . current_lov_date , 'dd-mon-yyyy' ) ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - to_char (value) 
                                          - QUERY_RESULT: 2 bindings:
                                            (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                            RULE: mapActualParameter... executing!
                                              Model Element astm::gastm::ActualParameterExpression created
                                              Executing queries...
                                                Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                Query expB with 0 result nodes
                                                Query iden with 0 result nodes
                                              Executing mappings...
                                                  - IF detected...true!
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                    RULE: skipAllBooleanRules... executing!
                                                    Skip Rule skipAllBooleanRules executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                      Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipToExprAdd... executing!
                                                    Skip Rule skipToExprAdd executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                      Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAllArithmeticRules... executing!
                                                    Skip Rule skipAllArithmeticRules executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                      Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                                    Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                      Query cast2 with 2 result nodes
                                                      Query cast1 with 0 result nodes
                                                      Query dec with 0 result nodes
                                                      Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                      Query block with 0 result nodes
                                                      Query iden with 2 result nodes
                                                    - IF detected...false! executing ELSE part 
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: mapFunctionCall... executing!
                                                      Model Element astm::gastm::FunctionCallExpression created
                                                      Executing queries...
                                                        Query exp with 0 result nodes
                                                        Query params with 0 result nodes
                                                        Query iden with 2 result nodes
                                                        Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                                      Executing mappings...
                                                        - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                                        - OPERATION_CREATION: astm::gastm::Name created
                                                        - QUERY_ACCESS: variable: iden - 
                                                          node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                                          node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                            (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                                            RULE: mapActualParameter... executing!
                                              Model Element astm::gastm::ActualParameterExpression created
                                              Executing queries...
                                                Query cp with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                Query expA with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                Query expB with 0 result nodes
                                                Query iden with 0 result nodes
                                              Executing mappings...
                                                  - IF detected...true!
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                                    RULE: skipAllBooleanRules... executing!
                                                    Skip Rule skipAllBooleanRules executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                      Query s with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipToExprAdd... executing!
                                                    Skip Rule skipToExprAdd executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                      Query s with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAllArithmeticRules... executing!
                                                    Skip Rule skipAllArithmeticRules executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                      Query s with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: mapStringLiteral... executing!
                                                      Model Element astm::gastm::StringLiteral created
                                                      Executing queries...
                                                        Query exp with 1 result nodes - CONTENT : ['dd-mon-yyyy' ]
                                                        Query st with 1 result nodes - CONTENT in line 1: ['dd-mon-yyyy' ]
                                                      Executing mappings...
                                                        - CODE:  - node: simple_expression (kind) - Result: 'dd-mon-yyyy' 




                              (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 2 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov_return_item (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST




                  (2/3) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 2: [go_item ( date_lov . date_lov_return_item ) ]
                      Query st with 1 result nodes - CONTENT : [go_item ( date_lov . date_lov_return_item ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                            Query params with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                            Query iden with 1 result nodes - CONTENT in line 2: [go_item ]
                            Query fc with 1 result nodes - CONTENT in line 2: [go_item ( date_lov . date_lov_return_item ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - go_item (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 2 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov_return_item (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST




                  (3/3) result node: statement (kind). Rule... calling mapIf rule

                  RULE: mapIf... executing!
                    Model Element astm::gastm::IfStatement created
                    Executing queries...
                      Query elseSt with 0 result nodes
                      Query thenSt with 1 result nodes - CONTENT : [next_item ]
                      Query st with 1 result nodes - CONTENT : [date_lov . lov_auto_skip = TRUE then next_item ; end if ]
                      Query cond with 1 result nodes - CONTENT : [date_lov . lov_auto_skip = TRUE ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [date_lov . lov_auto_skip = TRUE ]
                          Query s with 1 result nodes - CONTENT : [date_lov . lov_auto_skip = TRUE ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapBinaryExpressionRelational... executing!
                          Model Element astm::gastm::BinaryExpression created
                          Executing queries...
                            Query eqOp with 1 result nodes - CONTENT in line 3: [= ]
                            Query exp with 1 result nodes - CONTENT : [date_lov . lov_auto_skip = TRUE ]
                            Query gthOp with 0 result nodes
                            Query orOp with 0 result nodes
                            Query op with 1 result nodes - CONTENT in line 3: [= ]
                            Query geqOp with 0 result nodes
                            Query expl1 with 1 result nodes - CONTENT : [date_lov . lov_auto_skip ]
                            Query expl2 with 1 result nodes - CONTENT : [TRUE ]
                            Query leqOp with 0 result nodes
                            Query notEqOp with 0 result nodes
                            Query lthOp with 0 result nodes
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [date_lov . lov_auto_skip ]
                                Query s with 1 result nodes - CONTENT : [date_lov . lov_auto_skip ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                              Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [date_lov . lov_auto_skip ]
                                Query cast2 with 2 result nodes
                                Query cast1 with 2 result nodes
                                Query dec with 0 result nodes
                                Query s with 1 result nodes - CONTENT : [date_lov . lov_auto_skip ]
                                Query block with 0 result nodes
                                Query iden with 2 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 2 result nodes
                                  Query fc with 1 result nodes - CONTENT : [date_lov . lov_auto_skip ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                    node: identifier (kind) - leaf: ID (kind) - lov_auto_skip (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expr_add (kind). Rule... calling skipAllArithmeticRules rule

                              RULE: skipAllArithmeticRules... executing!
                              Skip Rule skipAllArithmeticRules executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [TRUE ]
                                Query s with 1 result nodes - CONTENT : [TRUE ]
                              Locating skip query... skip located! SKIP RULE NOT LOCATED!
                              - IF detected...true!
                              - OPERATION_CREATION: astm::gastm::Equal created

                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::ExpressionStatement created
                          Executing queries...
                            Query f with 1 result nodes - CONTENT : [next_item ]
                            Query st with 1 result nodes - CONTENT : [next_item ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                              RULE: mapFunctionCall... executing!
                                Model Element astm::gastm::FunctionCallExpression created
                                Executing queries...
                                  Query exp with 0 result nodes
                                  Query params with 0 result nodes
                                  Query iden with 1 result nodes - CONTENT in line 4: [next_item ]
                                  Query fc with 1 result nodes - CONTENT : [next_item ]
                                Executing mappings...
                                  - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                  - OPERATION_CREATION: astm::gastm::Name created
                                  - QUERY_ACCESS: variable: iden - 
                                    node: identifier (kind) - leaf: ID (kind) - next_item (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST


            (89/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item CANCEL_BUTTON WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (90/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item CANCEL_BUTTON WHEN-BUTTON-PRESSED go_item ( date_lov . date_lov_return_item ) ; ]
                Query stats with 1 result nodes - CONTENT : [go_item ( date_lov . date_lov_return_item ) ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 1: [go_item ( date_lov . date_lov_return_item ) ]
                      Query st with 1 result nodes - CONTENT : [go_item ( date_lov . date_lov_return_item ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                            Query params with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                            Query iden with 1 result nodes - CONTENT in line 1: [go_item ]
                            Query fc with 1 result nodes - CONTENT in line 1: [go_item ( date_lov . date_lov_return_item ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - go_item (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 2 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . date_lov_return_item ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov_return_item (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (91/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item MONTH_PLUS1 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (92/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item MONTH_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; ]
                Query stats with 2 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                  RULE: mapAssignment... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 1 ) ]
                      Query value with 1 result nodes - CONTENT in line 1: [date_lov . current_lov_date ]
                      Query as with 1 result nodes - CONTENT in line 1: [date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ]
                      Query st with 1 result nodes - CONTENT : [date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 1 ) ]
                    Executing mappings...
                      - OPERATION_CREATION: astm::gastm::BinaryExpression created
                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                      - OPERATION_CREATION: astm::gastm::Name created
                      - CODE:  - node: lvalue (kind) - Result: date_lov.current_lov_date
                      - OPERATION_CREATION: astm::gastm::OperatorAssign created
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 1 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 1 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipToExprAdd... executing!
                        Skip Rule skipToExprAdd executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 1 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 1 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipAllArithmeticRules... executing!
                        Skip Rule skipAllArithmeticRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 1 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 1 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 1 ) ]
                          Query cast2 with 3 result nodes
                          Query cast1 with 3 result nodes
                          Query dec with 0 result nodes
                          Query s with 1 result nodes - CONTENT in line 1: [add_months ( date_lov . current_lov_date , 1 ) ]
                          Query block with 0 result nodes
                          Query iden with 3 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 2 result nodes
                            Query params with 2 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [add_months ]
                            Query fc with 1 result nodes - CONTENT in line 1: [add_months ( date_lov . current_lov_date , 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - add_months (value) 
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 0 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [1 ]
                                  Query expA with 1 result nodes - CONTENT : [1 ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [1 ]
                                        Query s with 1 result nodes - CONTENT : [1 ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [1 ]
                                        Query s with 1 result nodes - CONTENT : [1 ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [1 ]
                                        Query s with 1 result nodes - CONTENT : [1 ]
                                      Locating skip query... skip located! SKIP RULE NOT LOCATED!



                  (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 2: [date_lov . display_cal ( date_lov . current_lov_date ) ]
                      Query st with 1 result nodes - CONTENT : [date_lov . display_cal ( date_lov . current_lov_date ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                            Query params with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                            Query iden with 2 result nodes
                            Query fc with 1 result nodes - CONTENT in line 2: [date_lov . display_cal ( date_lov . current_lov_date ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                              node: identifier (kind) - leaf: ID (kind) - display_cal (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 2 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (93/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item YEAR_PLUS1 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (94/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item YEAR_PLUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; ]
                Query stats with 2 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                  RULE: mapAssignment... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 12 ) ]
                      Query value with 1 result nodes - CONTENT in line 1: [date_lov . current_lov_date ]
                      Query as with 1 result nodes - CONTENT in line 1: [date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ]
                      Query st with 1 result nodes - CONTENT : [date_lov . current_lov_date := add_months ( date_lov . current_lov_date , 12 ) ]
                    Executing mappings...
                      - OPERATION_CREATION: astm::gastm::BinaryExpression created
                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                      - OPERATION_CREATION: astm::gastm::Name created
                      - CODE:  - node: lvalue (kind) - Result: date_lov.current_lov_date
                      - OPERATION_CREATION: astm::gastm::OperatorAssign created
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 12 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 12 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipToExprAdd... executing!
                        Skip Rule skipToExprAdd executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 12 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 12 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipAllArithmeticRules... executing!
                        Skip Rule skipAllArithmeticRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 12 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 12 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , 12 ) ]
                          Query cast2 with 3 result nodes
                          Query cast1 with 3 result nodes
                          Query dec with 0 result nodes
                          Query s with 1 result nodes - CONTENT in line 1: [add_months ( date_lov . current_lov_date , 12 ) ]
                          Query block with 0 result nodes
                          Query iden with 3 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 2 result nodes
                            Query params with 2 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [add_months ]
                            Query fc with 1 result nodes - CONTENT in line 1: [add_months ( date_lov . current_lov_date , 12 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - add_months (value) 
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 0 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [12 ]
                                  Query expA with 1 result nodes - CONTENT : [12 ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [12 ]
                                        Query s with 1 result nodes - CONTENT : [12 ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [12 ]
                                        Query s with 1 result nodes - CONTENT : [12 ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [12 ]
                                        Query s with 1 result nodes - CONTENT : [12 ]
                                      Locating skip query... skip located! SKIP RULE NOT LOCATED!



                  (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 2: [date_lov . display_cal ( date_lov . current_lov_date ) ]
                      Query st with 1 result nodes - CONTENT : [date_lov . display_cal ( date_lov . current_lov_date ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                            Query params with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                            Query iden with 2 result nodes
                            Query fc with 1 result nodes - CONTENT in line 2: [date_lov . display_cal ( date_lov . current_lov_date ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                              node: identifier (kind) - leaf: ID (kind) - display_cal (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 2 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (95/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item YEAR_MINUS1 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (96/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item YEAR_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; ]
                Query stats with 2 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                  RULE: mapAssignment... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 12 ) ]
                      Query value with 1 result nodes - CONTENT in line 1: [date_lov . current_lov_date ]
                      Query as with 1 result nodes - CONTENT in line 1: [date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ]
                      Query st with 1 result nodes - CONTENT : [date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 12 ) ]
                    Executing mappings...
                      - OPERATION_CREATION: astm::gastm::BinaryExpression created
                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                      - OPERATION_CREATION: astm::gastm::Name created
                      - CODE:  - node: lvalue (kind) - Result: date_lov.current_lov_date
                      - OPERATION_CREATION: astm::gastm::OperatorAssign created
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 12 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 12 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipToExprAdd... executing!
                        Skip Rule skipToExprAdd executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 12 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 12 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipAllArithmeticRules... executing!
                        Skip Rule skipAllArithmeticRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 12 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 12 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 12 ) ]
                          Query cast2 with 3 result nodes
                          Query cast1 with 3 result nodes
                          Query dec with 0 result nodes
                          Query s with 1 result nodes - CONTENT in line 1: [add_months ( date_lov . current_lov_date , - 12 ) ]
                          Query block with 0 result nodes
                          Query iden with 3 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 2 result nodes
                            Query params with 2 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [add_months ]
                            Query fc with 1 result nodes - CONTENT in line 1: [add_months ( date_lov . current_lov_date , - 12 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - add_months (value) 
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 0 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [- 12 ]
                                  Query expA with 1 result nodes - CONTENT : [- 12 ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [- 12 ]
                                        Query s with 1 result nodes - CONTENT : [- 12 ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [- 12 ]
                                        Query s with 1 result nodes - CONTENT : [- 12 ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprMul... executing!
                                      Skip Rule skipToExprMul executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [- 12 ]
                                        Query s with 1 result nodes - CONTENT : [- 12 ]
                                      Locating skip query... skip located! 
                                      Problem finding metaclass...SKIP RULE NOT LOCATED!



                  (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 2: [date_lov . display_cal ( date_lov . current_lov_date ) ]
                      Query st with 1 result nodes - CONTENT : [date_lov . display_cal ( date_lov . current_lov_date ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                            Query params with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                            Query iden with 2 result nodes
                            Query fc with 1 result nodes - CONTENT in line 2: [date_lov . display_cal ( date_lov . current_lov_date ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                              node: identifier (kind) - leaf: ID (kind) - display_cal (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 2 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (97/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item MONTH_MINUS1 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (98/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item MONTH_MINUS1 WHEN-BUTTON-PRESSED date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ; date_lov . display_cal ( date_lov . current_lov_date ) ; ]
                Query stats with 2 result nodes
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-BUTTON-PRESSED (value) 
                - QUERY_RESULT: 2 bindings:
                  (1/2) result node: statement (kind). Rule... calling mapAssignment rule

                  RULE: mapAssignment... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 1 ) ]
                      Query value with 1 result nodes - CONTENT in line 1: [date_lov . current_lov_date ]
                      Query as with 1 result nodes - CONTENT in line 1: [date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ]
                      Query st with 1 result nodes - CONTENT : [date_lov . current_lov_date := add_months ( date_lov . current_lov_date , - 1 ) ]
                    Executing mappings...
                      - OPERATION_CREATION: astm::gastm::BinaryExpression created
                      - OPERATION_CREATION: astm::gastm::IdentifierReference created
                      - OPERATION_CREATION: astm::gastm::Name created
                      - CODE:  - node: lvalue (kind) - Result: date_lov.current_lov_date
                      - OPERATION_CREATION: astm::gastm::OperatorAssign created
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                        RULE: skipAllBooleanRules... executing!
                        Skip Rule skipAllBooleanRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 1 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 1 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipToExprAdd... executing!
                        Skip Rule skipToExprAdd executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 1 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 1 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: skipAllArithmeticRules... executing!
                        Skip Rule skipAllArithmeticRules executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 1 ) ]
                          Query s with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 1 ) ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                        Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                        Executing skip query...
                          Query exp with 1 result nodes - CONTENT : [add_months ( date_lov . current_lov_date , - 1 ) ]
                          Query cast2 with 3 result nodes
                          Query cast1 with 3 result nodes
                          Query dec with 0 result nodes
                          Query s with 1 result nodes - CONTENT in line 1: [add_months ( date_lov . current_lov_date , - 1 ) ]
                          Query block with 0 result nodes
                          Query iden with 3 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 2 result nodes
                            Query params with 2 result nodes
                            Query iden with 1 result nodes - CONTENT in line 1: [add_months ]
                            Query fc with 1 result nodes - CONTENT in line 1: [add_months ( date_lov . current_lov_date , - 1 ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - add_months (value) 
                            - QUERY_RESULT: 2 bindings:
                              (1/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 0 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                              (2/2) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [- 1 ]
                                  Query expA with 1 result nodes - CONTENT : [- 1 ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [- 1 ]
                                        Query s with 1 result nodes - CONTENT : [- 1 ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [- 1 ]
                                        Query s with 1 result nodes - CONTENT : [- 1 ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprMul... executing!
                                      Skip Rule skipToExprMul executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [- 1 ]
                                        Query s with 1 result nodes - CONTENT : [- 1 ]
                                      Locating skip query... skip located! 
                                      Problem finding metaclass...SKIP RULE NOT LOCATED!



                  (2/2) result node: statement (kind). Rule... calling mapFunctionCall rule

                  RULE: mapFunctionCall... executing!
                    Model Element astm::gastm::ExpressionStatement created
                    Executing queries...
                      Query f with 1 result nodes - CONTENT in line 2: [date_lov . display_cal ( date_lov . current_lov_date ) ]
                      Query st with 1 result nodes - CONTENT : [date_lov . display_cal ( date_lov . current_lov_date ) ]
                    Executing mappings...
                      - QUERY_RESULT: 1 bindings:
                        (1/1) result node: function_call (kind). Rule... calling mapFunctionCall rule

                        RULE: mapFunctionCall... executing!
                          Model Element astm::gastm::FunctionCallExpression created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                            Query params with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                            Query iden with 2 result nodes
                            Query fc with 1 result nodes - CONTENT in line 2: [date_lov . display_cal ( date_lov . current_lov_date ) ]
                          Executing mappings...
                            - OPERATION_CREATION: astm::gastm::IdentifierReference created
                            - OPERATION_CREATION: astm::gastm::Name created
                            - QUERY_ACCESS: variable: iden - 
                              node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                              node: identifier (kind) - leaf: ID (kind) - display_cal (value) 
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: call_parameter (kind). Rule... calling mapActualParameter rule

                              RULE: mapActualParameter... executing!
                                Model Element astm::gastm::ActualParameterExpression created
                                Executing queries...
                                  Query cp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expA with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                  Query expB with 0 result nodes
                                  Query iden with 0 result nodes
                                Executing mappings...
                                    - IF detected...true!
                                    - QUERY_RESULT: 1 bindings:
                                      (1/1) result node: expr_bool (kind). Rule... calling skipAllBooleanRules rule

                                      RULE: skipAllBooleanRules... executing!
                                      Skip Rule skipAllBooleanRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipToExprAdd... executing!
                                      Skip Rule skipToExprAdd executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: skipAllArithmeticRules... executing!
                                      Skip Rule skipAllArithmeticRules executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: createFunctionCallFromExprAddFunctionExpr... executing!
                                      Skip Rule createFunctionCallFromExprAddFunctionExpr executing...
                                      Executing skip query...
                                        Query exp with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query cast2 with 2 result nodes
                                        Query cast1 with 2 result nodes
                                        Query dec with 0 result nodes
                                        Query s with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Query block with 0 result nodes
                                        Query iden with 2 result nodes
                                      - IF detected...false! executing ELSE part 
                                      Locating skip query... skip located! 
                                      Skipping to rule...
                                      RULE: mapFunctionCall... executing!
                                        Model Element astm::gastm::FunctionCallExpression created
                                        Executing queries...
                                          Query exp with 0 result nodes
                                          Query params with 0 result nodes
                                          Query iden with 2 result nodes
                                          Query fc with 1 result nodes - CONTENT : [date_lov . current_lov_date ]
                                        Executing mappings...
                                          - OPERATION_CREATION: astm::gastm::IdentifierReference created
                                          - OPERATION_CREATION: astm::gastm::Name created
                                          - QUERY_ACCESS: variable: iden - 
                                            node: identifier (kind) - leaf: ID (kind) - date_lov (value) 
                                            node: identifier (kind) - leaf: ID (kind) - current_lov_date (value) 
                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST





            (99/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DISPLAY_MON_YEAR WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (100/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DAY_LABEL1 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (101/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DAY_LABEL2 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (102/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DAY_LABEL3 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (103/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DAY_LABEL4 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (104/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DAY_LABEL5 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (105/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DAY_LABEL6 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body

            (106/106) result node: Trigger (kind). Rule... calling mapCompilationUnit rule

            RULE: mapCompilationUnit... executing!
              Model Element astm::sastm::RDBTrigger created
              Executing queries...
                Query t with 1 result nodes - CONTENT in line 0: [Item DAY_LABEL7 WHEN-MOUSE-CLICK null ; ]
                Query stats with 1 result nodes - CONTENT : [null ]
              Executing mappings...
                - OPERATION_CREATION: astm::gastm::Name created
                - QUERY_ACCESS: variable: t - 
                  node: Trigger (kind) - leaf: trigger_name (kind) - WHEN-MOUSE-CLICK (value) 
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: statement (kind). Rule... RULE NOT FOUND!  FROM: statement TO: body




Saving...