/**
  * 101 Companies grammar modified to consider mentors (Gra2MoL example)
  * Contributor: Javier Canovas (javier.canovas@inria.fr)
  */

grammar Company;

options {
  k = 1;

	output=template;
}


// Autogenerated import
@header {
	import gts.modernization.model.CST.impl.*;
	import gts.modernization.model.CST.*;
	import java.util.Iterator;
}

// Rules
company returns [Node returnNode] 
:
  TK_0='company' STRINGGen=STRING TK_1='{' departmentGen+=department* TK_2='}' EOFGen=EOF 
	{
		// Create return CST Node
		Node companyReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		companyReturnNode.setKind("company");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		companyReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Leaf
		if($STRINGGen != null) {
			Leaf STRINGGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			STRINGGenLeaf.setKind("STRING");
			STRINGGenLeaf.setValue($STRINGGen.text);
			STRINGGenLeaf.setPos(STRINGGen.getCharPositionInLine());
			STRINGGenLeaf.setLine(STRINGGen.getLine());
			companyReturnNode.getChildren().add(STRINGGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		companyReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Node
		if($departmentGen != null) {
	        for(Iterator it = $departmentGen.iterator(); it.hasNext(); )  { 
	            CompanyParser.department_return r = (CompanyParser.department_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("department");
	            	companyReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		companyReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($EOFGen != null) {
			Leaf EOFGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			EOFGenLeaf.setKind("EOF");
			EOFGenLeaf.setValue($EOFGen.text);
			EOFGenLeaf.setPos(EOFGen.getCharPositionInLine());
			EOFGenLeaf.setLine(EOFGen.getLine());
			companyReturnNode.getChildren().add(EOFGenLeaf);
		}
		// Returns the Node with CST Leaves/Nodes
		$company.returnNode = companyReturnNode;
	};
  
department returns [Node returnNode] 
:
  TK_0='department' STRINGGen=STRING TK_1='{' 
    department_managerGen+=department_manager
    department_employeesGen+=department_employees
    departmentGen+=department*
  TK_2='}' 
	{
		// Create return CST Node
		Node departmentReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		departmentReturnNode.setKind("department");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		departmentReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Leaf
		if($STRINGGen != null) {
			Leaf STRINGGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			STRINGGenLeaf.setKind("STRING");
			STRINGGenLeaf.setValue($STRINGGen.text);
			STRINGGenLeaf.setPos(STRINGGen.getCharPositionInLine());
			STRINGGenLeaf.setLine(STRINGGen.getLine());
			departmentReturnNode.getChildren().add(STRINGGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		departmentReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Node
		if($department_managerGen != null) {
	        for(Iterator it = $department_managerGen.iterator(); it.hasNext(); )  { 
	            CompanyParser.department_manager_return r = (CompanyParser.department_manager_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("department_manager");
	            	departmentReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a CST Node
		if($department_employeesGen != null) {
	        for(Iterator it = $department_employeesGen.iterator(); it.hasNext(); )  { 
	            CompanyParser.department_employees_return r = (CompanyParser.department_employees_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("department_employees");
	            	departmentReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a CST Node
		if($departmentGen != null) {
	        for(Iterator it = $departmentGen.iterator(); it.hasNext(); )  { 
	            CompanyParser.department_return r = (CompanyParser.department_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("department");
	            	departmentReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		departmentReturnNode.getChildren().add(TK_2Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$department.returnNode = departmentReturnNode;
	};

department_manager returns [Node returnNode] 
:
  TK_0='manager' employeeGen+=employee 
	{
		// Create return CST Node
		Node department_managerReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		department_managerReturnNode.setKind("department_manager");
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		department_managerReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a CST Node
		if($employeeGen != null) {
	        for(Iterator it = $employeeGen.iterator(); it.hasNext(); )  { 
	            CompanyParser.employee_return r = (CompanyParser.employee_return) it.next(); 
	            if(r != null && r.returnNode != null) {
	            	r.returnNode.setKind("employee");
	            	department_managerReturnNode.getChildren().add(r.returnNode);
	            } 
	        }
	    }
		// Returns the Node with CST Leaves/Nodes
		$department_manager.returnNode = department_managerReturnNode;
	};

department_employees returns [Node returnNode] 
:
  (TK_0='employee' employeeGen+=employee)* 
	{
		// Create return CST Node
		Node department_employeesReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		department_employeesReturnNode.setKind("department_employees");

		// Create a special CST Node for terminal employeeGen aggregation
		if($employeeGen != null) {
	    for(int pos = 0; pos < $employeeGen.size(); pos++ )  { 
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		department_employeesReturnNode.getChildren().add(TK_0Leaf);
	 	}
		// No Terminal extractor
	    if($employeeGen != null) {		
	    	CompanyParser.employee_return r = (CompanyParser.employee_return) $employeeGen.get(pos); 
	    	if(r != null && r.returnNode != null) {
	        	r.returnNode.setKind("employee");
	    		department_employeesReturnNode.getChildren().add(r.returnNode);
	    	} 
		}
		}
		}

		// Returns the Node with CST Leaves/Nodes
		$department_employees.returnNode = department_employeesReturnNode;
	} ;

employee returns [Node returnNode] 
:
  STRINGGen=STRING TK_0='{'
    TK_1='address' STRINGGen_1=STRING
    TK_2='salary' FLOATGen=FLOAT
    (TK_3='mentor' STRINGGen_2=STRING)?
  TK_4='}' 
	{
		// Create return CST Node
		Node employeeReturnNode = CSTFactoryImpl.eINSTANCE.createNode();
		employeeReturnNode.setKind("employee");
	    // Create a CST Leaf
		if($STRINGGen != null) {
			Leaf STRINGGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			STRINGGenLeaf.setKind("STRING");
			STRINGGenLeaf.setValue($STRINGGen.text);
			STRINGGenLeaf.setPos(STRINGGen.getCharPositionInLine());
			STRINGGenLeaf.setLine(STRINGGen.getLine());
			employeeReturnNode.getChildren().add(STRINGGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_0 != null) {
			Leaf TK_0Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_0Leaf.setKind("TOKEN");
	 		TK_0Leaf.setValue($TK_0.text);
			TK_0Leaf.setPos(TK_0.getCharPositionInLine());
			TK_0Leaf.setLine(TK_0.getLine());
	 		employeeReturnNode.getChildren().add(TK_0Leaf);
	 	}
	    // Create a Token CST Leaf	
	    if($TK_1 != null) {
			Leaf TK_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_1Leaf.setKind("TOKEN");
	 		TK_1Leaf.setValue($TK_1.text);
			TK_1Leaf.setPos(TK_1.getCharPositionInLine());
			TK_1Leaf.setLine(TK_1.getLine());
	 		employeeReturnNode.getChildren().add(TK_1Leaf);
	 	}
	    // Create a CST Leaf
		if($STRINGGen_1 != null) {
			Leaf STRINGGen_1Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			STRINGGen_1Leaf.setKind("STRING");
			STRINGGen_1Leaf.setValue($STRINGGen_1.text);
			STRINGGen_1Leaf.setPos(STRINGGen_1.getCharPositionInLine());
			STRINGGen_1Leaf.setLine(STRINGGen_1.getLine());
			employeeReturnNode.getChildren().add(STRINGGen_1Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_2 != null) {
			Leaf TK_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_2Leaf.setKind("TOKEN");
	 		TK_2Leaf.setValue($TK_2.text);
			TK_2Leaf.setPos(TK_2.getCharPositionInLine());
			TK_2Leaf.setLine(TK_2.getLine());
	 		employeeReturnNode.getChildren().add(TK_2Leaf);
	 	}
	    // Create a CST Leaf
		if($FLOATGen != null) {
			Leaf FLOATGenLeaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			FLOATGenLeaf.setKind("FLOAT");
			FLOATGenLeaf.setValue($FLOATGen.text);
			FLOATGenLeaf.setPos(FLOATGen.getCharPositionInLine());
			FLOATGenLeaf.setLine(FLOATGen.getLine());
			employeeReturnNode.getChildren().add(FLOATGenLeaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_3 != null) {
			Leaf TK_3Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_3Leaf.setKind("TOKEN");
	 		TK_3Leaf.setValue($TK_3.text);
			TK_3Leaf.setPos(TK_3.getCharPositionInLine());
			TK_3Leaf.setLine(TK_3.getLine());
	 		employeeReturnNode.getChildren().add(TK_3Leaf);
	 	}
	    // Create a CST Leaf
		if($STRINGGen_2 != null) {
			Leaf STRINGGen_2Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
			STRINGGen_2Leaf.setKind("STRING");
			STRINGGen_2Leaf.setValue($STRINGGen_2.text);
			STRINGGen_2Leaf.setPos(STRINGGen_2.getCharPositionInLine());
			STRINGGen_2Leaf.setLine(STRINGGen_2.getLine());
			employeeReturnNode.getChildren().add(STRINGGen_2Leaf);
		}
	    // Create a Token CST Leaf	
	    if($TK_4 != null) {
			Leaf TK_4Leaf = CSTFactoryImpl.eINSTANCE.createLeaf();
	 		TK_4Leaf.setKind("TOKEN");
	 		TK_4Leaf.setValue($TK_4.text);
			TK_4Leaf.setPos(TK_4.getCharPositionInLine());
			TK_4Leaf.setLine(TK_4.getLine());
	 		employeeReturnNode.getChildren().add(TK_4Leaf);
	 	}
		// Returns the Node with CST Leaves/Nodes
		$employee.returnNode = employeeReturnNode;
	};

STRING  :   '"' (~'"')* '"';
FLOAT   :   ('0'..'9')+ ('.' ('0'..'9')+)?;
WS      :   (' '|'\r'? '\n'|'\t')+ {skip();};
