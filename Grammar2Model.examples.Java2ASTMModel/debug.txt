GVQ Interpreter version 0.3

Executing...
Models created.
Initializing indexRules...
Initializing packages...
Initializing hashes...

Executing rules...
RULE: mapProject
RULE: mapProject... executing!
  Model Element Project created
  Executing queries...
    Query sf with 1 result nodes - CONTENT : [/Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionLogin.java ActionLogin.java package actionsstruts ; import beansstruts . BeanLogin ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . Action ; import org . apache . struts . action . ActionForm ; import org . apache . struts . action . ActionForward ; import org . apache . struts . action . ActionMapping ; public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionPublicarNoticia.java ActionPublicarNoticia.java package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . * ; public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionVerNoticia.java ActionVerNoticia.java package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . * ; import logicaNegocio . Noticia ; import org . apache . struts . action . * ; public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/BeanTablon.java BeanTablon.java package beansstruts ; import javax . servlet . http . HttpServletRequest ; import org . apache . struts . action . * ; public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
    Query cu with 1 result nodes - CONTENT : [/Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionLogin.java ActionLogin.java package actionsstruts ; import beansstruts . BeanLogin ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . Action ; import org . apache . struts . action . ActionForm ; import org . apache . struts . action . ActionForward ; import org . apache . struts . action . ActionMapping ; public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionPublicarNoticia.java ActionPublicarNoticia.java package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . * ; public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionVerNoticia.java ActionVerNoticia.java package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . * ; import logicaNegocio . Noticia ; import org . apache . struts . action . * ; public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/BeanTablon.java BeanTablon.java package beansstruts ; import javax . servlet . http . HttpServletRequest ; import org . apache . struts . action . * ; public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
  Executing mappings...
    - QUERY_RESULT: 1 bindings:
      (1/1) result node: CST (kind). Rule... calling mapCompilationUnit rule

      RULE: mapCompilationUnit... executing!
        Model Element CompilationUnit created
        Executing queries...
          Query cst with 1 result nodes - CONTENT : [/Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionLogin.java ActionLogin.java package actionsstruts ; import beansstruts . BeanLogin ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . Action ; import org . apache . struts . action . ActionForm ; import org . apache . struts . action . ActionForward ; import org . apache . struts . action . ActionMapping ; public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionPublicarNoticia.java ActionPublicarNoticia.java package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . * ; public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/ActionVerNoticia.java ActionVerNoticia.java package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . * ; import logicaNegocio . Noticia ; import org . apache . struts . action . * ; public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } /Users/jlcanovas/Desktop/eclipse-3.5-64b/workspace/Grammar2Model.examples.Java2ASTMModel/files/src/BeanTablon.java BeanTablon.java package beansstruts ; import javax . servlet . http . HttpServletRequest ; import org . apache . struts . action . * ; public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
          Query elements with 4 result nodes
        Executing mappings...
          - VALUE: language (property) - Java (value)
          - QUERY_RESULT: 4 bindings:
            (1/4) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

            RULE: mapClass... executing!
              Model Element AggregateTypeDefinition created
              Executing queries...
                Query coid with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                Query extends with 1 result nodes - CONTENT in line 13: [Action ]
                Query name with 1 result nodes - CONTENT in line 13: [class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                Query impts with 7 result nodes
                Query pack with 1 result nodes - CONTENT in line 1: [actionsstruts ]
                Query elements with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                Query loccu with 1 result nodes - CONTENT : [package actionsstruts ; import beansstruts . BeanLogin ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . Action ; import org . apache . struts . action . ActionForm ; import org . apache . struts . action . ActionForward ; import org . apache . struts . action . ActionMapping ; public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
              Executing mappings...
                - OPERATION_CREATION: Name created
                - QUERY_ACCESS: variable: name - 
                  node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionLogin (value) 
                - OPERATION_CREATION: SpecificClassType created
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                  RULE: mapTypedMethod... executing!
                    Model Element FunctionDefinition created
                    Executing queries...
                      Query cbd with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                      Query stats with 4 result nodes
                      Query name with 1 result nodes - CONTENT in line 14: [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                      Query rtype with 1 result nodes - CONTENT in line 14: [ActionForward ]
                      Query params with 4 result nodes
                    Executing mappings...
                      - OPERATION_CREATION: Name created
                      - QUERY_ACCESS: variable: name - 
                        node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 14: [actionMapping ]
                            Query fpd with 1 result nodes - CONTENT : [ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 14: [ActionMapping ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 14: [ActionMapping ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 14: [ActionMapping ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - ActionMapping (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (2/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 15: [actionForm ]
                            Query fpd with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 15: [ActionForm ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 15: [ActionForm ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 15: [ActionForm ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - ActionForm (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (3/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 16: [request ]
                            Query fpd with 1 result nodes - CONTENT : [HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 16: [HttpServletRequest ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 16: [HttpServletRequest ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 16: [HttpServletRequest ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - HttpServletRequest (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (4/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 17: [response ]
                            Query fpd with 1 result nodes - CONTENT : [HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 17: [HttpServletResponse ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 17: [HttpServletResponse ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 17: [HttpServletResponse ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - HttpServletResponse (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: blockStatement (kind). Rule... calling mapDeclarationOrDefinitionStatement rule

                        RULE: mapDeclarationOrDefinitionStatement... executing!
                          Model Element DeclarationOrDefinitionStatement created
                          Executing queries...
                            Query var with 1 result nodes - CONTENT in line 18: [BeanLogin bean = ( BeanLogin ) actionForm ; ]
                            Query bs with 1 result nodes - CONTENT : [BeanLogin bean = ( BeanLogin ) actionForm ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: localVariableDeclaration (kind). Rule... calling mapVariableDefinition rule

                              RULE: mapVariableDefinition... executing!
                                Model Element VariableDefinition created
                                Executing queries...
                                  Query name with 1 result nodes - CONTENT in line 18: [bean = ( BeanLogin ) actionForm ]
                                  Query lvd with 1 result nodes - CONTENT in line 18: [BeanLogin bean = ( BeanLogin ) actionForm ; ]
                                  Query init with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                  Query type with 1 result nodes - CONTENT in line 18: [BeanLogin ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: name - 
                                    node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                    RULE: skipConditionalExpression... executing!
                                    Skip Rule skipConditionalExpression executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipOr... executing!
                                    Skip Rule skipOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAnd... executing!
                                    Skip Rule skipAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapCasting... executing!
                                      Model Element CastExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [( BeanLogin ) actionForm ]
                                        Query unaryNotExp with 1 result nodes - CONTENT : [actionForm ]
                                        Query isPrimitive with 0 result nodes
                                        Query unaryExp with 0 result nodes
                                        Query type with 1 result nodes - CONTENT in line 18: [BeanLogin ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: unaryExpressionNotPlusMinus (kind). Rule... calling skipUnaryExpressionNotPlusMinus rule

                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [actionForm ]
                                                Query next with 1 result nodes - CONTENT in line 18: [actionForm ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: mapVariableRef... executing!
                                                Model Element IdentifierReference created
                                                Executing queries...
                                                  Query exp with 1 result nodes - CONTENT in line 18: [actionForm ]
                                                  Query thisloc with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                                                  Query locInstVar with 0 result nodes
                                                  Query locVar with 0 result nodes
                                                  Query method with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                                                  Query locParam with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                                                Executing mappings...
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                    RULE: mapsFormalParameterDefinition... cached!!


                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: type (kind) calling mapTypeReference rule

                                    RULE: mapTypeReference... executing!
                                    Skip Rule mapTypeReference executing...
                                    Executing skip query...
                                      Query t with 1 result nodes - CONTENT in line 18: [BeanLogin ]
                                      Query primType with 0 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapsNamedTypeReference... executing!
                                      Model Element NamedTypeReference created
                                      Executing queries...
                                        Query locatedType with 0 result nodes
                                        Query t with 1 result nodes - CONTENT in line 18: [BeanLogin ]
                                      Executing mappings...
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: t - 
                                          node: type (kind) - leaf: Identifier (kind) - BeanLogin (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                        (2/4) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 19: [if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } ]
                          Query bs with 1 result nodes - CONTENT : [if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapIfStatement... executing!
                          Model Element IfStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ]
                            Query thenb with 1 result nodes - CONTENT : [{ System . out . println ( "Usuario logged-in" ) ; } ]
                            Query elseb with 0 result nodes
                            Query st with 1 result nodes - CONTENT in line 19: [if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ]
                                Query next with 1 result nodes - CONTENT in line 19: [bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapAndExpression... executing!
                                Model Element BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT in line 19: [bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ]
                                  Query exp2 with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                  Query exp1 with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: inclusiveOrExpression (kind). Rule... calling skipEquality rule

                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapMethodCallWithReceptorAndSelector... executing!
                                      Model Element FunctionCallExpression created
                                      Executing queries...
                                        Query selector with 1 result nodes - CONTENT in line 19: [. equals ( "user" ) ]
                                        Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                                        Query exp with 1 result nodes - CONTENT : [bean . getUsuario ( ) . equals ( "user" ) ]
                                        Query locInstVar with 0 result nodes
                                        Query locVar with 1 result nodes - CONTENT : [BeanLogin bean = ( BeanLogin ) actionForm ; ]
                                        Query primary with 1 result nodes - CONTENT in line 19: [bean . getUsuario ( ) ]
                                        Query locParam with 0 result nodes
                                        Query argsSelector with 1 result nodes - CONTENT : ["user" ]
                                        Query containerCla with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                                        Query argsSuffix with 0 result nodes
                                        Query hasTwoId with 1 result nodes - CONTENT in line 19: [bean . getUsuario ( ) ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - getUsuario (value) 
                                            - CALL RULE: THE VARIABLE DOESNT EXIST
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: selector - 
                                              node: selector (kind) - leaf: Identifier (kind) - equals (value) 
                                            - CALL RULE: 1 bindings:
                                              (1/1) result node: expression (kind) calling mapArgument rule

                                              RULE: mapArgument... executing!
                                                Model Element ActualParameterExpression created
                                                Executing queries...
                                                  Query expArg with 1 result nodes - CONTENT : ["user" ]
                                                Executing mappings...
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                    RULE: skipConditionalExpression... executing!
                                                    Skip Rule skipConditionalExpression executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipOr... executing!
                                                    Skip Rule skipOr executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAnd... executing!
                                                    Skip Rule skipAnd executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipEquality... executing!
                                                    Skip Rule skipEquality executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipComparators... executing!
                                                    Skip Rule skipComparators executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAdditive... executing!
                                                    Skip Rule skipAdditive executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipMultiplicative... executing!
                                                    Skip Rule skipMultiplicative executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipPrimary... executing!
                                                    Skip Rule skipPrimary executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: mapLiteral... executing!
                                                      Model Element Literal created
                                                      Executing queries...
                                                        Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Executing mappings...
                                                        - CODE:  - node: primary (kind) - Result: "user" 



                                  - OPERATION_CREATION: And created
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: inclusiveOrExpression (kind). Rule... calling skipEquality rule

                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                      Query next with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapMethodCallWithReceptorAndSelector... executing!
                                      Model Element FunctionCallExpression created
                                      Executing queries...
                                        Query selector with 1 result nodes - CONTENT in line 19: [. equals ( "user" ) ]
                                        Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                                        Query exp with 1 result nodes - CONTENT : [bean . getClave ( ) . equals ( "user" ) ]
                                        Query locInstVar with 0 result nodes
                                        Query locVar with 1 result nodes - CONTENT : [BeanLogin bean = ( BeanLogin ) actionForm ; ]
                                        Query primary with 1 result nodes - CONTENT in line 19: [bean . getClave ( ) ]
                                        Query locParam with 0 result nodes
                                        Query argsSelector with 1 result nodes - CONTENT : ["user" ]
                                        Query containerCla with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                                        Query argsSuffix with 0 result nodes
                                        Query hasTwoId with 1 result nodes - CONTENT in line 19: [bean . getClave ( ) ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - getClave (value) 
                                            - CALL RULE: THE VARIABLE DOESNT EXIST
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: selector - 
                                              node: selector (kind) - leaf: Identifier (kind) - equals (value) 
                                            - CALL RULE: 1 bindings:
                                              (1/1) result node: expression (kind) calling mapArgument rule

                                              RULE: mapArgument... executing!
                                                Model Element ActualParameterExpression created
                                                Executing queries...
                                                  Query expArg with 1 result nodes - CONTENT : ["user" ]
                                                Executing mappings...
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                    RULE: skipConditionalExpression... executing!
                                                    Skip Rule skipConditionalExpression executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipOr... executing!
                                                    Skip Rule skipOr executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAnd... executing!
                                                    Skip Rule skipAnd executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipEquality... executing!
                                                    Skip Rule skipEquality executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipComparators... executing!
                                                    Skip Rule skipComparators executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAdditive... executing!
                                                    Skip Rule skipAdditive executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipMultiplicative... executing!
                                                    Skip Rule skipMultiplicative executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipPrimary... executing!
                                                    Skip Rule skipPrimary executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Query next with 1 result nodes - CONTENT : ["user" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: mapLiteral... executing!
                                                      Model Element Literal created
                                                      Executing queries...
                                                        Query exp with 1 result nodes - CONTENT : ["user" ]
                                                      Executing mappings...
                                                        - CODE:  - node: primary (kind) - Result: "user" 




                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapBlock rule

                              RULE: mapBlock... executing!
                                Model Element BlockStatement created
                                Executing queries...
                                  Query st with 1 result nodes - CONTENT : [{ System . out . println ( "Usuario logged-in" ) ; } ]
                                  Query substs with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ; ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                    RULE: skipBlockStatement... executing!
                                    Skip Rule skipBlockStatement executing...
                                    Executing skip query...
                                      Query next with 1 result nodes - CONTENT in line 20: [System . out . println ( "Usuario logged-in" ) ; ]
                                      Query bs with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ; ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStatementExpression... executing!
                                      Model Element ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                        Query st with 1 result nodes - CONTENT in line 20: [System . out . println ( "Usuario logged-in" ) ; ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [System . out . println ( "Usuario logged-in" ) ]
                                            Query next with 1 result nodes - CONTENT in line 20: [System . out . println ( "Usuario logged-in" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapMethodCallWith2Receptors... executing!
                                            Model Element FunctionCallExpression created
                                            Executing queries...
                                              Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                                              Query exp with 1 result nodes - CONTENT in line 20: [System . out . println ( "Usuario logged-in" ) ]
                                              Query locInstVar with 0 result nodes
                                              Query locVar with 0 result nodes
                                              Query args with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                              Query locParam with 0 result nodes
                                              Query containerCla with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                                            Executing mappings...
                                              - OPERATION_CREATION: NamedTypeReference created
                                              - OPERATION_CREATION: Name created
                                              - QUERY_ACCESS: variable: exp - 
                                                node: primary (kind) - leaf: Identifier (kind) - System (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - OPERATION_CREATION: FunctionCallExpression created
                                              - OPERATION_CREATION: NamedTypeReference created
                                              - OPERATION_CREATION: Name created
                                              - QUERY_ACCESS: variable: exp - 
                                                node: primary (kind) - leaf: Identifier (kind) - out (value) 
                                              - OPERATION_CREATION: FunctionCallExpression created
                                              - OPERATION_CREATION: NamedTypeReference created
                                              - OPERATION_CREATION: Name created
                                              - QUERY_ACCESS: variable: exp - 
                                                node: primary (kind) - leaf: Identifier (kind) - println (value) 
                                              - CALL RULE: 1 bindings:
                                                (1/1) result node: expression (kind) calling mapArgument rule

                                                RULE: mapArgument... executing!
                                                  Model Element ActualParameterExpression created
                                                  Executing queries...
                                                    Query expArg with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                      RULE: skipConditionalExpression... executing!
                                                      Skip Rule skipConditionalExpression executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipOr... executing!
                                                      Skip Rule skipOr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAnd... executing!
                                                      Skip Rule skipAnd executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipEquality... executing!
                                                      Skip Rule skipEquality executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipComparators... executing!
                                                      Skip Rule skipComparators executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAdditive... executing!
                                                      Skip Rule skipAdditive executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipMultiplicative... executing!
                                                      Skip Rule skipMultiplicative executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipPrimary... executing!
                                                      Skip Rule skipPrimary executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                      Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Query next with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapLiteral... executing!
                                                        Model Element Literal created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : ["Usuario logged-in" ]
                                                        Executing mappings...
                                                          - CODE:  - node: primary (kind) - Result: "Usuario logged-in" 





                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (3/4) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 22: [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; ]
                          Query bs with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapStatementExpression... executing!
                          Model Element ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                            Query st with 1 result nodes - CONTENT in line 22: [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapMethodCallWithReceptorAndSelector... executing!
                                Model Element FunctionCallExpression created
                                Executing queries...
                                  Query selector with 1 result nodes - CONTENT in line 22: [. setAttribute ( "usuario" , "invitado" ) ]
                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                                  Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ]
                                  Query locInstVar with 0 result nodes
                                  Query locVar with 0 result nodes
                                  Query primary with 1 result nodes - CONTENT in line 22: [request . getSession ( ) ]
                                  Query locParam with 0 result nodes
                                  Query argsSelector with 2 result nodes
                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                                  Query argsSuffix with 0 result nodes
                                  Query hasTwoId with 1 result nodes - CONTENT in line 22: [request . getSession ( ) ]
                                Executing mappings...
                                    - IF detected...false! executing ELSE part 
                                      - OPERATION_CREATION: NamedTypeReference created
                                      - OPERATION_CREATION: Name created
                                      - QUERY_ACCESS: variable: primary - 
                                        node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                      - OPERATION_CREATION: FunctionCallExpression created
                                      - OPERATION_CREATION: NamedTypeReference created
                                      - OPERATION_CREATION: Name created
                                      - QUERY_ACCESS: variable: primary - 
                                        node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                      - CALL RULE: THE VARIABLE DOESNT EXIST
                                      - OPERATION_CREATION: FunctionCallExpression created
                                      - OPERATION_CREATION: NamedTypeReference created
                                      - OPERATION_CREATION: Name created
                                      - QUERY_ACCESS: variable: selector - 
                                        node: selector (kind) - leaf: Identifier (kind) - setAttribute (value) 
                                      - CALL RULE: 2 bindings:
                                        (1/2) result node: expression (kind) calling mapArgument rule

                                        RULE: mapArgument... executing!
                                          Model Element ActualParameterExpression created
                                          Executing queries...
                                            Query expArg with 1 result nodes - CONTENT : ["usuario" ]
                                          Executing mappings...
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                              RULE: skipConditionalExpression... executing!
                                              Skip Rule skipConditionalExpression executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipOr... executing!
                                              Skip Rule skipOr executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAnd... executing!
                                              Skip Rule skipAnd executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipEquality... executing!
                                              Skip Rule skipEquality executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipComparators... executing!
                                              Skip Rule skipComparators executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAdditive... executing!
                                              Skip Rule skipAdditive executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipMultiplicative... executing!
                                              Skip Rule skipMultiplicative executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipPrimary... executing!
                                              Skip Rule skipPrimary executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Query next with 1 result nodes - CONTENT : ["usuario" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: mapLiteral... executing!
                                                Model Element Literal created
                                                Executing queries...
                                                  Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                Executing mappings...
                                                  - CODE:  - node: primary (kind) - Result: "usuario" 


                                        (2/2) result node: expression (kind) calling mapArgument rule

                                        RULE: mapArgument... executing!
                                          Model Element ActualParameterExpression created
                                          Executing queries...
                                            Query expArg with 1 result nodes - CONTENT : ["invitado" ]
                                          Executing mappings...
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                              RULE: skipConditionalExpression... executing!
                                              Skip Rule skipConditionalExpression executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipOr... executing!
                                              Skip Rule skipOr executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAnd... executing!
                                              Skip Rule skipAnd executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipEquality... executing!
                                              Skip Rule skipEquality executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipComparators... executing!
                                              Skip Rule skipComparators executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAdditive... executing!
                                              Skip Rule skipAdditive executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipMultiplicative... executing!
                                              Skip Rule skipMultiplicative executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipPrimary... executing!
                                              Skip Rule skipPrimary executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Query next with 1 result nodes - CONTENT : ["invitado" ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: mapLiteral... executing!
                                                Model Element Literal created
                                                Executing queries...
                                                  Query exp with 1 result nodes - CONTENT : ["invitado" ]
                                                Executing mappings...
                                                  - CODE:  - node: primary (kind) - Result: "invitado" 




                        (4/4) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 23: [if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; ]
                          Query bs with 1 result nodes - CONTENT : [if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapIfStatement... executing!
                          Model Element IfStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                            Query thenb with 1 result nodes - CONTENT in line 24: [return actionMapping . findForward ( "publicar" ) ; ]
                            Query elseb with 1 result nodes - CONTENT in line 25: [return actionMapping . findForward ( "exito" ) ; ]
                            Query st with 1 result nodes - CONTENT in line 23: [if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapEquality... executing!
                                Model Element BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ]
                                  Query isNEqual with 0 result nodes
                                  Query isEqual with 0 result nodes
                                  Query exp2 with 1 result nodes - CONTENT : [null ]
                                  Query exp1 with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: instanceOfExpression (kind). Rule... calling skipComparators rule

                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapMethodCallWithReceptorAndSelector... executing!
                                      Model Element FunctionCallExpression created
                                      Executing queries...
                                        Query selector with 1 result nodes - CONTENT in line 23: [. getAttribute ( "datosPublicacion" ) ]
                                        Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                                        Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                        Query locInstVar with 0 result nodes
                                        Query locVar with 0 result nodes
                                        Query primary with 1 result nodes - CONTENT in line 23: [request . getSession ( ) ]
                                        Query locParam with 0 result nodes
                                        Query argsSelector with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                        Query containerCla with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                                        Query argsSuffix with 0 result nodes
                                        Query hasTwoId with 1 result nodes - CONTENT in line 23: [request . getSession ( ) ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                            - CALL RULE: THE VARIABLE DOESNT EXIST
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: selector - 
                                              node: selector (kind) - leaf: Identifier (kind) - getAttribute (value) 
                                            - CALL RULE: 1 bindings:
                                              (1/1) result node: expression (kind) calling mapArgument rule

                                              RULE: mapArgument... executing!
                                                Model Element ActualParameterExpression created
                                                Executing queries...
                                                  Query expArg with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                Executing mappings...
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                    RULE: skipConditionalExpression... executing!
                                                    Skip Rule skipConditionalExpression executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipOr... executing!
                                                    Skip Rule skipOr executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAnd... executing!
                                                    Skip Rule skipAnd executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipEquality... executing!
                                                    Skip Rule skipEquality executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipComparators... executing!
                                                    Skip Rule skipComparators executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAdditive... executing!
                                                    Skip Rule skipAdditive executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipMultiplicative... executing!
                                                    Skip Rule skipMultiplicative executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipPrimary... executing!
                                                    Skip Rule skipPrimary executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: mapLiteral... executing!
                                                      Model Element Literal created
                                                      Executing queries...
                                                        Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Executing mappings...
                                                        - CODE:  - node: primary (kind) - Result: "datosPublicacion" 



                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: instanceOfExpression (kind). Rule... calling skipComparators rule

                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapLiteral... executing!
                                      Model Element Literal created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [null ]
                                      Executing mappings...
                                        - CODE:  - node: primary (kind) - Result: null 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! it doesn't have ELSE part 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapReturnStatement rule

                              RULE: mapReturnStatement... executing!
                                Model Element ReturnStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                  Query st with 1 result nodes - CONTENT in line 24: [return actionMapping . findForward ( "publicar" ) ; ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                    RULE: skipConditionalExpression... executing!
                                    Skip Rule skipConditionalExpression executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipOr... executing!
                                    Skip Rule skipOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAnd... executing!
                                    Skip Rule skipAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "publicar" ) ]
                                      Query next with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "publicar" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapMethodCallWithReceptor... executing!
                                      Model Element FunctionCallExpression created
                                      Executing queries...
                                        Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                                        Query exp with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "publicar" ) ]
                                        Query locInstVar with 0 result nodes
                                        Query locVar with 0 result nodes
                                        Query args with 1 result nodes - CONTENT : ["publicar" ]
                                        Query locParam with 1 result nodes - CONTENT : [ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                                        Query containerCla with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                                      Executing mappings...
                                        - OPERATION_CREATION: NamedTypeReference created
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: exp - 
                                          node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: formalParameterDecls (kind). Rule... RULE NOT FOUND!  FROM: formalParameterDecls TO: type
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                        - OPERATION_CREATION: FunctionCallExpression created
                                        - OPERATION_CREATION: NamedTypeReference created
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: exp - 
                                          node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                        - CALL RULE: 1 bindings:
                                          (1/1) result node: expression (kind) calling mapArgument rule

                                          RULE: mapArgument... executing!
                                            Model Element ActualParameterExpression created
                                            Executing queries...
                                              Query expArg with 1 result nodes - CONTENT : ["publicar" ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                RULE: skipConditionalExpression... executing!
                                                Skip Rule skipConditionalExpression executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipOr... executing!
                                                Skip Rule skipOr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAnd... executing!
                                                Skip Rule skipAnd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipEquality... executing!
                                                Skip Rule skipEquality executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipComparators... executing!
                                                Skip Rule skipComparators executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAdditive... executing!
                                                Skip Rule skipAdditive executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipMultiplicative... executing!
                                                Skip Rule skipMultiplicative executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipPrimary... executing!
                                                Skip Rule skipPrimary executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Query next with 1 result nodes - CONTENT : ["publicar" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapLiteral... executing!
                                                  Model Element Literal created
                                                  Executing queries...
                                                    Query exp with 1 result nodes - CONTENT : ["publicar" ]
                                                  Executing mappings...
                                                    - CODE:  - node: primary (kind) - Result: "publicar" 




                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapReturnStatement rule

                              RULE: mapReturnStatement... executing!
                                Model Element ReturnStatement created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                  Query st with 1 result nodes - CONTENT in line 25: [return actionMapping . findForward ( "exito" ) ; ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                    RULE: skipConditionalExpression... executing!
                                    Skip Rule skipConditionalExpression executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipOr... executing!
                                    Skip Rule skipOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAnd... executing!
                                    Skip Rule skipAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                      Query next with 1 result nodes - CONTENT in line 25: [actionMapping . findForward ( "exito" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapMethodCallWithReceptor... executing!
                                      Model Element FunctionCallExpression created
                                      Executing queries...
                                        Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } ]
                                        Query exp with 1 result nodes - CONTENT in line 25: [actionMapping . findForward ( "exito" ) ]
                                        Query locInstVar with 0 result nodes
                                        Query locVar with 0 result nodes
                                        Query args with 1 result nodes - CONTENT : ["exito" ]
                                        Query locParam with 1 result nodes - CONTENT : [ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                                        Query containerCla with 1 result nodes - CONTENT : [public class ActionLogin extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanLogin bean = ( BeanLogin ) actionForm ; if ( bean . getUsuario ( ) . equals ( "user" ) && bean . getClave ( ) . equals ( "user" ) ) { System . out . println ( "Usuario logged-in" ) ; } request . getSession ( ) . setAttribute ( "usuario" , "invitado" ) ; if ( request . getSession ( ) . getAttribute ( "datosPublicacion" ) != null ) return actionMapping . findForward ( "publicar" ) ; else return actionMapping . findForward ( "exito" ) ; } } ]
                                      Executing mappings...
                                        - OPERATION_CREATION: NamedTypeReference created
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: exp - 
                                          node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: formalParameterDecls (kind). Rule... RULE NOT FOUND!  FROM: formalParameterDecls TO: type
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                        - OPERATION_CREATION: FunctionCallExpression created
                                        - OPERATION_CREATION: NamedTypeReference created
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: exp - 
                                          node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                        - CALL RULE: 1 bindings:
                                          (1/1) result node: expression (kind) calling mapArgument rule

                                          RULE: mapArgument... executing!
                                            Model Element ActualParameterExpression created
                                            Executing queries...
                                              Query expArg with 1 result nodes - CONTENT : ["exito" ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                RULE: skipConditionalExpression... executing!
                                                Skip Rule skipConditionalExpression executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipOr... executing!
                                                Skip Rule skipOr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAnd... executing!
                                                Skip Rule skipAnd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipEquality... executing!
                                                Skip Rule skipEquality executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipComparators... executing!
                                                Skip Rule skipComparators executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAdditive... executing!
                                                Skip Rule skipAdditive executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipMultiplicative... executing!
                                                Skip Rule skipMultiplicative executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipPrimary... executing!
                                                Skip Rule skipPrimary executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Query next with 1 result nodes - CONTENT : ["exito" ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapLiteral... executing!
                                                  Model Element Literal created
                                                  Executing queries...
                                                    Query exp with 1 result nodes - CONTENT : ["exito" ]
                                                  Executing mappings...
                                                    - CODE:  - node: primary (kind) - Result: "exito" 





                      - CALL RULE: 1 bindings:
                        (1/1) result node: type (kind) calling mapTypeReference rule

                        RULE: mapTypeReference... executing!
                        Skip Rule mapTypeReference executing...
                        Executing skip query...
                          Query t with 1 result nodes - CONTENT in line 14: [ActionForward ]
                          Query primType with 0 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapsNamedTypeReference... executing!
                          Model Element NamedTypeReference created
                          Executing queries...
                            Query locatedType with 0 result nodes
                            Query t with 1 result nodes - CONTENT in line 14: [ActionForward ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: t - 
                              node: type (kind) - leaf: Identifier (kind) - ActionForward (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                - CODE:  - node: qualifiedName (kind) - Result: actionsstruts 
                - CODE:  - node: importDeclaration (kind) - Result: import beansstruts . BeanLogin ;  - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletRequest ;  - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletResponse ;  - node: importDeclaration (kind) - Result: import org . apache . struts . action . Action ;  - node: importDeclaration (kind) - Result: import org . apache . struts . action . ActionForm ;  - node: importDeclaration (kind) - Result: import org . apache . struts . action . ActionForward ;  - node: importDeclaration (kind) - Result: import org . apache . struts . action . ActionMapping ; 

            (2/4) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

            RULE: mapClass... executing!
              Model Element AggregateTypeDefinition created
              Executing queries...
                Query coid with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                Query extends with 1 result nodes - CONTENT in line 9: [Action ]
                Query name with 1 result nodes - CONTENT in line 9: [class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                Query impts with 5 result nodes
                Query pack with 1 result nodes - CONTENT in line 1: [actionsstruts ]
                Query elements with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                Query loccu with 1 result nodes - CONTENT : [package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . HttpServletRequest ; import javax . servlet . http . HttpServletResponse ; import org . apache . struts . action . * ; public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
              Executing mappings...
                - OPERATION_CREATION: Name created
                - QUERY_ACCESS: variable: name - 
                  node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionPublicarNoticia (value) 
                - OPERATION_CREATION: SpecificClassType created
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                  RULE: mapTypedMethod... executing!
                    Model Element FunctionDefinition created
                    Executing queries...
                      Query cbd with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                      Query stats with 6 result nodes
                      Query name with 1 result nodes - CONTENT in line 10: [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                      Query rtype with 1 result nodes - CONTENT in line 10: [ActionForward ]
                      Query params with 4 result nodes
                    Executing mappings...
                      - OPERATION_CREATION: Name created
                      - QUERY_ACCESS: variable: name - 
                        node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 10: [actionMapping ]
                            Query fpd with 1 result nodes - CONTENT : [ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 10: [ActionMapping ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 10: [ActionMapping ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 10: [ActionMapping ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - ActionMapping (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (2/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 11: [actionForm ]
                            Query fpd with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 11: [ActionForm ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 11: [ActionForm ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 11: [ActionForm ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - ActionForm (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (3/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 12: [request ]
                            Query fpd with 1 result nodes - CONTENT : [HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 12: [HttpServletRequest ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 12: [HttpServletRequest ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 12: [HttpServletRequest ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - HttpServletRequest (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (4/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 13: [response ]
                            Query fpd with 1 result nodes - CONTENT : [HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 13: [HttpServletResponse ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 13: [HttpServletResponse ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 13: [HttpServletResponse ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - HttpServletResponse (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                      - QUERY_RESULT: 6 bindings:
                        (1/6) result node: blockStatement (kind). Rule... calling mapDeclarationOrDefinitionStatement rule

                        RULE: mapDeclarationOrDefinitionStatement... executing!
                          Model Element DeclarationOrDefinitionStatement created
                          Executing queries...
                            Query var with 1 result nodes - CONTENT in line 14: [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                            Query bs with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: localVariableDeclaration (kind). Rule... calling mapVariableDefinition rule

                              RULE: mapVariableDefinition... executing!
                                Model Element VariableDefinition created
                                Executing queries...
                                  Query name with 1 result nodes - CONTENT in line 14: [bean = ( BeanTablon ) actionForm ]
                                  Query lvd with 1 result nodes - CONTENT in line 14: [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                  Query init with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                  Query type with 1 result nodes - CONTENT in line 14: [BeanTablon ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: name - 
                                    node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                    RULE: skipConditionalExpression... executing!
                                    Skip Rule skipConditionalExpression executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipOr... executing!
                                    Skip Rule skipOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAnd... executing!
                                    Skip Rule skipAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapCasting... executing!
                                      Model Element CastExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                        Query unaryNotExp with 1 result nodes - CONTENT : [actionForm ]
                                        Query isPrimitive with 0 result nodes
                                        Query unaryExp with 0 result nodes
                                        Query type with 1 result nodes - CONTENT in line 14: [BeanTablon ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: unaryExpressionNotPlusMinus (kind). Rule... calling skipUnaryExpressionNotPlusMinus rule

                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [actionForm ]
                                                Query next with 1 result nodes - CONTENT in line 14: [actionForm ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: mapVariableRef... executing!
                                                Model Element IdentifierReference created
                                                Executing queries...
                                                  Query exp with 1 result nodes - CONTENT in line 14: [actionForm ]
                                                  Query thisloc with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                                  Query locInstVar with 0 result nodes
                                                  Query locVar with 0 result nodes
                                                  Query method with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                                  Query locParam with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                                                Executing mappings...
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                    RULE: mapsFormalParameterDefinition... cached!!


                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: type (kind) calling mapTypeReference rule

                                    RULE: mapTypeReference... executing!
                                    Skip Rule mapTypeReference executing...
                                    Executing skip query...
                                      Query t with 1 result nodes - CONTENT in line 14: [BeanTablon ]
                                      Query primType with 0 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapsNamedTypeReference... executing!
                                      Model Element NamedTypeReference created
                                      Executing queries...
                                        Query locatedType with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                        Query t with 1 result nodes - CONTENT in line 14: [BeanTablon ]
                                      Executing mappings...
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: t - 
                                          node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

                                          RULE: mapClass... executing!
                                            Model Element AggregateTypeDefinition created
                                            Executing queries...
                                              Query coid with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                              Query extends with 1 result nodes - CONTENT in line 6: [ActionForm ]
                                              Query name with 1 result nodes - CONTENT in line 6: [class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                              Query impts with 2 result nodes
                                              Query pack with 1 result nodes - CONTENT in line 1: [beansstruts ]
                                              Query elements with 14 result nodes
                                              Query loccu with 1 result nodes - CONTENT : [package beansstruts ; import javax . servlet . http . HttpServletRequest ; import org . apache . struts . action . * ; public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                            Executing mappings...
                                              - OPERATION_CREATION: Name created
                                              - QUERY_ACCESS: variable: name - 
                                                node: normalClassDeclaration (kind) - leaf: Identifier (kind) - BeanTablon (value) 
                                              - OPERATION_CREATION: SpecificClassType created
                                              - QUERY_RESULT: 14 bindings:
                                                (1/14) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                RULE: mapInstanceVariable... executing!
                                                  Model Element VariableDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [private String tituloSeleccionado = "" ; ]
                                                    Query name with 1 result nodes - CONTENT in line 8: [tituloSeleccionado = "" ]
                                                    Query init with 1 result nodes - CONTENT : ["" ]
                                                    Query type with 1 result nodes - CONTENT in line 8: [String ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: variableDeclarator (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                      RULE: skipConditionalExpression... executing!
                                                      Skip Rule skipConditionalExpression executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipOr... executing!
                                                      Skip Rule skipOr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAnd... executing!
                                                      Skip Rule skipAnd executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipEquality... executing!
                                                      Skip Rule skipEquality executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipComparators... executing!
                                                      Skip Rule skipComparators executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAdditive... executing!
                                                      Skip Rule skipAdditive executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipMultiplicative... executing!
                                                      Skip Rule skipMultiplicative executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipPrimary... executing!
                                                      Skip Rule skipPrimary executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                      Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapLiteral... executing!
                                                        Model Element Literal created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Executing mappings...
                                                          - CODE:  - node: primary (kind) - Result: "" 

                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 8: [String ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsStringTypeReference... executing!
                                                        Model Element UnnamedTypeReference created
                                                        Executing queries...
                                                          Query t with 1 result nodes - CONTENT in line 8: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: String created


                                                (2/14) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                RULE: mapInstanceVariable... executing!
                                                  Model Element VariableDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [private String titulo = "" ; ]
                                                    Query name with 1 result nodes - CONTENT in line 10: [titulo = "" ]
                                                    Query init with 1 result nodes - CONTENT : ["" ]
                                                    Query type with 1 result nodes - CONTENT in line 10: [String ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: variableDeclarator (kind) - leaf: Identifier (kind) - titulo (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                      RULE: skipConditionalExpression... executing!
                                                      Skip Rule skipConditionalExpression executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipOr... executing!
                                                      Skip Rule skipOr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAnd... executing!
                                                      Skip Rule skipAnd executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipEquality... executing!
                                                      Skip Rule skipEquality executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipComparators... executing!
                                                      Skip Rule skipComparators executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAdditive... executing!
                                                      Skip Rule skipAdditive executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipMultiplicative... executing!
                                                      Skip Rule skipMultiplicative executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipPrimary... executing!
                                                      Skip Rule skipPrimary executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                      Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapLiteral... executing!
                                                        Model Element Literal created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Executing mappings...
                                                          - CODE:  - node: primary (kind) - Result: "" 

                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 10: [String ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsStringTypeReference... executing!
                                                        Model Element UnnamedTypeReference created
                                                        Executing queries...
                                                          Query t with 1 result nodes - CONTENT in line 10: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: String created


                                                (3/14) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                RULE: mapInstanceVariable... executing!
                                                  Model Element VariableDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [private String contenido = "" ; ]
                                                    Query name with 1 result nodes - CONTENT in line 11: [contenido = "" ]
                                                    Query init with 1 result nodes - CONTENT : ["" ]
                                                    Query type with 1 result nodes - CONTENT in line 11: [String ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: variableDeclarator (kind) - leaf: Identifier (kind) - contenido (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                      RULE: skipConditionalExpression... executing!
                                                      Skip Rule skipConditionalExpression executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipOr... executing!
                                                      Skip Rule skipOr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAnd... executing!
                                                      Skip Rule skipAnd executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipEquality... executing!
                                                      Skip Rule skipEquality executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipComparators... executing!
                                                      Skip Rule skipComparators executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAdditive... executing!
                                                      Skip Rule skipAdditive executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipMultiplicative... executing!
                                                      Skip Rule skipMultiplicative executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipPrimary... executing!
                                                      Skip Rule skipPrimary executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                      Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapLiteral... executing!
                                                        Model Element Literal created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Executing mappings...
                                                          - CODE:  - node: primary (kind) - Result: "" 

                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 11: [String ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsStringTypeReference... executing!
                                                        Model Element UnnamedTypeReference created
                                                        Executing queries...
                                                          Query t with 1 result nodes - CONTENT in line 11: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: String created


                                                (4/14) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                RULE: mapInstanceVariable... executing!
                                                  Model Element VariableDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [private String autor = "" ; ]
                                                    Query name with 1 result nodes - CONTENT in line 12: [autor = "" ]
                                                    Query init with 1 result nodes - CONTENT : ["" ]
                                                    Query type with 1 result nodes - CONTENT in line 12: [String ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: variableDeclarator (kind) - leaf: Identifier (kind) - autor (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                      RULE: skipConditionalExpression... executing!
                                                      Skip Rule skipConditionalExpression executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipOr... executing!
                                                      Skip Rule skipOr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAnd... executing!
                                                      Skip Rule skipAnd executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipEquality... executing!
                                                      Skip Rule skipEquality executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipComparators... executing!
                                                      Skip Rule skipComparators executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAdditive... executing!
                                                      Skip Rule skipAdditive executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipMultiplicative... executing!
                                                      Skip Rule skipMultiplicative executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipPrimary... executing!
                                                      Skip Rule skipPrimary executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                      Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Query next with 1 result nodes - CONTENT : ["" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapLiteral... executing!
                                                        Model Element Literal created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : ["" ]
                                                        Executing mappings...
                                                          - CODE:  - node: primary (kind) - Result: "" 

                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 12: [String ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsStringTypeReference... executing!
                                                        Model Element UnnamedTypeReference created
                                                        Executing queries...
                                                          Query t with 1 result nodes - CONTENT in line 12: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: String created


                                                (5/14) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                                                RULE: mapTypedMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } ]
                                                    Query stats with 3 result nodes
                                                    Query name with 1 result nodes - CONTENT in line 15: [ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } ]
                                                    Query rtype with 1 result nodes - CONTENT in line 15: [ActionErrors ]
                                                    Query params with 2 result nodes
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: methodDeclaration (kind) - leaf: Identifier (kind) - validate (value) 
                                                    - QUERY_RESULT: 2 bindings:
                                                      (1/2) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                      RULE: mapsFormalParameterDefinition... executing!
                                                        Model Element FormalParameterDefinition created
                                                        Executing queries...
                                                          Query name with 1 result nodes - CONTENT in line 15: [mapping ]
                                                          Query fpd with 1 result nodes - CONTENT : [ActionMapping mapping , HttpServletRequest request ]
                                                          Query type with 1 result nodes - CONTENT in line 15: [ActionMapping ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: Name created
                                                          - QUERY_ACCESS: variable: name - 
                                                            node: variableDeclaratorId (kind) - leaf: Identifier (kind) - mapping (value) 
                                                          - CALL RULE: 1 bindings:
                                                            (1/1) result node: type (kind) calling mapTypeReference rule

                                                            RULE: mapTypeReference... executing!
                                                            Skip Rule mapTypeReference executing...
                                                            Executing skip query...
                                                              Query t with 1 result nodes - CONTENT in line 15: [ActionMapping ]
                                                              Query primType with 0 result nodes
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapsNamedTypeReference... executing!
                                                              Model Element NamedTypeReference created
                                                              Executing queries...
                                                                Query locatedType with 0 result nodes
                                                                Query t with 1 result nodes - CONTENT in line 15: [ActionMapping ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: t - 
                                                                  node: type (kind) - leaf: Identifier (kind) - ActionMapping (value) 
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                      (2/2) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                      RULE: mapsFormalParameterDefinition... executing!
                                                        Model Element FormalParameterDefinition created
                                                        Executing queries...
                                                          Query name with 1 result nodes - CONTENT in line 15: [request ]
                                                          Query fpd with 1 result nodes - CONTENT : [HttpServletRequest request ]
                                                          Query type with 1 result nodes - CONTENT in line 15: [HttpServletRequest ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: Name created
                                                          - QUERY_ACCESS: variable: name - 
                                                            node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                                                          - CALL RULE: 1 bindings:
                                                            (1/1) result node: type (kind) calling mapTypeReference rule

                                                            RULE: mapTypeReference... executing!
                                                            Skip Rule mapTypeReference executing...
                                                            Executing skip query...
                                                              Query t with 1 result nodes - CONTENT in line 15: [HttpServletRequest ]
                                                              Query primType with 0 result nodes
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapsNamedTypeReference... executing!
                                                              Model Element NamedTypeReference created
                                                              Executing queries...
                                                                Query locatedType with 0 result nodes
                                                                Query t with 1 result nodes - CONTENT in line 15: [HttpServletRequest ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: t - 
                                                                  node: type (kind) - leaf: Identifier (kind) - HttpServletRequest (value) 
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                    - QUERY_RESULT: 3 bindings:
                                                      (1/3) result node: blockStatement (kind). Rule... calling mapDeclarationOrDefinitionStatement rule

                                                      RULE: mapDeclarationOrDefinitionStatement... executing!
                                                        Model Element DeclarationOrDefinitionStatement created
                                                        Executing queries...
                                                          Query var with 1 result nodes - CONTENT in line 16: [ActionErrors errores = new ActionErrors ( ) ; ]
                                                          Query bs with 1 result nodes - CONTENT : [ActionErrors errores = new ActionErrors ( ) ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: localVariableDeclaration (kind). Rule... calling mapVariableDefinition rule

                                                            RULE: mapVariableDefinition... executing!
                                                              Model Element VariableDefinition created
                                                              Executing queries...
                                                                Query name with 1 result nodes - CONTENT in line 16: [errores = new ActionErrors ( ) ]
                                                                Query lvd with 1 result nodes - CONTENT in line 16: [ActionErrors errores = new ActionErrors ( ) ; ]
                                                                Query init with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                Query type with 1 result nodes - CONTENT in line 16: [ActionErrors ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: name - 
                                                                  node: variableDeclarator (kind) - leaf: Identifier (kind) - errores (value) 
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                  RULE: skipConditionalExpression... executing!
                                                                  Skip Rule skipConditionalExpression executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [new ActionErrors ( ) ]
                                                                    Query next with 1 result nodes - CONTENT in line 16: [new ActionErrors ( ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapNew... executing!
                                                                    Model Element NewExpression created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 16: [new ActionErrors ( ) ]
                                                                      Query args with 0 result nodes
                                                                      Query name with 1 result nodes - CONTENT in line 16: [ActionErrors ]
                                                                    Executing mappings...
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: createdName (kind). Rule... calling mapTypeReference4New rule

                                                                        RULE: mapTypeReference4New... executing!
                                                                        Skip Rule mapTypeReference4New executing...
                                                                        Executing skip query...
                                                                          Query cast with 1 result nodes - CONTENT in line 16: [ActionErrors ]
                                                                          Query primType with 0 result nodes
                                                                          Query cn with 1 result nodes - CONTENT in line 16: [ActionErrors ]
                                                                        - IF detected...false! executing ELSE part 
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: mapsNamedTypeReference... executing!
                                                                          Model Element NamedTypeReference created
                                                                          Executing queries...
                                                                            Query locatedType with 0 result nodes
                                                                            Query t with 1 result nodes - CONTENT in line 16: [ActionErrors ]
                                                                          Executing mappings...
                                                                            - OPERATION_CREATION: Name created
                                                                            - QUERY_ACCESS: variable: t - 
                                                                              node: type (kind) - leaf: Identifier (kind) - ActionErrors (value) 
                                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                                      - CALL RULE: THE VARIABLE DOESNT EXIST

                                                                - CALL RULE: 1 bindings:
                                                                  (1/1) result node: type (kind) calling mapTypeReference rule

                                                                  RULE: mapTypeReference... executing!
                                                                  Skip Rule mapTypeReference executing...
                                                                  Executing skip query...
                                                                    Query t with 1 result nodes - CONTENT in line 16: [ActionErrors ]
                                                                    Query primType with 0 result nodes
                                                                  - IF detected...false! executing ELSE part 
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapsNamedTypeReference... executing!
                                                                    Model Element NamedTypeReference created
                                                                    Executing queries...
                                                                      Query locatedType with 0 result nodes
                                                                      Query t with 1 result nodes - CONTENT in line 16: [ActionErrors ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: t - 
                                                                        node: type (kind) - leaf: Identifier (kind) - ActionErrors (value) 
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                                      (2/3) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 17: [if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; ]
                                                        Query bs with 1 result nodes - CONTENT : [if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapIfStatement... executing!
                                                        Model Element IfStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                          Query thenb with 1 result nodes - CONTENT in line 18: [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; ]
                                                          Query elseb with 0 result nodes
                                                          Query st with 1 result nodes - CONTENT in line 17: [if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                            RULE: skipConditionalExpression... executing!
                                                            Skip Rule skipConditionalExpression executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipOr... executing!
                                                            Skip Rule skipOr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAnd... executing!
                                                            Skip Rule skipAnd executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipEquality... executing!
                                                            Skip Rule skipEquality executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipComparators... executing!
                                                            Skip Rule skipComparators executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAdditive... executing!
                                                            Skip Rule skipAdditive executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipMultiplicative... executing!
                                                            Skip Rule skipMultiplicative executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipPrimary... executing!
                                                            Skip Rule skipPrimary executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                            Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [isTituloNoValido ( getTitulo ( ) ) ]
                                                              Query next with 1 result nodes - CONTENT in line 17: [isTituloNoValido ( getTitulo ( ) ) ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapMethodCall... executing!
                                                              Model Element FunctionCallExpression created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT in line 17: [isTituloNoValido ( getTitulo ( ) ) ]
                                                                Query typeTypedMet with 1 result nodes - CONTENT : [boolean ]
                                                                Query args with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                Query locTypedMet with 1 result nodes - CONTENT : [private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } ]
                                                                Query locVoidMet with 0 result nodes
                                                                Query containerCla with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: IdentifierReference created
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: exp - 
                                                                  node: primary (kind) - leaf: Identifier (kind) - isTituloNoValido (value) 
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                                                                  RULE: mapTypedMethod... executing!
                                                                    Model Element FunctionDefinition created
                                                                    Executing queries...
                                                                      Query cbd with 1 result nodes - CONTENT : [private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } ]
                                                                      Query stats with 2 result nodes
                                                                      Query name with 1 result nodes - CONTENT in line 22: [boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } ]
                                                                      Query rtype with 1 result nodes - CONTENT : [boolean ]
                                                                      Query params with 1 result nodes - CONTENT : [String t ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: name - 
                                                                        node: methodDeclaration (kind) - leaf: Identifier (kind) - isTituloNoValido (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... executing!
                                                                          Model Element FormalParameterDefinition created
                                                                          Executing queries...
                                                                            Query name with 1 result nodes - CONTENT in line 22: [t ]
                                                                            Query fpd with 1 result nodes - CONTENT : [String t ]
                                                                            Query type with 1 result nodes - CONTENT in line 22: [String ]
                                                                          Executing mappings...
                                                                            - OPERATION_CREATION: Name created
                                                                            - QUERY_ACCESS: variable: name - 
                                                                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - t (value) 
                                                                            - CALL RULE: 1 bindings:
                                                                              (1/1) result node: type (kind) calling mapTypeReference rule

                                                                              RULE: mapTypeReference... executing!
                                                                              Skip Rule mapTypeReference executing...
                                                                              Executing skip query...
                                                                                Query t with 1 result nodes - CONTENT in line 22: [String ]
                                                                                Query primType with 0 result nodes
                                                                              - IF detected...false! executing ELSE part 
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: mapsStringTypeReference... executing!
                                                                                Model Element UnnamedTypeReference created
                                                                                Executing queries...
                                                                                  Query t with 1 result nodes - CONTENT in line 22: [String ]
                                                                                Executing mappings...
                                                                                  - OPERATION_CREATION: String created


                                                                      - QUERY_RESULT: 2 bindings:
                                                                        (1/2) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                                        RULE: skipBlockStatement... executing!
                                                                        Skip Rule skipBlockStatement executing...
                                                                        Executing skip query...
                                                                          Query next with 1 result nodes - CONTENT in line 23: [if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; ]
                                                                          Query bs with 1 result nodes - CONTENT : [if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: mapIfStatement... executing!
                                                                          Model Element IfStatement created
                                                                          Executing queries...
                                                                            Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) || t . contains ( "#" ) ]
                                                                            Query thenb with 1 result nodes - CONTENT in line 23: [return true ; ]
                                                                            Query elseb with 0 result nodes
                                                                            Query st with 1 result nodes - CONTENT in line 23: [if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; ]
                                                                          Executing mappings...
                                                                            - QUERY_RESULT: 1 bindings:
                                                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                              RULE: skipConditionalExpression... executing!
                                                                              Skip Rule skipConditionalExpression executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) || t . contains ( "#" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [t . contains ( "$" ) || t . contains ( "#" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: mapOrExpression... executing!
                                                                                Model Element BinaryExpression created
                                                                                Executing queries...
                                                                                  Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) || t . contains ( "#" ) ]
                                                                                  Query exp2 with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                  Query exp1 with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                Executing mappings...
                                                                                  - QUERY_RESULT: 1 bindings:
                                                                                    (1/1) result node: conditionalAndExpression (kind). Rule... calling skipAnd rule

                                                                                    RULE: skipAnd... executing!
                                                                                    Skip Rule skipAnd executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipEquality... executing!
                                                                                    Skip Rule skipEquality executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipComparators... executing!
                                                                                    Skip Rule skipComparators executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipAdditive... executing!
                                                                                    Skip Rule skipAdditive executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipMultiplicative... executing!
                                                                                    Skip Rule skipMultiplicative executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipPrimary... executing!
                                                                                    Skip Rule skipPrimary executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "$" ) ]
                                                                                      Query next with 1 result nodes - CONTENT in line 23: [t . contains ( "$" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: mapMethodCallWithReceptor... executing!
                                                                                      Model Element FunctionCallExpression created
                                                                                      Executing queries...
                                                                                        Query containerMet with 1 result nodes - CONTENT : [boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } ]
                                                                                        Query exp with 1 result nodes - CONTENT in line 23: [t . contains ( "$" ) ]
                                                                                        Query locInstVar with 0 result nodes
                                                                                        Query locVar with 0 result nodes
                                                                                        Query args with 1 result nodes - CONTENT : ["$" ]
                                                                                        Query locParam with 1 result nodes - CONTENT : [String t ]
                                                                                        Query containerCla with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                                      Executing mappings...
                                                                                        - OPERATION_CREATION: NamedTypeReference created
                                                                                        - OPERATION_CREATION: Name created
                                                                                        - QUERY_ACCESS: variable: exp - 
                                                                                          node: primary (kind) - leaf: Identifier (kind) - t (value) 
                                                                                        - QUERY_RESULT: 1 bindings:
                                                                                          (1/1) result node: formalParameterDecls (kind). Rule... RULE NOT FOUND!  FROM: formalParameterDecls TO: type
                                                                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                                        - OPERATION_CREATION: FunctionCallExpression created
                                                                                        - OPERATION_CREATION: NamedTypeReference created
                                                                                        - OPERATION_CREATION: Name created
                                                                                        - QUERY_ACCESS: variable: exp - 
                                                                                          node: primary (kind) - leaf: Identifier (kind) - contains (value) 
                                                                                        - CALL RULE: 1 bindings:
                                                                                          (1/1) result node: expression (kind) calling mapArgument rule

                                                                                          RULE: mapArgument... executing!
                                                                                            Model Element ActualParameterExpression created
                                                                                            Executing queries...
                                                                                              Query expArg with 1 result nodes - CONTENT : ["$" ]
                                                                                            Executing mappings...
                                                                                              - QUERY_RESULT: 1 bindings:
                                                                                                (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                                                RULE: skipConditionalExpression... executing!
                                                                                                Skip Rule skipConditionalExpression executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipOr... executing!
                                                                                                Skip Rule skipOr executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipAnd... executing!
                                                                                                Skip Rule skipAnd executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipEquality... executing!
                                                                                                Skip Rule skipEquality executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipComparators... executing!
                                                                                                Skip Rule skipComparators executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipAdditive... executing!
                                                                                                Skip Rule skipAdditive executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipMultiplicative... executing!
                                                                                                Skip Rule skipMultiplicative executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipPrimary... executing!
                                                                                                Skip Rule skipPrimary executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                                                Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["$" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: mapLiteral... executing!
                                                                                                  Model Element Literal created
                                                                                                  Executing queries...
                                                                                                    Query exp with 1 result nodes - CONTENT : ["$" ]
                                                                                                  Executing mappings...
                                                                                                    - CODE:  - node: primary (kind) - Result: "$" 



                                                                                  - OPERATION_CREATION: Or created
                                                                                  - QUERY_RESULT: 1 bindings:
                                                                                    (1/1) result node: conditionalAndExpression (kind). Rule... calling skipAnd rule

                                                                                    RULE: skipAnd... executing!
                                                                                    Skip Rule skipAnd executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipEquality... executing!
                                                                                    Skip Rule skipEquality executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipComparators... executing!
                                                                                    Skip Rule skipComparators executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipAdditive... executing!
                                                                                    Skip Rule skipAdditive executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipMultiplicative... executing!
                                                                                    Skip Rule skipMultiplicative executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipPrimary... executing!
                                                                                    Skip Rule skipPrimary executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                      Query next with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [t . contains ( "#" ) ]
                                                                                      Query next with 1 result nodes - CONTENT in line 23: [t . contains ( "#" ) ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: mapMethodCallWithReceptor... executing!
                                                                                      Model Element FunctionCallExpression created
                                                                                      Executing queries...
                                                                                        Query containerMet with 1 result nodes - CONTENT : [boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } ]
                                                                                        Query exp with 1 result nodes - CONTENT in line 23: [t . contains ( "#" ) ]
                                                                                        Query locInstVar with 0 result nodes
                                                                                        Query locVar with 0 result nodes
                                                                                        Query args with 1 result nodes - CONTENT : ["#" ]
                                                                                        Query locParam with 1 result nodes - CONTENT : [String t ]
                                                                                        Query containerCla with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                                      Executing mappings...
                                                                                        - OPERATION_CREATION: NamedTypeReference created
                                                                                        - OPERATION_CREATION: Name created
                                                                                        - QUERY_ACCESS: variable: exp - 
                                                                                          node: primary (kind) - leaf: Identifier (kind) - t (value) 
                                                                                        - QUERY_RESULT: 1 bindings:
                                                                                          (1/1) result node: formalParameterDecls (kind). Rule... RULE NOT FOUND!  FROM: formalParameterDecls TO: type
                                                                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                                        - OPERATION_CREATION: FunctionCallExpression created
                                                                                        - OPERATION_CREATION: NamedTypeReference created
                                                                                        - OPERATION_CREATION: Name created
                                                                                        - QUERY_ACCESS: variable: exp - 
                                                                                          node: primary (kind) - leaf: Identifier (kind) - contains (value) 
                                                                                        - CALL RULE: 1 bindings:
                                                                                          (1/1) result node: expression (kind) calling mapArgument rule

                                                                                          RULE: mapArgument... executing!
                                                                                            Model Element ActualParameterExpression created
                                                                                            Executing queries...
                                                                                              Query expArg with 1 result nodes - CONTENT : ["#" ]
                                                                                            Executing mappings...
                                                                                              - QUERY_RESULT: 1 bindings:
                                                                                                (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                                                RULE: skipConditionalExpression... executing!
                                                                                                Skip Rule skipConditionalExpression executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipOr... executing!
                                                                                                Skip Rule skipOr executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipAnd... executing!
                                                                                                Skip Rule skipAnd executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipEquality... executing!
                                                                                                Skip Rule skipEquality executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipComparators... executing!
                                                                                                Skip Rule skipComparators executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipAdditive... executing!
                                                                                                Skip Rule skipAdditive executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipMultiplicative... executing!
                                                                                                Skip Rule skipMultiplicative executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipPrimary... executing!
                                                                                                Skip Rule skipPrimary executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                                                Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                                                Executing skip query...
                                                                                                  Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Query next with 1 result nodes - CONTENT : ["#" ]
                                                                                                Locating skip query... skip located! 
                                                                                                Skipping to rule...
                                                                                                RULE: mapLiteral... executing!
                                                                                                  Model Element Literal created
                                                                                                  Executing queries...
                                                                                                    Query exp with 1 result nodes - CONTENT : ["#" ]
                                                                                                  Executing mappings...
                                                                                                    - CODE:  - node: primary (kind) - Result: "#" 




                                                                            - QUERY_RESULT: 1 bindings:
                                                                              (1/1) result node: statement (kind). Rule... calling mapReturnStatement rule

                                                                              RULE: mapReturnStatement... executing!
                                                                                Model Element ReturnStatement created
                                                                                Executing queries...
                                                                                  Query exp with 1 result nodes - CONTENT : [true ]
                                                                                  Query st with 1 result nodes - CONTENT in line 23: [return true ; ]
                                                                                Executing mappings...
                                                                                  - QUERY_RESULT: 1 bindings:
                                                                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                                    RULE: skipConditionalExpression... executing!
                                                                                    Skip Rule skipConditionalExpression executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipOr... executing!
                                                                                    Skip Rule skipOr executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipAnd... executing!
                                                                                    Skip Rule skipAnd executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipEquality... executing!
                                                                                    Skip Rule skipEquality executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipComparators... executing!
                                                                                    Skip Rule skipComparators executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipAdditive... executing!
                                                                                    Skip Rule skipAdditive executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipMultiplicative... executing!
                                                                                    Skip Rule skipMultiplicative executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipPrimary... executing!
                                                                                    Skip Rule skipPrimary executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                                    Executing skip query...
                                                                                      Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Query next with 1 result nodes - CONTENT : [true ]
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: mapLiteral... executing!
                                                                                      Model Element Literal created
                                                                                      Executing queries...
                                                                                        Query exp with 1 result nodes - CONTENT : [true ]
                                                                                      Executing mappings...
                                                                                        - CODE:  - node: primary (kind) - Result: true 


                                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                                        (2/2) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                                        RULE: skipBlockStatement... executing!
                                                                        Skip Rule skipBlockStatement executing...
                                                                        Executing skip query...
                                                                          Query next with 1 result nodes - CONTENT in line 24: [return false ; ]
                                                                          Query bs with 1 result nodes - CONTENT : [return false ; ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: mapReturnStatement... executing!
                                                                          Model Element ReturnStatement created
                                                                          Executing queries...
                                                                            Query exp with 1 result nodes - CONTENT : [false ]
                                                                            Query st with 1 result nodes - CONTENT in line 24: [return false ; ]
                                                                          Executing mappings...
                                                                            - QUERY_RESULT: 1 bindings:
                                                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                              RULE: skipConditionalExpression... executing!
                                                                              Skip Rule skipConditionalExpression executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipOr... executing!
                                                                              Skip Rule skipOr executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipAnd... executing!
                                                                              Skip Rule skipAnd executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipEquality... executing!
                                                                              Skip Rule skipEquality executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipComparators... executing!
                                                                              Skip Rule skipComparators executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipAdditive... executing!
                                                                              Skip Rule skipAdditive executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipMultiplicative... executing!
                                                                              Skip Rule skipMultiplicative executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipPrimary... executing!
                                                                              Skip Rule skipPrimary executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Query next with 1 result nodes - CONTENT : [false ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: mapLiteral... executing!
                                                                                Model Element Literal created
                                                                                Executing queries...
                                                                                  Query exp with 1 result nodes - CONTENT : [false ]
                                                                                Executing mappings...
                                                                                  - CODE:  - node: primary (kind) - Result: false 


                                                                      - CALL RULE: 1 bindings:
                                                                        (1/1) result node: type (kind) calling mapTypeReference rule

                                                                        RULE: mapTypeReference... executing!
                                                                        Skip Rule mapTypeReference executing...
                                                                        Executing skip query...
                                                                          Query t with 1 result nodes - CONTENT : [boolean ]
                                                                          Query primType with 1 result nodes - CONTENT in line 22: [boolean ]
                                                                        - IF detected...true!
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: mapsUnnamedTypeReference... executing!
                                                                          Model Element UnnamedTypeReference created
                                                                          Executing queries...
                                                                            Query isBoolean with 1 result nodes - CONTENT in line 22: [boolean ]
                                                                            Query pt with 1 result nodes - CONTENT in line 22: [boolean ]
                                                                          Executing mappings...
                                                                              - IF detected...true!
                                                                              - OPERATION_CREATION: Boolean created


                                                                - CALL RULE: 1 bindings:
                                                                  (1/1) result node: expression (kind) calling mapArgument rule

                                                                  RULE: mapArgument... executing!
                                                                    Model Element ActualParameterExpression created
                                                                    Executing queries...
                                                                      Query expArg with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                    Executing mappings...
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                        RULE: skipConditionalExpression... executing!
                                                                        Skip Rule skipConditionalExpression executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: skipOr... executing!
                                                                        Skip Rule skipOr executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: skipAnd... executing!
                                                                        Skip Rule skipAnd executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: skipEquality... executing!
                                                                        Skip Rule skipEquality executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: skipComparators... executing!
                                                                        Skip Rule skipComparators executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: skipAdditive... executing!
                                                                        Skip Rule skipAdditive executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: skipMultiplicative... executing!
                                                                        Skip Rule skipMultiplicative executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: skipPrimary... executing!
                                                                        Skip Rule skipPrimary executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                        Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                        Executing skip query...
                                                                          Query exp with 1 result nodes - CONTENT : [getTitulo ( ) ]
                                                                          Query next with 1 result nodes - CONTENT in line 17: [getTitulo ( ) ]
                                                                        Locating skip query... skip located! 
                                                                        Skipping to rule...
                                                                        RULE: mapMethodCall... executing!
                                                                          Model Element FunctionCallExpression created
                                                                          Executing queries...
                                                                            Query exp with 1 result nodes - CONTENT in line 17: [getTitulo ( ) ]
                                                                            Query typeTypedMet with 0 result nodes
                                                                            Query args with 0 result nodes
                                                                            Query locTypedMet with 0 result nodes
                                                                            Query locVoidMet with 0 result nodes
                                                                            Query containerCla with 0 result nodes
                                                                          Executing mappings...
                                                                            - OPERATION_CREATION: IdentifierReference created
                                                                            - OPERATION_CREATION: Name created
                                                                            - QUERY_ACCESS: variable: exp - 
                                                                              node: primary (kind) - leaf: Identifier (kind) - getTitulo (value) 
                                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                            - CALL RULE: THE VARIABLE DOESNT EXIST
                                                                              - IF detected...false! it doesn't have ELSE part 


                                                                  - IF detected...true!
                                                                  - OPERATION_CREATION: UnnamedTypeReference created
                                                                  - CALL RULE: 1 bindings:
                                                                    (1/1) result node: type (kind) calling mapTypeReference rule

                                                                    RULE: mapTypeReference... executing!
                                                                    Skip Rule mapTypeReference executing...
                                                                    Executing skip query...
                                                                      Query t with 1 result nodes - CONTENT : [boolean ]
                                                                      Query primType with 1 result nodes - CONTENT in line 22: [boolean ]
                                                                    - IF detected...true!
                                                                    Locating skip query... skip located! 
                                                                    Skipping to rule...
                                                                    RULE: mapsUnnamedTypeReference... cached!!

                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: statement (kind). Rule... calling mapStatementExpression rule

                                                            RULE: mapStatementExpression... executing!
                                                              Model Element ExpressionStatement created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                Query st with 1 result nodes - CONTENT in line 18: [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; ]
                                                              Executing mappings...
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                  RULE: skipConditionalExpression... executing!
                                                                  Skip Rule skipConditionalExpression executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                    Query next with 1 result nodes - CONTENT in line 18: [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapMethodCallWithReceptor... executing!
                                                                    Model Element FunctionCallExpression created
                                                                    Executing queries...
                                                                      Query containerMet with 1 result nodes - CONTENT : [ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } ]
                                                                      Query exp with 1 result nodes - CONTENT in line 18: [errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ]
                                                                      Query locInstVar with 0 result nodes
                                                                      Query locVar with 1 result nodes - CONTENT : [ActionErrors errores = new ActionErrors ( ) ; ]
                                                                      Query args with 2 result nodes
                                                                      Query locParam with 0 result nodes
                                                                      Query containerCla with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: NamedTypeReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - errores (value) 
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: type
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - OPERATION_CREATION: FunctionCallExpression created
                                                                      - OPERATION_CREATION: NamedTypeReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - add (value) 
                                                                      - CALL RULE: 2 bindings:
                                                                        (1/2) result node: expression (kind) calling mapArgument rule

                                                                        RULE: mapArgument... executing!
                                                                          Model Element ActualParameterExpression created
                                                                          Executing queries...
                                                                            Query expArg with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                          Executing mappings...
                                                                            - QUERY_RESULT: 1 bindings:
                                                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                              RULE: skipConditionalExpression... executing!
                                                                              Skip Rule skipConditionalExpression executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipOr... executing!
                                                                              Skip Rule skipOr executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipAnd... executing!
                                                                              Skip Rule skipAnd executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipEquality... executing!
                                                                              Skip Rule skipEquality executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipComparators... executing!
                                                                              Skip Rule skipComparators executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipAdditive... executing!
                                                                              Skip Rule skipAdditive executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipMultiplicative... executing!
                                                                              Skip Rule skipMultiplicative executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipPrimary... executing!
                                                                              Skip Rule skipPrimary executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [ActionErrors . GLOBAL_ERROR ]
                                                                                Query next with 1 result nodes - CONTENT in line 18: [ActionErrors . GLOBAL_ERROR ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: mapMemberAccess... executing!
                                                                                Model Element QualifiedOverData created
                                                                                Executing queries...
                                                                                  Query exp with 1 result nodes - CONTENT in line 18: [ActionErrors . GLOBAL_ERROR ]
                                                                                Executing mappings...
                                                                                  - OPERATION_CREATION: IdentifierReference created
                                                                                  - OPERATION_CREATION: Name created
                                                                                  - QUERY_ACCESS: variable: exp - 
                                                                                    node: primary (kind) - leaf: Identifier (kind) - ActionErrors (value) 
                                                                                  - OPERATION_CREATION: IdentifierReference created
                                                                                  - OPERATION_CREATION: Name created
                                                                                  - QUERY_ACCESS: variable: exp - 
                                                                                    node: primary (kind) - leaf: Identifier (kind) - GLOBAL_ERROR (value) 


                                                                        (2/2) result node: expression (kind) calling mapArgument rule

                                                                        RULE: mapArgument... executing!
                                                                          Model Element ActualParameterExpression created
                                                                          Executing queries...
                                                                            Query expArg with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                          Executing mappings...
                                                                            - QUERY_RESULT: 1 bindings:
                                                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                              RULE: skipConditionalExpression... executing!
                                                                              Skip Rule skipConditionalExpression executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipOr... executing!
                                                                              Skip Rule skipOr executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipAnd... executing!
                                                                              Skip Rule skipAnd executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipEquality... executing!
                                                                              Skip Rule skipEquality executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipComparators... executing!
                                                                              Skip Rule skipComparators executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipAdditive... executing!
                                                                              Skip Rule skipAdditive executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipMultiplicative... executing!
                                                                              Skip Rule skipMultiplicative executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipPrimary... executing!
                                                                              Skip Rule skipPrimary executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                              Executing skip query...
                                                                                Query exp with 1 result nodes - CONTENT : [new ActionError ( "tablon.error" ) ]
                                                                                Query next with 1 result nodes - CONTENT in line 18: [new ActionError ( "tablon.error" ) ]
                                                                              Locating skip query... skip located! 
                                                                              Skipping to rule...
                                                                              RULE: mapNew... executing!
                                                                                Model Element NewExpression created
                                                                                Executing queries...
                                                                                  Query exp with 1 result nodes - CONTENT in line 18: [new ActionError ( "tablon.error" ) ]
                                                                                  Query args with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                  Query name with 1 result nodes - CONTENT in line 18: [ActionError ]
                                                                                Executing mappings...
                                                                                  - QUERY_RESULT: 1 bindings:
                                                                                    (1/1) result node: createdName (kind). Rule... calling mapTypeReference4New rule

                                                                                    RULE: mapTypeReference4New... executing!
                                                                                    Skip Rule mapTypeReference4New executing...
                                                                                    Executing skip query...
                                                                                      Query cast with 1 result nodes - CONTENT in line 18: [ActionError ]
                                                                                      Query primType with 0 result nodes
                                                                                      Query cn with 1 result nodes - CONTENT in line 18: [ActionError ]
                                                                                    - IF detected...false! executing ELSE part 
                                                                                    Locating skip query... skip located! 
                                                                                    Skipping to rule...
                                                                                    RULE: mapsNamedTypeReference... executing!
                                                                                      Model Element NamedTypeReference created
                                                                                      Executing queries...
                                                                                        Query locatedType with 0 result nodes
                                                                                        Query t with 1 result nodes - CONTENT in line 18: [ActionError ]
                                                                                      Executing mappings...
                                                                                        - OPERATION_CREATION: Name created
                                                                                        - QUERY_ACCESS: variable: t - 
                                                                                          node: type (kind) - leaf: Identifier (kind) - ActionError (value) 
                                                                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                                                  - CALL RULE: 1 bindings:
                                                                                    (1/1) result node: expression (kind) calling mapArgument rule

                                                                                    RULE: mapArgument... executing!
                                                                                      Model Element ActualParameterExpression created
                                                                                      Executing queries...
                                                                                        Query expArg with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                      Executing mappings...
                                                                                        - QUERY_RESULT: 1 bindings:
                                                                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                                          RULE: skipConditionalExpression... executing!
                                                                                          Skip Rule skipConditionalExpression executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: skipOr... executing!
                                                                                          Skip Rule skipOr executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: skipAnd... executing!
                                                                                          Skip Rule skipAnd executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: skipEquality... executing!
                                                                                          Skip Rule skipEquality executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: skipComparators... executing!
                                                                                          Skip Rule skipComparators executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: skipAdditive... executing!
                                                                                          Skip Rule skipAdditive executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: skipMultiplicative... executing!
                                                                                          Skip Rule skipMultiplicative executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: skipPrimary... executing!
                                                                                          Skip Rule skipPrimary executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                                          Executing skip query...
                                                                                            Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Query next with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                          Locating skip query... skip located! 
                                                                                          Skipping to rule...
                                                                                          RULE: mapLiteral... executing!
                                                                                            Model Element Literal created
                                                                                            Executing queries...
                                                                                              Query exp with 1 result nodes - CONTENT : ["tablon.error" ]
                                                                                            Executing mappings...
                                                                                              - CODE:  - node: primary (kind) - Result: "tablon.error" 






                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                                      (3/3) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 19: [return errores ; ]
                                                        Query bs with 1 result nodes - CONTENT : [return errores ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapReturnStatement... executing!
                                                        Model Element ReturnStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [errores ]
                                                          Query st with 1 result nodes - CONTENT in line 19: [return errores ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                            RULE: skipConditionalExpression... executing!
                                                            Skip Rule skipConditionalExpression executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT : [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipOr... executing!
                                                            Skip Rule skipOr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT : [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAnd... executing!
                                                            Skip Rule skipAnd executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT : [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipEquality... executing!
                                                            Skip Rule skipEquality executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT : [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipComparators... executing!
                                                            Skip Rule skipComparators executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT : [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAdditive... executing!
                                                            Skip Rule skipAdditive executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT : [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipMultiplicative... executing!
                                                            Skip Rule skipMultiplicative executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT : [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipPrimary... executing!
                                                            Skip Rule skipPrimary executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT : [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                            Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [errores ]
                                                              Query next with 1 result nodes - CONTENT in line 19: [errores ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapVariableRef... executing!
                                                              Model Element IdentifierReference created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT in line 19: [errores ]
                                                                Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                Query locInstVar with 0 result nodes
                                                                Query locVar with 1 result nodes - CONTENT : [ActionErrors errores = new ActionErrors ( ) ; ]
                                                                Query method with 1 result nodes - CONTENT : [public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } ]
                                                                Query locParam with 0 result nodes
                                                              Executing mappings...
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: exp - 
                                                                  node: primary (kind) - leaf: Identifier (kind) - errores (value) 
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: refersTo
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 15: [ActionErrors ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsNamedTypeReference... executing!
                                                        Model Element NamedTypeReference created
                                                        Executing queries...
                                                          Query locatedType with 0 result nodes
                                                          Query t with 1 result nodes - CONTENT in line 15: [ActionErrors ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: Name created
                                                          - QUERY_ACCESS: variable: t - 
                                                            node: type (kind) - leaf: Identifier (kind) - ActionErrors (value) 
                                                          - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                (6/14) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                                                RULE: mapTypedMethod... cached!!
                                                (7/14) result node: classBodyDeclaration (kind). Rule... calling voidMethod rule

                                                RULE: voidMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } ]
                                                    Query stats with 1 result nodes - CONTENT : [this . tituloSeleccionado = tituloSeleccionado ; ]
                                                    Query name with 1 result nodes - CONTENT in line 29: [void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } ]
                                                    Query params with 1 result nodes - CONTENT : [String tituloSeleccionado ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: memberDecl (kind) - leaf: Identifier (kind) - setTituloSeleccionado (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                      RULE: mapsFormalParameterDefinition... executing!
                                                        Model Element FormalParameterDefinition created
                                                        Executing queries...
                                                          Query name with 1 result nodes - CONTENT in line 29: [tituloSeleccionado ]
                                                          Query fpd with 1 result nodes - CONTENT : [String tituloSeleccionado ]
                                                          Query type with 1 result nodes - CONTENT in line 29: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: Name created
                                                          - QUERY_ACCESS: variable: name - 
                                                            node: variableDeclaratorId (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                                                          - CALL RULE: 1 bindings:
                                                            (1/1) result node: type (kind) calling mapTypeReference rule

                                                            RULE: mapTypeReference... executing!
                                                            Skip Rule mapTypeReference executing...
                                                            Executing skip query...
                                                              Query t with 1 result nodes - CONTENT in line 29: [String ]
                                                              Query primType with 0 result nodes
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapsStringTypeReference... executing!
                                                              Model Element UnnamedTypeReference created
                                                              Executing queries...
                                                                Query t with 1 result nodes - CONTENT in line 29: [String ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: String created


                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 30: [this . tituloSeleccionado = tituloSeleccionado ; ]
                                                        Query bs with 1 result nodes - CONTENT : [this . tituloSeleccionado = tituloSeleccionado ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapStatementExpression... executing!
                                                        Model Element ExpressionStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado = tituloSeleccionado ]
                                                          Query st with 1 result nodes - CONTENT in line 30: [this . tituloSeleccionado = tituloSeleccionado ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling mapAssignmentExpression rule

                                                            RULE: mapAssignmentExpression... executing!
                                                              Model Element BinaryExpression created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado = tituloSeleccionado ]
                                                                Query exp2 with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                Query exp1 with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                              Executing mappings...
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: conditionalExpression (kind). Rule... calling skipOr rule

                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT in line 30: [this . tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapThisVariable... executing!
                                                                    Model Element QualifiedOverData created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 30: [this . tituloSeleccionado ]
                                                                      Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                      Query locInstVar with 1 result nodes - CONTENT : [private String tituloSeleccionado = "" ; ]
                                                                      Query locVar with 0 result nodes
                                                                      Query method with 1 result nodes - CONTENT : [public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } ]
                                                                      Query locParam with 1 result nodes - CONTENT : [String tituloSeleccionado ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: IdentifierReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - VALUE: nameString (property) - this (value)
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

                                                                        RULE: mapClass... cached!!
                                                                      - OPERATION_CREATION: IdentifierReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                        RULE: mapInstanceVariable... cached!!
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... cached!!

                                                                - OPERATION_CREATION: Assign created
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                  RULE: skipConditionalExpression... executing!
                                                                  Skip Rule skipConditionalExpression executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                                    Query next with 1 result nodes - CONTENT in line 30: [tituloSeleccionado ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapVariableRef... executing!
                                                                    Model Element IdentifierReference created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 30: [tituloSeleccionado ]
                                                                      Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                      Query locInstVar with 1 result nodes - CONTENT : [private String tituloSeleccionado = "" ; ]
                                                                      Query locVar with 0 result nodes
                                                                      Query method with 1 result nodes - CONTENT : [public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } ]
                                                                      Query locParam with 1 result nodes - CONTENT : [String tituloSeleccionado ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                        RULE: mapInstanceVariable... cached!!
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... cached!!




                                                (8/14) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                                                RULE: mapTypedMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } ]
                                                    Query stats with 1 result nodes - CONTENT : [return tituloSeleccionado ; ]
                                                    Query name with 1 result nodes - CONTENT in line 33: [String getTituloSeleccionado ( ) { return tituloSeleccionado ; } ]
                                                    Query rtype with 1 result nodes - CONTENT in line 33: [String ]
                                                    Query params with 0 result nodes
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: methodDeclaration (kind) - leaf: Identifier (kind) - getTituloSeleccionado (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 34: [return tituloSeleccionado ; ]
                                                        Query bs with 1 result nodes - CONTENT : [return tituloSeleccionado ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapReturnStatement... executing!
                                                        Model Element ReturnStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                          Query st with 1 result nodes - CONTENT in line 34: [return tituloSeleccionado ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                            RULE: skipConditionalExpression... executing!
                                                            Skip Rule skipConditionalExpression executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipOr... executing!
                                                            Skip Rule skipOr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAnd... executing!
                                                            Skip Rule skipAnd executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipEquality... executing!
                                                            Skip Rule skipEquality executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipComparators... executing!
                                                            Skip Rule skipComparators executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAdditive... executing!
                                                            Skip Rule skipAdditive executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipMultiplicative... executing!
                                                            Skip Rule skipMultiplicative executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipPrimary... executing!
                                                            Skip Rule skipPrimary executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                            Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [tituloSeleccionado ]
                                                              Query next with 1 result nodes - CONTENT in line 34: [tituloSeleccionado ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapVariableRef... executing!
                                                              Model Element IdentifierReference created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT in line 34: [tituloSeleccionado ]
                                                                Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                Query locInstVar with 1 result nodes - CONTENT : [private String tituloSeleccionado = "" ; ]
                                                                Query locVar with 0 result nodes
                                                                Query method with 1 result nodes - CONTENT : [public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } ]
                                                                Query locParam with 0 result nodes
                                                              Executing mappings...
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: exp - 
                                                                  node: primary (kind) - leaf: Identifier (kind) - tituloSeleccionado (value) 
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                  RULE: mapInstanceVariable... cached!!
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 33: [String ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsStringTypeReference... executing!
                                                        Model Element UnnamedTypeReference created
                                                        Executing queries...
                                                          Query t with 1 result nodes - CONTENT in line 33: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: String created


                                                (9/14) result node: classBodyDeclaration (kind). Rule... calling voidMethod rule

                                                RULE: voidMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public void setTitulo ( String titulo ) { this . titulo = titulo ; } ]
                                                    Query stats with 1 result nodes - CONTENT : [this . titulo = titulo ; ]
                                                    Query name with 1 result nodes - CONTENT in line 37: [void setTitulo ( String titulo ) { this . titulo = titulo ; } ]
                                                    Query params with 1 result nodes - CONTENT : [String titulo ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: memberDecl (kind) - leaf: Identifier (kind) - setTitulo (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                      RULE: mapsFormalParameterDefinition... executing!
                                                        Model Element FormalParameterDefinition created
                                                        Executing queries...
                                                          Query name with 1 result nodes - CONTENT in line 37: [titulo ]
                                                          Query fpd with 1 result nodes - CONTENT : [String titulo ]
                                                          Query type with 1 result nodes - CONTENT in line 37: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: Name created
                                                          - QUERY_ACCESS: variable: name - 
                                                            node: variableDeclaratorId (kind) - leaf: Identifier (kind) - titulo (value) 
                                                          - CALL RULE: 1 bindings:
                                                            (1/1) result node: type (kind) calling mapTypeReference rule

                                                            RULE: mapTypeReference... executing!
                                                            Skip Rule mapTypeReference executing...
                                                            Executing skip query...
                                                              Query t with 1 result nodes - CONTENT in line 37: [String ]
                                                              Query primType with 0 result nodes
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapsStringTypeReference... executing!
                                                              Model Element UnnamedTypeReference created
                                                              Executing queries...
                                                                Query t with 1 result nodes - CONTENT in line 37: [String ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: String created


                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 38: [this . titulo = titulo ; ]
                                                        Query bs with 1 result nodes - CONTENT : [this . titulo = titulo ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapStatementExpression... executing!
                                                        Model Element ExpressionStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [this . titulo = titulo ]
                                                          Query st with 1 result nodes - CONTENT in line 38: [this . titulo = titulo ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling mapAssignmentExpression rule

                                                            RULE: mapAssignmentExpression... executing!
                                                              Model Element BinaryExpression created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT : [this . titulo = titulo ]
                                                                Query exp2 with 1 result nodes - CONTENT : [titulo ]
                                                                Query exp1 with 1 result nodes - CONTENT : [this . titulo ]
                                                              Executing mappings...
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: conditionalExpression (kind). Rule... calling skipOr rule

                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [this . titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [this . titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [this . titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [this . titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [this . titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [this . titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [this . titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . titulo ]
                                                                    Query next with 1 result nodes - CONTENT in line 38: [this . titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapThisVariable... executing!
                                                                    Model Element QualifiedOverData created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 38: [this . titulo ]
                                                                      Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                      Query locInstVar with 1 result nodes - CONTENT : [private String titulo = "" ; ]
                                                                      Query locVar with 0 result nodes
                                                                      Query method with 1 result nodes - CONTENT : [public void setTitulo ( String titulo ) { this . titulo = titulo ; } ]
                                                                      Query locParam with 1 result nodes - CONTENT : [String titulo ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: IdentifierReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - VALUE: nameString (property) - this (value)
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

                                                                        RULE: mapClass... cached!!
                                                                      - OPERATION_CREATION: IdentifierReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - titulo (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                        RULE: mapInstanceVariable... cached!!
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... cached!!

                                                                - OPERATION_CREATION: Assign created
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                  RULE: skipConditionalExpression... executing!
                                                                  Skip Rule skipConditionalExpression executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT : [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [titulo ]
                                                                    Query next with 1 result nodes - CONTENT in line 38: [titulo ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapVariableRef... executing!
                                                                    Model Element IdentifierReference created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 38: [titulo ]
                                                                      Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                      Query locInstVar with 1 result nodes - CONTENT : [private String titulo = "" ; ]
                                                                      Query locVar with 0 result nodes
                                                                      Query method with 1 result nodes - CONTENT : [public void setTitulo ( String titulo ) { this . titulo = titulo ; } ]
                                                                      Query locParam with 1 result nodes - CONTENT : [String titulo ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - titulo (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                        RULE: mapInstanceVariable... cached!!
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... cached!!




                                                (10/14) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                                                RULE: mapTypedMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public String getTitulo ( ) { return titulo ; } ]
                                                    Query stats with 1 result nodes - CONTENT : [return titulo ; ]
                                                    Query name with 1 result nodes - CONTENT in line 41: [String getTitulo ( ) { return titulo ; } ]
                                                    Query rtype with 1 result nodes - CONTENT in line 41: [String ]
                                                    Query params with 0 result nodes
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: methodDeclaration (kind) - leaf: Identifier (kind) - getTitulo (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 42: [return titulo ; ]
                                                        Query bs with 1 result nodes - CONTENT : [return titulo ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapReturnStatement... executing!
                                                        Model Element ReturnStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [titulo ]
                                                          Query st with 1 result nodes - CONTENT in line 42: [return titulo ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                            RULE: skipConditionalExpression... executing!
                                                            Skip Rule skipConditionalExpression executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT : [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipOr... executing!
                                                            Skip Rule skipOr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT : [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAnd... executing!
                                                            Skip Rule skipAnd executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT : [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipEquality... executing!
                                                            Skip Rule skipEquality executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT : [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipComparators... executing!
                                                            Skip Rule skipComparators executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT : [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAdditive... executing!
                                                            Skip Rule skipAdditive executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT : [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipMultiplicative... executing!
                                                            Skip Rule skipMultiplicative executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT : [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipPrimary... executing!
                                                            Skip Rule skipPrimary executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT : [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                            Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [titulo ]
                                                              Query next with 1 result nodes - CONTENT in line 42: [titulo ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapVariableRef... executing!
                                                              Model Element IdentifierReference created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT in line 42: [titulo ]
                                                                Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                Query locInstVar with 1 result nodes - CONTENT : [private String titulo = "" ; ]
                                                                Query locVar with 0 result nodes
                                                                Query method with 1 result nodes - CONTENT : [public String getTitulo ( ) { return titulo ; } ]
                                                                Query locParam with 0 result nodes
                                                              Executing mappings...
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: exp - 
                                                                  node: primary (kind) - leaf: Identifier (kind) - titulo (value) 
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                  RULE: mapInstanceVariable... cached!!
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 41: [String ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsStringTypeReference... executing!
                                                        Model Element UnnamedTypeReference created
                                                        Executing queries...
                                                          Query t with 1 result nodes - CONTENT in line 41: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: String created


                                                (11/14) result node: classBodyDeclaration (kind). Rule... calling voidMethod rule

                                                RULE: voidMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public void setContenido ( String contenido ) { this . contenido = contenido ; } ]
                                                    Query stats with 1 result nodes - CONTENT : [this . contenido = contenido ; ]
                                                    Query name with 1 result nodes - CONTENT in line 45: [void setContenido ( String contenido ) { this . contenido = contenido ; } ]
                                                    Query params with 1 result nodes - CONTENT : [String contenido ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: memberDecl (kind) - leaf: Identifier (kind) - setContenido (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                      RULE: mapsFormalParameterDefinition... executing!
                                                        Model Element FormalParameterDefinition created
                                                        Executing queries...
                                                          Query name with 1 result nodes - CONTENT in line 45: [contenido ]
                                                          Query fpd with 1 result nodes - CONTENT : [String contenido ]
                                                          Query type with 1 result nodes - CONTENT in line 45: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: Name created
                                                          - QUERY_ACCESS: variable: name - 
                                                            node: variableDeclaratorId (kind) - leaf: Identifier (kind) - contenido (value) 
                                                          - CALL RULE: 1 bindings:
                                                            (1/1) result node: type (kind) calling mapTypeReference rule

                                                            RULE: mapTypeReference... executing!
                                                            Skip Rule mapTypeReference executing...
                                                            Executing skip query...
                                                              Query t with 1 result nodes - CONTENT in line 45: [String ]
                                                              Query primType with 0 result nodes
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapsStringTypeReference... executing!
                                                              Model Element UnnamedTypeReference created
                                                              Executing queries...
                                                                Query t with 1 result nodes - CONTENT in line 45: [String ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: String created


                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 46: [this . contenido = contenido ; ]
                                                        Query bs with 1 result nodes - CONTENT : [this . contenido = contenido ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapStatementExpression... executing!
                                                        Model Element ExpressionStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [this . contenido = contenido ]
                                                          Query st with 1 result nodes - CONTENT in line 46: [this . contenido = contenido ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling mapAssignmentExpression rule

                                                            RULE: mapAssignmentExpression... executing!
                                                              Model Element BinaryExpression created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT : [this . contenido = contenido ]
                                                                Query exp2 with 1 result nodes - CONTENT : [contenido ]
                                                                Query exp1 with 1 result nodes - CONTENT : [this . contenido ]
                                                              Executing mappings...
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: conditionalExpression (kind). Rule... calling skipOr rule

                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [this . contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [this . contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [this . contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [this . contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [this . contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [this . contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [this . contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . contenido ]
                                                                    Query next with 1 result nodes - CONTENT in line 46: [this . contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapThisVariable... executing!
                                                                    Model Element QualifiedOverData created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 46: [this . contenido ]
                                                                      Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                      Query locInstVar with 1 result nodes - CONTENT : [private String contenido = "" ; ]
                                                                      Query locVar with 0 result nodes
                                                                      Query method with 1 result nodes - CONTENT : [public void setContenido ( String contenido ) { this . contenido = contenido ; } ]
                                                                      Query locParam with 1 result nodes - CONTENT : [String contenido ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: IdentifierReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - VALUE: nameString (property) - this (value)
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

                                                                        RULE: mapClass... cached!!
                                                                      - OPERATION_CREATION: IdentifierReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - contenido (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                        RULE: mapInstanceVariable... cached!!
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... cached!!

                                                                - OPERATION_CREATION: Assign created
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                  RULE: skipConditionalExpression... executing!
                                                                  Skip Rule skipConditionalExpression executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT : [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [contenido ]
                                                                    Query next with 1 result nodes - CONTENT in line 46: [contenido ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapVariableRef... executing!
                                                                    Model Element IdentifierReference created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 46: [contenido ]
                                                                      Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                      Query locInstVar with 1 result nodes - CONTENT : [private String contenido = "" ; ]
                                                                      Query locVar with 0 result nodes
                                                                      Query method with 1 result nodes - CONTENT : [public void setContenido ( String contenido ) { this . contenido = contenido ; } ]
                                                                      Query locParam with 1 result nodes - CONTENT : [String contenido ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - contenido (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                        RULE: mapInstanceVariable... cached!!
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... cached!!




                                                (12/14) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                                                RULE: mapTypedMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public String getContenido ( ) { return contenido ; } ]
                                                    Query stats with 1 result nodes - CONTENT : [return contenido ; ]
                                                    Query name with 1 result nodes - CONTENT in line 49: [String getContenido ( ) { return contenido ; } ]
                                                    Query rtype with 1 result nodes - CONTENT in line 49: [String ]
                                                    Query params with 0 result nodes
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: methodDeclaration (kind) - leaf: Identifier (kind) - getContenido (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 50: [return contenido ; ]
                                                        Query bs with 1 result nodes - CONTENT : [return contenido ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapReturnStatement... executing!
                                                        Model Element ReturnStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [contenido ]
                                                          Query st with 1 result nodes - CONTENT in line 50: [return contenido ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                            RULE: skipConditionalExpression... executing!
                                                            Skip Rule skipConditionalExpression executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT : [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipOr... executing!
                                                            Skip Rule skipOr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT : [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAnd... executing!
                                                            Skip Rule skipAnd executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT : [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipEquality... executing!
                                                            Skip Rule skipEquality executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT : [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipComparators... executing!
                                                            Skip Rule skipComparators executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT : [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAdditive... executing!
                                                            Skip Rule skipAdditive executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT : [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipMultiplicative... executing!
                                                            Skip Rule skipMultiplicative executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT : [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipPrimary... executing!
                                                            Skip Rule skipPrimary executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT : [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                            Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [contenido ]
                                                              Query next with 1 result nodes - CONTENT in line 50: [contenido ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapVariableRef... executing!
                                                              Model Element IdentifierReference created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT in line 50: [contenido ]
                                                                Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                Query locInstVar with 1 result nodes - CONTENT : [private String contenido = "" ; ]
                                                                Query locVar with 0 result nodes
                                                                Query method with 1 result nodes - CONTENT : [public String getContenido ( ) { return contenido ; } ]
                                                                Query locParam with 0 result nodes
                                                              Executing mappings...
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: exp - 
                                                                  node: primary (kind) - leaf: Identifier (kind) - contenido (value) 
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                  RULE: mapInstanceVariable... cached!!
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 49: [String ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsStringTypeReference... executing!
                                                        Model Element UnnamedTypeReference created
                                                        Executing queries...
                                                          Query t with 1 result nodes - CONTENT in line 49: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: String created


                                                (13/14) result node: classBodyDeclaration (kind). Rule... calling voidMethod rule

                                                RULE: voidMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public void setAutor ( String autor ) { this . autor = autor ; } ]
                                                    Query stats with 1 result nodes - CONTENT : [this . autor = autor ; ]
                                                    Query name with 1 result nodes - CONTENT in line 53: [void setAutor ( String autor ) { this . autor = autor ; } ]
                                                    Query params with 1 result nodes - CONTENT : [String autor ]
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: memberDecl (kind) - leaf: Identifier (kind) - setAutor (value) 
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                      RULE: mapsFormalParameterDefinition... executing!
                                                        Model Element FormalParameterDefinition created
                                                        Executing queries...
                                                          Query name with 1 result nodes - CONTENT in line 53: [autor ]
                                                          Query fpd with 1 result nodes - CONTENT : [String autor ]
                                                          Query type with 1 result nodes - CONTENT in line 53: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: Name created
                                                          - QUERY_ACCESS: variable: name - 
                                                            node: variableDeclaratorId (kind) - leaf: Identifier (kind) - autor (value) 
                                                          - CALL RULE: 1 bindings:
                                                            (1/1) result node: type (kind) calling mapTypeReference rule

                                                            RULE: mapTypeReference... executing!
                                                            Skip Rule mapTypeReference executing...
                                                            Executing skip query...
                                                              Query t with 1 result nodes - CONTENT in line 53: [String ]
                                                              Query primType with 0 result nodes
                                                            - IF detected...false! executing ELSE part 
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapsStringTypeReference... executing!
                                                              Model Element UnnamedTypeReference created
                                                              Executing queries...
                                                                Query t with 1 result nodes - CONTENT in line 53: [String ]
                                                              Executing mappings...
                                                                - OPERATION_CREATION: String created


                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 54: [this . autor = autor ; ]
                                                        Query bs with 1 result nodes - CONTENT : [this . autor = autor ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapStatementExpression... executing!
                                                        Model Element ExpressionStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [this . autor = autor ]
                                                          Query st with 1 result nodes - CONTENT in line 54: [this . autor = autor ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling mapAssignmentExpression rule

                                                            RULE: mapAssignmentExpression... executing!
                                                              Model Element BinaryExpression created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT : [this . autor = autor ]
                                                                Query exp2 with 1 result nodes - CONTENT : [autor ]
                                                                Query exp1 with 1 result nodes - CONTENT : [this . autor ]
                                                              Executing mappings...
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: conditionalExpression (kind). Rule... calling skipOr rule

                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . autor ]
                                                                    Query next with 1 result nodes - CONTENT : [this . autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . autor ]
                                                                    Query next with 1 result nodes - CONTENT : [this . autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . autor ]
                                                                    Query next with 1 result nodes - CONTENT : [this . autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . autor ]
                                                                    Query next with 1 result nodes - CONTENT : [this . autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . autor ]
                                                                    Query next with 1 result nodes - CONTENT : [this . autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . autor ]
                                                                    Query next with 1 result nodes - CONTENT : [this . autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . autor ]
                                                                    Query next with 1 result nodes - CONTENT : [this . autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [this . autor ]
                                                                    Query next with 1 result nodes - CONTENT in line 54: [this . autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapThisVariable... executing!
                                                                    Model Element QualifiedOverData created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 54: [this . autor ]
                                                                      Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                      Query locInstVar with 1 result nodes - CONTENT : [private String autor = "" ; ]
                                                                      Query locVar with 0 result nodes
                                                                      Query method with 1 result nodes - CONTENT : [public void setAutor ( String autor ) { this . autor = autor ; } ]
                                                                      Query locParam with 1 result nodes - CONTENT : [String autor ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: IdentifierReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - VALUE: nameString (property) - this (value)
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

                                                                        RULE: mapClass... cached!!
                                                                      - OPERATION_CREATION: IdentifierReference created
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - autor (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                        RULE: mapInstanceVariable... cached!!
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... cached!!

                                                                - OPERATION_CREATION: Assign created
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                                  RULE: skipConditionalExpression... executing!
                                                                  Skip Rule skipConditionalExpression executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT : [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipOr... executing!
                                                                  Skip Rule skipOr executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT : [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAnd... executing!
                                                                  Skip Rule skipAnd executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT : [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipEquality... executing!
                                                                  Skip Rule skipEquality executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT : [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipComparators... executing!
                                                                  Skip Rule skipComparators executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT : [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipAdditive... executing!
                                                                  Skip Rule skipAdditive executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT : [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipMultiplicative... executing!
                                                                  Skip Rule skipMultiplicative executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT : [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipPrimary... executing!
                                                                  Skip Rule skipPrimary executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT : [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                                  Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                                  Executing skip query...
                                                                    Query exp with 1 result nodes - CONTENT : [autor ]
                                                                    Query next with 1 result nodes - CONTENT in line 54: [autor ]
                                                                  Locating skip query... skip located! 
                                                                  Skipping to rule...
                                                                  RULE: mapVariableRef... executing!
                                                                    Model Element IdentifierReference created
                                                                    Executing queries...
                                                                      Query exp with 1 result nodes - CONTENT in line 54: [autor ]
                                                                      Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                      Query locInstVar with 1 result nodes - CONTENT : [private String autor = "" ; ]
                                                                      Query locVar with 0 result nodes
                                                                      Query method with 1 result nodes - CONTENT : [public void setAutor ( String autor ) { this . autor = autor ; } ]
                                                                      Query locParam with 1 result nodes - CONTENT : [String autor ]
                                                                    Executing mappings...
                                                                      - OPERATION_CREATION: Name created
                                                                      - QUERY_ACCESS: variable: exp - 
                                                                        node: primary (kind) - leaf: Identifier (kind) - autor (value) 
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                        RULE: mapInstanceVariable... cached!!
                                                                      - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                      - QUERY_RESULT: 1 bindings:
                                                                        (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                                        RULE: mapsFormalParameterDefinition... cached!!




                                                (14/14) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                                                RULE: mapTypedMethod... executing!
                                                  Model Element FunctionDefinition created
                                                  Executing queries...
                                                    Query cbd with 1 result nodes - CONTENT : [public String getAutor ( ) { return autor ; } ]
                                                    Query stats with 1 result nodes - CONTENT : [return autor ; ]
                                                    Query name with 1 result nodes - CONTENT in line 57: [String getAutor ( ) { return autor ; } ]
                                                    Query rtype with 1 result nodes - CONTENT in line 57: [String ]
                                                    Query params with 0 result nodes
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: name - 
                                                      node: methodDeclaration (kind) - leaf: Identifier (kind) - getAutor (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                                      RULE: skipBlockStatement... executing!
                                                      Skip Rule skipBlockStatement executing...
                                                      Executing skip query...
                                                        Query next with 1 result nodes - CONTENT in line 58: [return autor ; ]
                                                        Query bs with 1 result nodes - CONTENT : [return autor ; ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapReturnStatement... executing!
                                                        Model Element ReturnStatement created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : [autor ]
                                                          Query st with 1 result nodes - CONTENT in line 58: [return autor ; ]
                                                        Executing mappings...
                                                          - QUERY_RESULT: 1 bindings:
                                                            (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                            RULE: skipConditionalExpression... executing!
                                                            Skip Rule skipConditionalExpression executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT : [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipOr... executing!
                                                            Skip Rule skipOr executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT : [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAnd... executing!
                                                            Skip Rule skipAnd executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT : [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipEquality... executing!
                                                            Skip Rule skipEquality executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT : [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipComparators... executing!
                                                            Skip Rule skipComparators executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT : [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipAdditive... executing!
                                                            Skip Rule skipAdditive executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT : [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipMultiplicative... executing!
                                                            Skip Rule skipMultiplicative executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT : [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipPrimary... executing!
                                                            Skip Rule skipPrimary executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT : [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                            Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                            Executing skip query...
                                                              Query exp with 1 result nodes - CONTENT : [autor ]
                                                              Query next with 1 result nodes - CONTENT in line 58: [autor ]
                                                            Locating skip query... skip located! 
                                                            Skipping to rule...
                                                            RULE: mapVariableRef... executing!
                                                              Model Element IdentifierReference created
                                                              Executing queries...
                                                                Query exp with 1 result nodes - CONTENT in line 58: [autor ]
                                                                Query thisloc with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                                                Query locInstVar with 1 result nodes - CONTENT : [private String autor = "" ; ]
                                                                Query locVar with 0 result nodes
                                                                Query method with 1 result nodes - CONTENT : [public String getAutor ( ) { return autor ; } ]
                                                                Query locParam with 0 result nodes
                                                              Executing mappings...
                                                                - OPERATION_CREATION: Name created
                                                                - QUERY_ACCESS: variable: exp - 
                                                                  node: primary (kind) - leaf: Identifier (kind) - autor (value) 
                                                                - QUERY_RESULT: 1 bindings:
                                                                  (1/1) result node: classBodyDeclaration (kind). Rule... calling mapInstanceVariable rule

                                                                  RULE: mapInstanceVariable... cached!!
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                                - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                                                    - CALL RULE: 1 bindings:
                                                      (1/1) result node: type (kind) calling mapTypeReference rule

                                                      RULE: mapTypeReference... executing!
                                                      Skip Rule mapTypeReference executing...
                                                      Executing skip query...
                                                        Query t with 1 result nodes - CONTENT in line 57: [String ]
                                                        Query primType with 0 result nodes
                                                      - IF detected...false! executing ELSE part 
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapsStringTypeReference... executing!
                                                        Model Element UnnamedTypeReference created
                                                        Executing queries...
                                                          Query t with 1 result nodes - CONTENT in line 57: [String ]
                                                        Executing mappings...
                                                          - OPERATION_CREATION: String created


                                              - CODE:  - node: qualifiedName (kind) - Result: beansstruts 
                                              - CODE:  - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletRequest ;  - node: importDeclaration (kind) - Result: import org . apache . struts . action . * ; 




                        (2/6) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 15: [if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } ]
                          Query bs with 1 result nodes - CONTENT : [if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapIfStatement... executing!
                          Model Element IfStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                            Query thenb with 1 result nodes - CONTENT : [{ request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } ]
                            Query elseb with 0 result nodes
                            Query st with 1 result nodes - CONTENT in line 15: [if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                                Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapEquality... executing!
                                Model Element BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) == null ]
                                  Query isNEqual with 0 result nodes
                                  Query isEqual with 0 result nodes
                                  Query exp2 with 1 result nodes - CONTENT : [null ]
                                  Query exp1 with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: instanceOfExpression (kind). Rule... calling skipComparators rule

                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                      Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                      Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                      Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                      Query next with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapMethodCallWithReceptorAndSelector... executing!
                                      Model Element FunctionCallExpression created
                                      Executing queries...
                                        Query selector with 1 result nodes - CONTENT in line 15: [. getAttribute ( "usuario" ) ]
                                        Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                        Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "usuario" ) ]
                                        Query locInstVar with 0 result nodes
                                        Query locVar with 0 result nodes
                                        Query primary with 1 result nodes - CONTENT in line 15: [request . getSession ( ) ]
                                        Query locParam with 0 result nodes
                                        Query argsSelector with 1 result nodes - CONTENT : ["usuario" ]
                                        Query containerCla with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                        Query argsSuffix with 0 result nodes
                                        Query hasTwoId with 1 result nodes - CONTENT in line 15: [request . getSession ( ) ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                            - CALL RULE: THE VARIABLE DOESNT EXIST
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: selector - 
                                              node: selector (kind) - leaf: Identifier (kind) - getAttribute (value) 
                                            - CALL RULE: 1 bindings:
                                              (1/1) result node: expression (kind) calling mapArgument rule

                                              RULE: mapArgument... executing!
                                                Model Element ActualParameterExpression created
                                                Executing queries...
                                                  Query expArg with 1 result nodes - CONTENT : ["usuario" ]
                                                Executing mappings...
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                    RULE: skipConditionalExpression... executing!
                                                    Skip Rule skipConditionalExpression executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipOr... executing!
                                                    Skip Rule skipOr executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAnd... executing!
                                                    Skip Rule skipAnd executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipEquality... executing!
                                                    Skip Rule skipEquality executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipComparators... executing!
                                                    Skip Rule skipComparators executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAdditive... executing!
                                                    Skip Rule skipAdditive executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipMultiplicative... executing!
                                                    Skip Rule skipMultiplicative executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipPrimary... executing!
                                                    Skip Rule skipPrimary executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Query next with 1 result nodes - CONTENT : ["usuario" ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: mapLiteral... executing!
                                                      Model Element Literal created
                                                      Executing queries...
                                                        Query exp with 1 result nodes - CONTENT : ["usuario" ]
                                                      Executing mappings...
                                                        - CODE:  - node: primary (kind) - Result: "usuario" 



                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: instanceOfExpression (kind). Rule... calling skipComparators rule

                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapLiteral... executing!
                                      Model Element Literal created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [null ]
                                      Executing mappings...
                                        - CODE:  - node: primary (kind) - Result: null 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! it doesn't have ELSE part 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapBlock rule

                              RULE: mapBlock... executing!
                                Model Element BlockStatement created
                                Executing queries...
                                  Query st with 1 result nodes - CONTENT : [{ request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } ]
                                  Query substs with 2 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                    RULE: skipBlockStatement... executing!
                                    Skip Rule skipBlockStatement executing...
                                    Executing skip query...
                                      Query next with 1 result nodes - CONTENT in line 16: [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; ]
                                      Query bs with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStatementExpression... executing!
                                      Model Element ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                        Query st with 1 result nodes - CONTENT in line 16: [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapMethodCallWithReceptorAndSelector... executing!
                                            Model Element FunctionCallExpression created
                                            Executing queries...
                                              Query selector with 1 result nodes - CONTENT in line 16: [. setAttribute ( "datosPublicacion" , bean ) ]
                                              Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                              Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ]
                                              Query locInstVar with 0 result nodes
                                              Query locVar with 0 result nodes
                                              Query primary with 1 result nodes - CONTENT in line 16: [request . getSession ( ) ]
                                              Query locParam with 0 result nodes
                                              Query argsSelector with 2 result nodes
                                              Query containerCla with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                              Query argsSuffix with 0 result nodes
                                              Query hasTwoId with 1 result nodes - CONTENT in line 16: [request . getSession ( ) ]
                                            Executing mappings...
                                                - IF detected...false! executing ELSE part 
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: primary - 
                                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                                  - OPERATION_CREATION: FunctionCallExpression created
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: primary - 
                                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                                  - CALL RULE: THE VARIABLE DOESNT EXIST
                                                  - OPERATION_CREATION: FunctionCallExpression created
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: selector - 
                                                    node: selector (kind) - leaf: Identifier (kind) - setAttribute (value) 
                                                  - CALL RULE: 2 bindings:
                                                    (1/2) result node: expression (kind) calling mapArgument rule

                                                    RULE: mapArgument... executing!
                                                      Model Element ActualParameterExpression created
                                                      Executing queries...
                                                        Query expArg with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Executing mappings...
                                                        - QUERY_RESULT: 1 bindings:
                                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                          RULE: skipConditionalExpression... executing!
                                                          Skip Rule skipConditionalExpression executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipOr... executing!
                                                          Skip Rule skipOr executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAnd... executing!
                                                          Skip Rule skipAnd executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipEquality... executing!
                                                          Skip Rule skipEquality executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipComparators... executing!
                                                          Skip Rule skipComparators executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAdditive... executing!
                                                          Skip Rule skipAdditive executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipMultiplicative... executing!
                                                          Skip Rule skipMultiplicative executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipPrimary... executing!
                                                          Skip Rule skipPrimary executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: mapLiteral... executing!
                                                            Model Element Literal created
                                                            Executing queries...
                                                              Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Executing mappings...
                                                              - CODE:  - node: primary (kind) - Result: "datosPublicacion" 


                                                    (2/2) result node: expression (kind) calling mapArgument rule

                                                    RULE: mapArgument... executing!
                                                      Model Element ActualParameterExpression created
                                                      Executing queries...
                                                        Query expArg with 1 result nodes - CONTENT : [bean ]
                                                      Executing mappings...
                                                        - QUERY_RESULT: 1 bindings:
                                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                          RULE: skipConditionalExpression... executing!
                                                          Skip Rule skipConditionalExpression executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT : [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipOr... executing!
                                                          Skip Rule skipOr executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT : [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAnd... executing!
                                                          Skip Rule skipAnd executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT : [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipEquality... executing!
                                                          Skip Rule skipEquality executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT : [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipComparators... executing!
                                                          Skip Rule skipComparators executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT : [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAdditive... executing!
                                                          Skip Rule skipAdditive executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT : [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipMultiplicative... executing!
                                                          Skip Rule skipMultiplicative executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT : [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipPrimary... executing!
                                                          Skip Rule skipPrimary executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT : [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [bean ]
                                                            Query next with 1 result nodes - CONTENT in line 16: [bean ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: mapVariableRef... executing!
                                                            Model Element IdentifierReference created
                                                            Executing queries...
                                                              Query exp with 1 result nodes - CONTENT in line 16: [bean ]
                                                              Query thisloc with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                                              Query locInstVar with 0 result nodes
                                                              Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                                              Query method with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                                              Query locParam with 0 result nodes
                                                            Executing mappings...
                                                              - OPERATION_CREATION: Name created
                                                              - QUERY_ACCESS: variable: exp - 
                                                                node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                              - QUERY_RESULT: 1 bindings:
                                                                (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: refersTo
                                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST




                                    (2/2) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                    RULE: skipBlockStatement... executing!
                                    Skip Rule skipBlockStatement executing...
                                    Executing skip query...
                                      Query next with 1 result nodes - CONTENT in line 17: [return ( actionMapping . findForward ( "login" ) ) ; ]
                                      Query bs with 1 result nodes - CONTENT : [return ( actionMapping . findForward ( "login" ) ) ; ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapReturnStatement... executing!
                                      Model Element ReturnStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                        Query st with 1 result nodes - CONTENT in line 17: [return ( actionMapping . findForward ( "login" ) ) ; ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipParenthesisFromPrimary... executing!
                                          Skip Rule skipParenthesisFromPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "login" ) ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "login" ) ]
                                            Query next with 1 result nodes - CONTENT in line 17: [actionMapping . findForward ( "login" ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapMethodCallWithReceptor... executing!
                                            Model Element FunctionCallExpression created
                                            Executing queries...
                                              Query containerMet with 0 result nodes
                                              Query exp with 1 result nodes - CONTENT in line 17: [actionMapping . findForward ( "login" ) ]
                                              Query locInstVar with 0 result nodes
                                              Query locVar with 0 result nodes
                                              Query args with 1 result nodes - CONTENT : ["login" ]
                                              Query locParam with 0 result nodes
                                              Query containerCla with 0 result nodes
                                            Executing mappings...
                                              - OPERATION_CREATION: NamedTypeReference created
                                              - OPERATION_CREATION: Name created
                                              - QUERY_ACCESS: variable: exp - 
                                                node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - OPERATION_CREATION: FunctionCallExpression created
                                              - OPERATION_CREATION: NamedTypeReference created
                                              - OPERATION_CREATION: Name created
                                              - QUERY_ACCESS: variable: exp - 
                                                node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                              - CALL RULE: 1 bindings:
                                                (1/1) result node: expression (kind) calling mapArgument rule

                                                RULE: mapArgument... executing!
                                                  Model Element ActualParameterExpression created
                                                  Executing queries...
                                                    Query expArg with 1 result nodes - CONTENT : ["login" ]
                                                  Executing mappings...
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                      RULE: skipConditionalExpression... executing!
                                                      Skip Rule skipConditionalExpression executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipOr... executing!
                                                      Skip Rule skipOr executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAnd... executing!
                                                      Skip Rule skipAnd executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipEquality... executing!
                                                      Skip Rule skipEquality executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipComparators... executing!
                                                      Skip Rule skipComparators executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipAdditive... executing!
                                                      Skip Rule skipAdditive executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipMultiplicative... executing!
                                                      Skip Rule skipMultiplicative executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipPrimary... executing!
                                                      Skip Rule skipPrimary executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                      Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                      Executing skip query...
                                                        Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Query next with 1 result nodes - CONTENT : ["login" ]
                                                      Locating skip query... skip located! 
                                                      Skipping to rule...
                                                      RULE: mapLiteral... executing!
                                                        Model Element Literal created
                                                        Executing queries...
                                                          Query exp with 1 result nodes - CONTENT : ["login" ]
                                                        Executing mappings...
                                                          - CODE:  - node: primary (kind) - Result: "login" 





                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (3/6) result node: blockStatement (kind). Rule... calling mapDeclarationOrDefinitionStatement rule

                        RULE: mapDeclarationOrDefinitionStatement... executing!
                          Model Element DeclarationOrDefinitionStatement created
                          Executing queries...
                            Query var with 1 result nodes - CONTENT in line 19: [BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; ]
                            Query bs with 1 result nodes - CONTENT : [BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: localVariableDeclaration (kind). Rule... calling mapVariableDefinition rule

                              RULE: mapVariableDefinition... executing!
                                Model Element VariableDefinition created
                                Executing queries...
                                  Query name with 1 result nodes - CONTENT in line 19: [datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                  Query lvd with 1 result nodes - CONTENT in line 19: [BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; ]
                                  Query init with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                  Query type with 1 result nodes - CONTENT in line 19: [BeanTablon ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: name - 
                                    node: variableDeclarator (kind) - leaf: Identifier (kind) - datos (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                    RULE: skipConditionalExpression... executing!
                                    Skip Rule skipConditionalExpression executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipOr... executing!
                                    Skip Rule skipOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAnd... executing!
                                    Skip Rule skipAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapCasting... executing!
                                      Model Element CastExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                        Query unaryNotExp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                        Query isPrimitive with 0 result nodes
                                        Query unaryExp with 0 result nodes
                                        Query type with 1 result nodes - CONTENT in line 19: [BeanTablon ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: unaryExpressionNotPlusMinus (kind). Rule... calling mapMethodCallWithReceptorAndSelector rule

                                              RULE: mapMethodCallWithReceptorAndSelector... executing!
                                                Model Element FunctionCallExpression created
                                                Executing queries...
                                                  Query selector with 1 result nodes - CONTENT in line 19: [. getAttribute ( "datosPublicacion" ) ]
                                                  Query containerMet with 0 result nodes
                                                  Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . getAttribute ( "datosPublicacion" ) ]
                                                  Query locInstVar with 0 result nodes
                                                  Query locVar with 0 result nodes
                                                  Query primary with 1 result nodes - CONTENT in line 19: [request . getSession ( ) ]
                                                  Query locParam with 0 result nodes
                                                  Query argsSelector with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                  Query containerCla with 0 result nodes
                                                  Query argsSuffix with 0 result nodes
                                                  Query hasTwoId with 1 result nodes - CONTENT in line 19: [request . getSession ( ) ]
                                                Executing mappings...
                                                    - IF detected...false! executing ELSE part 
                                                      - OPERATION_CREATION: NamedTypeReference created
                                                      - OPERATION_CREATION: Name created
                                                      - QUERY_ACCESS: variable: primary - 
                                                        node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                                      - OPERATION_CREATION: FunctionCallExpression created
                                                      - OPERATION_CREATION: NamedTypeReference created
                                                      - OPERATION_CREATION: Name created
                                                      - QUERY_ACCESS: variable: primary - 
                                                        node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                                      - CALL RULE: THE VARIABLE DOESNT EXIST
                                                      - OPERATION_CREATION: FunctionCallExpression created
                                                      - OPERATION_CREATION: NamedTypeReference created
                                                      - OPERATION_CREATION: Name created
                                                      - QUERY_ACCESS: variable: selector - 
                                                        node: selector (kind) - leaf: Identifier (kind) - getAttribute (value) 
                                                      - CALL RULE: 1 bindings:
                                                        (1/1) result node: expression (kind) calling mapArgument rule

                                                        RULE: mapArgument... executing!
                                                          Model Element ActualParameterExpression created
                                                          Executing queries...
                                                            Query expArg with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Executing mappings...
                                                            - QUERY_RESULT: 1 bindings:
                                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                              RULE: skipConditionalExpression... executing!
                                                              Skip Rule skipConditionalExpression executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipOr... executing!
                                                              Skip Rule skipOr executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipAnd... executing!
                                                              Skip Rule skipAnd executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipEquality... executing!
                                                              Skip Rule skipEquality executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipComparators... executing!
                                                              Skip Rule skipComparators executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipAdditive... executing!
                                                              Skip Rule skipAdditive executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipMultiplicative... executing!
                                                              Skip Rule skipMultiplicative executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipPrimary... executing!
                                                              Skip Rule skipPrimary executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                              Executing skip query...
                                                                Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                              Locating skip query... skip located! 
                                                              Skipping to rule...
                                                              RULE: mapLiteral... executing!
                                                                Model Element Literal created
                                                                Executing queries...
                                                                  Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                                Executing mappings...
                                                                  - CODE:  - node: primary (kind) - Result: "datosPublicacion" 




                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: type (kind) calling mapTypeReference rule

                                    RULE: mapTypeReference... executing!
                                    Skip Rule mapTypeReference executing...
                                    Executing skip query...
                                      Query t with 1 result nodes - CONTENT in line 19: [BeanTablon ]
                                      Query primType with 0 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapsNamedTypeReference... executing!
                                      Model Element NamedTypeReference created
                                      Executing queries...
                                        Query locatedType with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                        Query t with 1 result nodes - CONTENT in line 19: [BeanTablon ]
                                      Executing mappings...
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: t - 
                                          node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

                                          RULE: mapClass... cached!!



                        (4/6) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 20: [if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ]
                          Query bs with 1 result nodes - CONTENT : [if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapIfStatement... executing!
                          Model Element IfStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [datos != null ]
                            Query thenb with 1 result nodes - CONTENT : [{ bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ]
                            Query elseb with 0 result nodes
                            Query st with 1 result nodes - CONTENT in line 20: [if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [datos != null ]
                                Query next with 1 result nodes - CONTENT : [datos != null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [datos != null ]
                                Query next with 1 result nodes - CONTENT : [datos != null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [datos != null ]
                                Query next with 1 result nodes - CONTENT : [datos != null ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapEquality... executing!
                                Model Element BinaryExpression created
                                Executing queries...
                                  Query exp with 1 result nodes - CONTENT : [datos != null ]
                                  Query isNEqual with 0 result nodes
                                  Query isEqual with 0 result nodes
                                  Query exp2 with 1 result nodes - CONTENT : [null ]
                                  Query exp1 with 1 result nodes - CONTENT : [datos ]
                                Executing mappings...
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: instanceOfExpression (kind). Rule... calling skipComparators rule

                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [datos ]
                                      Query next with 1 result nodes - CONTENT : [datos ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [datos ]
                                      Query next with 1 result nodes - CONTENT : [datos ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [datos ]
                                      Query next with 1 result nodes - CONTENT : [datos ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [datos ]
                                      Query next with 1 result nodes - CONTENT : [datos ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [datos ]
                                      Query next with 1 result nodes - CONTENT in line 20: [datos ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapVariableRef... executing!
                                      Model Element IdentifierReference created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT in line 20: [datos ]
                                        Query thisloc with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                        Query locInstVar with 0 result nodes
                                        Query locVar with 1 result nodes - CONTENT : [BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; ]
                                        Query method with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                        Query locParam with 0 result nodes
                                      Executing mappings...
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: exp - 
                                          node: primary (kind) - leaf: Identifier (kind) - datos (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: refersTo
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: instanceOfExpression (kind). Rule... calling skipComparators rule

                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [null ]
                                      Query next with 1 result nodes - CONTENT : [null ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapLiteral... executing!
                                      Model Element Literal created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [null ]
                                      Executing mappings...
                                        - CODE:  - node: primary (kind) - Result: null 

                                    - IF detected...false! executing ELSE part 
                                        - IF detected...false! it doesn't have ELSE part 

                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: statement (kind). Rule... calling mapBlock rule

                              RULE: mapBlock... executing!
                                Model Element BlockStatement created
                                Executing queries...
                                  Query st with 1 result nodes - CONTENT : [{ bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ]
                                  Query substs with 2 result nodes
                                Executing mappings...
                                  - QUERY_RESULT: 2 bindings:
                                    (1/2) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                    RULE: skipBlockStatement... executing!
                                    Skip Rule skipBlockStatement executing...
                                    Executing skip query...
                                      Query next with 1 result nodes - CONTENT in line 21: [bean = datos ; ]
                                      Query bs with 1 result nodes - CONTENT : [bean = datos ; ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStatementExpression... executing!
                                      Model Element ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [bean = datos ]
                                        Query st with 1 result nodes - CONTENT in line 21: [bean = datos ; ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling mapAssignmentExpression rule

                                          RULE: mapAssignmentExpression... executing!
                                            Model Element BinaryExpression created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : [bean = datos ]
                                              Query exp2 with 1 result nodes - CONTENT : [datos ]
                                              Query exp1 with 1 result nodes - CONTENT : [bean ]
                                            Executing mappings...
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: conditionalExpression (kind). Rule... calling skipOr rule

                                                RULE: skipOr... executing!
                                                Skip Rule skipOr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [bean ]
                                                  Query next with 1 result nodes - CONTENT : [bean ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAnd... executing!
                                                Skip Rule skipAnd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [bean ]
                                                  Query next with 1 result nodes - CONTENT : [bean ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipEquality... executing!
                                                Skip Rule skipEquality executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [bean ]
                                                  Query next with 1 result nodes - CONTENT : [bean ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipComparators... executing!
                                                Skip Rule skipComparators executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [bean ]
                                                  Query next with 1 result nodes - CONTENT : [bean ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAdditive... executing!
                                                Skip Rule skipAdditive executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [bean ]
                                                  Query next with 1 result nodes - CONTENT : [bean ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipMultiplicative... executing!
                                                Skip Rule skipMultiplicative executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [bean ]
                                                  Query next with 1 result nodes - CONTENT : [bean ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipPrimary... executing!
                                                Skip Rule skipPrimary executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [bean ]
                                                  Query next with 1 result nodes - CONTENT : [bean ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [bean ]
                                                  Query next with 1 result nodes - CONTENT in line 21: [bean ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapVariableRef... executing!
                                                  Model Element IdentifierReference created
                                                  Executing queries...
                                                    Query exp with 1 result nodes - CONTENT in line 21: [bean ]
                                                    Query thisloc with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                                    Query locInstVar with 0 result nodes
                                                    Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                                    Query method with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                                    Query locParam with 0 result nodes
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: exp - 
                                                      node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: refersTo
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                                              - OPERATION_CREATION: Assign created
                                              - QUERY_RESULT: 1 bindings:
                                                (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                RULE: skipConditionalExpression... executing!
                                                Skip Rule skipConditionalExpression executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT : [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipOr... executing!
                                                Skip Rule skipOr executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT : [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAnd... executing!
                                                Skip Rule skipAnd executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT : [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipEquality... executing!
                                                Skip Rule skipEquality executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT : [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipComparators... executing!
                                                Skip Rule skipComparators executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT : [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipAdditive... executing!
                                                Skip Rule skipAdditive executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT : [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipMultiplicative... executing!
                                                Skip Rule skipMultiplicative executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT : [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipPrimary... executing!
                                                Skip Rule skipPrimary executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT : [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                Executing skip query...
                                                  Query exp with 1 result nodes - CONTENT : [datos ]
                                                  Query next with 1 result nodes - CONTENT in line 21: [datos ]
                                                Locating skip query... skip located! 
                                                Skipping to rule...
                                                RULE: mapVariableRef... executing!
                                                  Model Element IdentifierReference created
                                                  Executing queries...
                                                    Query exp with 1 result nodes - CONTENT in line 21: [datos ]
                                                    Query thisloc with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                                    Query locInstVar with 0 result nodes
                                                    Query locVar with 1 result nodes - CONTENT : [BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; ]
                                                    Query method with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                                    Query locParam with 0 result nodes
                                                  Executing mappings...
                                                    - OPERATION_CREATION: Name created
                                                    - QUERY_ACCESS: variable: exp - 
                                                      node: primary (kind) - leaf: Identifier (kind) - datos (value) 
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                    - QUERY_RESULT: 1 bindings:
                                                      (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: refersTo
                                                    - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                                    (2/2) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                                    RULE: skipBlockStatement... executing!
                                    Skip Rule skipBlockStatement executing...
                                    Executing skip query...
                                      Query next with 1 result nodes - CONTENT in line 22: [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; ]
                                      Query bs with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapStatementExpression... executing!
                                      Model Element ExpressionStatement created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                        Query st with 1 result nodes - CONTENT in line 22: [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                            Query next with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapMethodCallWithReceptorAndSelector... executing!
                                            Model Element FunctionCallExpression created
                                            Executing queries...
                                              Query selector with 1 result nodes - CONTENT in line 22: [. setAttribute ( "datosPublicacion" , null ) ]
                                              Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                              Query exp with 1 result nodes - CONTENT : [request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ]
                                              Query locInstVar with 0 result nodes
                                              Query locVar with 0 result nodes
                                              Query primary with 1 result nodes - CONTENT in line 22: [request . getSession ( ) ]
                                              Query locParam with 0 result nodes
                                              Query argsSelector with 2 result nodes
                                              Query containerCla with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                              Query argsSuffix with 0 result nodes
                                              Query hasTwoId with 1 result nodes - CONTENT in line 22: [request . getSession ( ) ]
                                            Executing mappings...
                                                - IF detected...false! executing ELSE part 
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: primary - 
                                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                                  - OPERATION_CREATION: FunctionCallExpression created
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: primary - 
                                                    node: primary (kind) - leaf: Identifier (kind) - getSession (value) 
                                                  - CALL RULE: THE VARIABLE DOESNT EXIST
                                                  - OPERATION_CREATION: FunctionCallExpression created
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: selector - 
                                                    node: selector (kind) - leaf: Identifier (kind) - setAttribute (value) 
                                                  - CALL RULE: 2 bindings:
                                                    (1/2) result node: expression (kind) calling mapArgument rule

                                                    RULE: mapArgument... executing!
                                                      Model Element ActualParameterExpression created
                                                      Executing queries...
                                                        Query expArg with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                      Executing mappings...
                                                        - QUERY_RESULT: 1 bindings:
                                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                          RULE: skipConditionalExpression... executing!
                                                          Skip Rule skipConditionalExpression executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipOr... executing!
                                                          Skip Rule skipOr executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAnd... executing!
                                                          Skip Rule skipAnd executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipEquality... executing!
                                                          Skip Rule skipEquality executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipComparators... executing!
                                                          Skip Rule skipComparators executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAdditive... executing!
                                                          Skip Rule skipAdditive executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipMultiplicative... executing!
                                                          Skip Rule skipMultiplicative executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipPrimary... executing!
                                                          Skip Rule skipPrimary executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Query next with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: mapLiteral... executing!
                                                            Model Element Literal created
                                                            Executing queries...
                                                              Query exp with 1 result nodes - CONTENT : ["datosPublicacion" ]
                                                            Executing mappings...
                                                              - CODE:  - node: primary (kind) - Result: "datosPublicacion" 


                                                    (2/2) result node: expression (kind) calling mapArgument rule

                                                    RULE: mapArgument... executing!
                                                      Model Element ActualParameterExpression created
                                                      Executing queries...
                                                        Query expArg with 1 result nodes - CONTENT : [null ]
                                                      Executing mappings...
                                                        - QUERY_RESULT: 1 bindings:
                                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                          RULE: skipConditionalExpression... executing!
                                                          Skip Rule skipConditionalExpression executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipOr... executing!
                                                          Skip Rule skipOr executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAnd... executing!
                                                          Skip Rule skipAnd executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipEquality... executing!
                                                          Skip Rule skipEquality executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipComparators... executing!
                                                          Skip Rule skipComparators executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipAdditive... executing!
                                                          Skip Rule skipAdditive executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipMultiplicative... executing!
                                                          Skip Rule skipMultiplicative executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipPrimary... executing!
                                                          Skip Rule skipPrimary executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                          Executing skip query...
                                                            Query exp with 1 result nodes - CONTENT : [null ]
                                                            Query next with 1 result nodes - CONTENT : [null ]
                                                          Locating skip query... skip located! 
                                                          Skipping to rule...
                                                          RULE: mapLiteral... executing!
                                                            Model Element Literal created
                                                            Executing queries...
                                                              Query exp with 1 result nodes - CONTENT : [null ]
                                                            Executing mappings...
                                                              - CODE:  - node: primary (kind) - Result: null 





                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST

                        (5/6) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 28: [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; ]
                          Query bs with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapStatementExpression... executing!
                          Model Element ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                            Query st with 1 result nodes - CONTENT in line 28: [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapMethodCallWithReceptorAndSelector... executing!
                                Model Element FunctionCallExpression created
                                Executing queries...
                                  Query selector with 1 result nodes - CONTENT in line 24: [. addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                  Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ]
                                  Query locInstVar with 0 result nodes
                                  Query locVar with 0 result nodes
                                  Query primary with 1 result nodes - CONTENT in line 24: [ControladorNoticias . getInstancia ( ) ]
                                  Query locParam with 0 result nodes
                                  Query argsSelector with 3 result nodes
                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                  Query argsSuffix with 0 result nodes
                                  Query hasTwoId with 1 result nodes - CONTENT in line 24: [ControladorNoticias . getInstancia ( ) ]
                                Executing mappings...
                                    - IF detected...false! executing ELSE part 
                                      - OPERATION_CREATION: NamedTypeReference created
                                      - OPERATION_CREATION: Name created
                                      - QUERY_ACCESS: variable: primary - 
                                        node: primary (kind) - leaf: Identifier (kind) - ControladorNoticias (value) 
                                      - OPERATION_CREATION: FunctionCallExpression created
                                      - OPERATION_CREATION: NamedTypeReference created
                                      - OPERATION_CREATION: Name created
                                      - QUERY_ACCESS: variable: primary - 
                                        node: primary (kind) - leaf: Identifier (kind) - getInstancia (value) 
                                      - CALL RULE: THE VARIABLE DOESNT EXIST
                                      - OPERATION_CREATION: FunctionCallExpression created
                                      - OPERATION_CREATION: NamedTypeReference created
                                      - OPERATION_CREATION: Name created
                                      - QUERY_ACCESS: variable: selector - 
                                        node: selector (kind) - leaf: Identifier (kind) - addNoticia (value) 
                                      - CALL RULE: 3 bindings:
                                        (1/3) result node: expression (kind) calling mapArgument rule

                                        RULE: mapArgument... executing!
                                          Model Element ActualParameterExpression created
                                          Executing queries...
                                            Query expArg with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                          Executing mappings...
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                              RULE: skipConditionalExpression... executing!
                                              Skip Rule skipConditionalExpression executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipOr... executing!
                                              Skip Rule skipOr executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAnd... executing!
                                              Skip Rule skipAnd executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipEquality... executing!
                                              Skip Rule skipEquality executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipComparators... executing!
                                              Skip Rule skipComparators executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAdditive... executing!
                                              Skip Rule skipAdditive executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipMultiplicative... executing!
                                              Skip Rule skipMultiplicative executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipPrimary... executing!
                                              Skip Rule skipPrimary executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getTitulo ( ) ]
                                                Query next with 1 result nodes - CONTENT in line 25: [bean . getTitulo ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: mapMethodCallWithReceptor... executing!
                                                Model Element FunctionCallExpression created
                                                Executing queries...
                                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                                  Query exp with 1 result nodes - CONTENT in line 25: [bean . getTitulo ( ) ]
                                                  Query locInstVar with 0 result nodes
                                                  Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                                  Query args with 0 result nodes
                                                  Query locParam with 0 result nodes
                                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                                Executing mappings...
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: type
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - OPERATION_CREATION: FunctionCallExpression created
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - getTitulo (value) 
                                                  - CALL RULE: THE VARIABLE DOESNT EXIST


                                        (2/3) result node: expression (kind) calling mapArgument rule

                                        RULE: mapArgument... executing!
                                          Model Element ActualParameterExpression created
                                          Executing queries...
                                            Query expArg with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                          Executing mappings...
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                              RULE: skipConditionalExpression... executing!
                                              Skip Rule skipConditionalExpression executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipOr... executing!
                                              Skip Rule skipOr executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAnd... executing!
                                              Skip Rule skipAnd executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipEquality... executing!
                                              Skip Rule skipEquality executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipComparators... executing!
                                              Skip Rule skipComparators executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAdditive... executing!
                                              Skip Rule skipAdditive executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipMultiplicative... executing!
                                              Skip Rule skipMultiplicative executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipPrimary... executing!
                                              Skip Rule skipPrimary executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getContenido ( ) ]
                                                Query next with 1 result nodes - CONTENT in line 26: [bean . getContenido ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: mapMethodCallWithReceptor... executing!
                                                Model Element FunctionCallExpression created
                                                Executing queries...
                                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                                  Query exp with 1 result nodes - CONTENT in line 26: [bean . getContenido ( ) ]
                                                  Query locInstVar with 0 result nodes
                                                  Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                                  Query args with 0 result nodes
                                                  Query locParam with 0 result nodes
                                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                                Executing mappings...
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: type
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - OPERATION_CREATION: FunctionCallExpression created
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - getContenido (value) 
                                                  - CALL RULE: THE VARIABLE DOESNT EXIST


                                        (3/3) result node: expression (kind) calling mapArgument rule

                                        RULE: mapArgument... executing!
                                          Model Element ActualParameterExpression created
                                          Executing queries...
                                            Query expArg with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                          Executing mappings...
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                              RULE: skipConditionalExpression... executing!
                                              Skip Rule skipConditionalExpression executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipOr... executing!
                                              Skip Rule skipOr executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAnd... executing!
                                              Skip Rule skipAnd executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipEquality... executing!
                                              Skip Rule skipEquality executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipComparators... executing!
                                              Skip Rule skipComparators executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipAdditive... executing!
                                              Skip Rule skipAdditive executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipMultiplicative... executing!
                                              Skip Rule skipMultiplicative executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipPrimary... executing!
                                              Skip Rule skipPrimary executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [bean . getAutor ( ) ]
                                                Query next with 1 result nodes - CONTENT in line 27: [bean . getAutor ( ) ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: mapMethodCallWithReceptor... executing!
                                                Model Element FunctionCallExpression created
                                                Executing queries...
                                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } ]
                                                  Query exp with 1 result nodes - CONTENT in line 27: [bean . getAutor ( ) ]
                                                  Query locInstVar with 0 result nodes
                                                  Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                                  Query args with 0 result nodes
                                                  Query locParam with 0 result nodes
                                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionPublicarNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; if ( request . getSession ( ) . getAttribute ( "usuario" ) == null ) { request . getSession ( ) . setAttribute ( "datosPublicacion" , bean ) ; return ( actionMapping . findForward ( "login" ) ) ; } BeanTablon datos = ( BeanTablon ) request . getSession ( ) . getAttribute ( "datosPublicacion" ) ; if ( datos != null ) { bean = datos ; request . getSession ( ) . setAttribute ( "datosPublicacion" , null ) ; } ControladorNoticias . getInstancia ( ) . addNoticia ( bean . getTitulo ( ) , bean . getContenido ( ) , bean . getAutor ( ) ) ; return ( actionMapping . findForward ( "exito" ) ) ; } } ]
                                                Executing mappings...
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: type
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - OPERATION_CREATION: FunctionCallExpression created
                                                  - OPERATION_CREATION: NamedTypeReference created
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - getAutor (value) 
                                                  - CALL RULE: THE VARIABLE DOESNT EXIST




                        (6/6) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 29: [return ( actionMapping . findForward ( "exito" ) ) ; ]
                          Query bs with 1 result nodes - CONTENT : [return ( actionMapping . findForward ( "exito" ) ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapReturnStatement... executing!
                          Model Element ReturnStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                            Query st with 1 result nodes - CONTENT in line 29: [return ( actionMapping . findForward ( "exito" ) ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipParenthesisFromPrimary... executing!
                              Skip Rule skipParenthesisFromPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "exito" ) ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "exito" ) ]
                                Query next with 1 result nodes - CONTENT in line 29: [actionMapping . findForward ( "exito" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapMethodCallWithReceptor... executing!
                                Model Element FunctionCallExpression created
                                Executing queries...
                                  Query containerMet with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT in line 29: [actionMapping . findForward ( "exito" ) ]
                                  Query locInstVar with 0 result nodes
                                  Query locVar with 0 result nodes
                                  Query args with 1 result nodes - CONTENT : ["exito" ]
                                  Query locParam with 0 result nodes
                                  Query containerCla with 0 result nodes
                                Executing mappings...
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: FunctionCallExpression created
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: expression (kind) calling mapArgument rule

                                    RULE: mapArgument... executing!
                                      Model Element ActualParameterExpression created
                                      Executing queries...
                                        Query expArg with 1 result nodes - CONTENT : ["exito" ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Query next with 1 result nodes - CONTENT : ["exito" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapLiteral... executing!
                                            Model Element Literal created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ["exito" ]
                                            Executing mappings...
                                              - CODE:  - node: primary (kind) - Result: "exito" 




                      - CALL RULE: 1 bindings:
                        (1/1) result node: type (kind) calling mapTypeReference rule

                        RULE: mapTypeReference... executing!
                        Skip Rule mapTypeReference executing...
                        Executing skip query...
                          Query t with 1 result nodes - CONTENT in line 10: [ActionForward ]
                          Query primType with 0 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapsNamedTypeReference... executing!
                          Model Element NamedTypeReference created
                          Executing queries...
                            Query locatedType with 0 result nodes
                            Query t with 1 result nodes - CONTENT in line 10: [ActionForward ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: t - 
                              node: type (kind) - leaf: Identifier (kind) - ActionForward (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                - CODE:  - node: qualifiedName (kind) - Result: actionsstruts 
                - CODE:  - node: importDeclaration (kind) - Result: import beansstruts . BeanTablon ;  - node: importDeclaration (kind) - Result: import controladores . ControladorNoticias ;  - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletRequest ;  - node: importDeclaration (kind) - Result: import javax . servlet . http . HttpServletResponse ;  - node: importDeclaration (kind) - Result: import org . apache . struts . action . * ; 

            (3/4) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

            RULE: mapClass... executing!
              Model Element AggregateTypeDefinition created
              Executing queries...
                Query coid with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                Query extends with 1 result nodes - CONTENT in line 10: [Action ]
                Query name with 1 result nodes - CONTENT in line 10: [class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                Query impts with 5 result nodes
                Query pack with 1 result nodes - CONTENT in line 1: [actionsstruts ]
                Query elements with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                Query loccu with 1 result nodes - CONTENT : [package actionsstruts ; import beansstruts . BeanTablon ; import controladores . ControladorNoticias ; import javax . servlet . http . * ; import logicaNegocio . Noticia ; import org . apache . struts . action . * ; public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
              Executing mappings...
                - OPERATION_CREATION: Name created
                - QUERY_ACCESS: variable: name - 
                  node: normalClassDeclaration (kind) - leaf: Identifier (kind) - ActionVerNoticia (value) 
                - OPERATION_CREATION: SpecificClassType created
                - QUERY_RESULT: 1 bindings:
                  (1/1) result node: classBodyDeclaration (kind). Rule... calling mapTypedMethod rule

                  RULE: mapTypedMethod... executing!
                    Model Element FunctionDefinition created
                    Executing queries...
                      Query cbd with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                      Query stats with 7 result nodes
                      Query name with 1 result nodes - CONTENT in line 12: [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                      Query rtype with 1 result nodes - CONTENT in line 12: [ActionForward ]
                      Query params with 4 result nodes
                    Executing mappings...
                      - OPERATION_CREATION: Name created
                      - QUERY_ACCESS: variable: name - 
                        node: methodDeclaration (kind) - leaf: Identifier (kind) - execute (value) 
                      - QUERY_RESULT: 4 bindings:
                        (1/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 12: [actionMapping ]
                            Query fpd with 1 result nodes - CONTENT : [ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 12: [ActionMapping ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionMapping (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 12: [ActionMapping ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 12: [ActionMapping ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - ActionMapping (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (2/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 13: [actionForm ]
                            Query fpd with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 13: [ActionForm ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - actionForm (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 13: [ActionForm ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 13: [ActionForm ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - ActionForm (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (3/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 14: [request ]
                            Query fpd with 1 result nodes - CONTENT : [HttpServletRequest request , HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 14: [HttpServletRequest ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - request (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 14: [HttpServletRequest ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 14: [HttpServletRequest ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - HttpServletRequest (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                        (4/4) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                        RULE: mapsFormalParameterDefinition... executing!
                          Model Element FormalParameterDefinition created
                          Executing queries...
                            Query name with 1 result nodes - CONTENT in line 15: [response ]
                            Query fpd with 1 result nodes - CONTENT : [HttpServletResponse response ]
                            Query type with 1 result nodes - CONTENT in line 15: [HttpServletResponse ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: name - 
                              node: variableDeclaratorId (kind) - leaf: Identifier (kind) - response (value) 
                            - CALL RULE: 1 bindings:
                              (1/1) result node: type (kind) calling mapTypeReference rule

                              RULE: mapTypeReference... executing!
                              Skip Rule mapTypeReference executing...
                              Executing skip query...
                                Query t with 1 result nodes - CONTENT in line 15: [HttpServletResponse ]
                                Query primType with 0 result nodes
                              - IF detected...false! executing ELSE part 
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapsNamedTypeReference... executing!
                                Model Element NamedTypeReference created
                                Executing queries...
                                  Query locatedType with 0 result nodes
                                  Query t with 1 result nodes - CONTENT in line 15: [HttpServletResponse ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: t - 
                                    node: type (kind) - leaf: Identifier (kind) - HttpServletResponse (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                      - QUERY_RESULT: 7 bindings:
                        (1/7) result node: blockStatement (kind). Rule... calling mapDeclarationOrDefinitionStatement rule

                        RULE: mapDeclarationOrDefinitionStatement... executing!
                          Model Element DeclarationOrDefinitionStatement created
                          Executing queries...
                            Query var with 1 result nodes - CONTENT in line 17: [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                            Query bs with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: localVariableDeclaration (kind). Rule... calling mapVariableDefinition rule

                              RULE: mapVariableDefinition... executing!
                                Model Element VariableDefinition created
                                Executing queries...
                                  Query name with 1 result nodes - CONTENT in line 17: [bean = ( BeanTablon ) actionForm ]
                                  Query lvd with 1 result nodes - CONTENT in line 17: [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                  Query init with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                  Query type with 1 result nodes - CONTENT in line 17: [BeanTablon ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: name - 
                                    node: variableDeclarator (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                    RULE: skipConditionalExpression... executing!
                                    Skip Rule skipConditionalExpression executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipOr... executing!
                                    Skip Rule skipOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAnd... executing!
                                    Skip Rule skipAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                      Query next with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapCasting... executing!
                                      Model Element CastExpression created
                                      Executing queries...
                                        Query exp with 1 result nodes - CONTENT : [( BeanTablon ) actionForm ]
                                        Query unaryNotExp with 1 result nodes - CONTENT : [actionForm ]
                                        Query isPrimitive with 0 result nodes
                                        Query unaryExp with 0 result nodes
                                        Query type with 1 result nodes - CONTENT in line 17: [BeanTablon ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - QUERY_RESULT: 1 bindings:
                                              (1/1) result node: unaryExpressionNotPlusMinus (kind). Rule... calling skipUnaryExpressionNotPlusMinus rule

                                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                              Executing skip query...
                                                Query exp with 1 result nodes - CONTENT : [actionForm ]
                                                Query next with 1 result nodes - CONTENT in line 17: [actionForm ]
                                              Locating skip query... skip located! 
                                              Skipping to rule...
                                              RULE: mapVariableRef... executing!
                                                Model Element IdentifierReference created
                                                Executing queries...
                                                  Query exp with 1 result nodes - CONTENT in line 17: [actionForm ]
                                                  Query thisloc with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                                                  Query locInstVar with 0 result nodes
                                                  Query locVar with 0 result nodes
                                                  Query method with 1 result nodes - CONTENT : [public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                                                  Query locParam with 1 result nodes - CONTENT : [ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ]
                                                Executing mappings...
                                                  - OPERATION_CREATION: Name created
                                                  - QUERY_ACCESS: variable: exp - 
                                                    node: primary (kind) - leaf: Identifier (kind) - actionForm (value) 
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: formalParameterDecls (kind). Rule... calling mapsFormalParameterDefinition rule

                                                    RULE: mapsFormalParameterDefinition... cached!!


                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: type (kind) calling mapTypeReference rule

                                    RULE: mapTypeReference... executing!
                                    Skip Rule mapTypeReference executing...
                                    Executing skip query...
                                      Query t with 1 result nodes - CONTENT in line 17: [BeanTablon ]
                                      Query primType with 0 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapsNamedTypeReference... executing!
                                      Model Element NamedTypeReference created
                                      Executing queries...
                                        Query locatedType with 1 result nodes - CONTENT : [public class BeanTablon extends ActionForm { private String tituloSeleccionado = "" ; private String titulo = "" ; private String contenido = "" ; private String autor = "" ; public ActionErrors validate ( ActionMapping mapping , HttpServletRequest request ) { ActionErrors errores = new ActionErrors ( ) ; if ( isTituloNoValido ( getTitulo ( ) ) ) errores . add ( ActionErrors . GLOBAL_ERROR , new ActionError ( "tablon.error" ) ) ; return errores ; } private boolean isTituloNoValido ( String t ) { if ( t . contains ( "$" ) || t . contains ( "#" ) ) return true ; return false ; } public void setTituloSeleccionado ( String tituloSeleccionado ) { this . tituloSeleccionado = tituloSeleccionado ; } public String getTituloSeleccionado ( ) { return tituloSeleccionado ; } public void setTitulo ( String titulo ) { this . titulo = titulo ; } public String getTitulo ( ) { return titulo ; } public void setContenido ( String contenido ) { this . contenido = contenido ; } public String getContenido ( ) { return contenido ; } public void setAutor ( String autor ) { this . autor = autor ; } public String getAutor ( ) { return autor ; } } ]
                                        Query t with 1 result nodes - CONTENT in line 17: [BeanTablon ]
                                      Executing mappings...
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: t - 
                                          node: type (kind) - leaf: Identifier (kind) - BeanTablon (value) 
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

                                          RULE: mapClass... cached!!



                        (2/7) result node: blockStatement (kind). Rule... calling mapDeclarationOrDefinitionStatement rule

                        RULE: mapDeclarationOrDefinitionStatement... executing!
                          Model Element DeclarationOrDefinitionStatement created
                          Executing queries...
                            Query var with 1 result nodes - CONTENT in line 18: [Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; ]
                            Query bs with 1 result nodes - CONTENT : [Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: localVariableDeclaration (kind). Rule... calling mapVariableDefinition rule

                              RULE: mapVariableDefinition... executing!
                                Model Element VariableDefinition created
                                Executing queries...
                                  Query name with 1 result nodes - CONTENT in line 18: [noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                  Query lvd with 1 result nodes - CONTENT in line 18: [Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; ]
                                  Query init with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                  Query type with 1 result nodes - CONTENT in line 18: [Noticia ]
                                Executing mappings...
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: name - 
                                    node: variableDeclarator (kind) - leaf: Identifier (kind) - noticia (value) 
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                    RULE: skipConditionalExpression... executing!
                                    Skip Rule skipConditionalExpression executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipOr... executing!
                                    Skip Rule skipOr executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAnd... executing!
                                    Skip Rule skipAnd executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipEquality... executing!
                                    Skip Rule skipEquality executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipComparators... executing!
                                    Skip Rule skipComparators executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipAdditive... executing!
                                    Skip Rule skipAdditive executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipMultiplicative... executing!
                                    Skip Rule skipMultiplicative executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: skipPrimary... executing!
                                    Skip Rule skipPrimary executing...
                                    Executing skip query...
                                      Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                      Query next with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapMethodCallWithReceptorAndSelector... executing!
                                      Model Element FunctionCallExpression created
                                      Executing queries...
                                        Query selector with 1 result nodes - CONTENT in line 18: [. findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                        Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                                        Query exp with 1 result nodes - CONTENT : [ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ]
                                        Query locInstVar with 0 result nodes
                                        Query locVar with 0 result nodes
                                        Query primary with 1 result nodes - CONTENT in line 18: [ControladorNoticias . getInstancia ( ) ]
                                        Query locParam with 0 result nodes
                                        Query argsSelector with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                        Query containerCla with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                                        Query argsSuffix with 0 result nodes
                                        Query hasTwoId with 1 result nodes - CONTENT in line 18: [ControladorNoticias . getInstancia ( ) ]
                                      Executing mappings...
                                          - IF detected...false! executing ELSE part 
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - ControladorNoticias (value) 
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: primary - 
                                              node: primary (kind) - leaf: Identifier (kind) - getInstancia (value) 
                                            - CALL RULE: THE VARIABLE DOESNT EXIST
                                            - OPERATION_CREATION: FunctionCallExpression created
                                            - OPERATION_CREATION: NamedTypeReference created
                                            - OPERATION_CREATION: Name created
                                            - QUERY_ACCESS: variable: selector - 
                                              node: selector (kind) - leaf: Identifier (kind) - findNoticia (value) 
                                            - CALL RULE: 1 bindings:
                                              (1/1) result node: expression (kind) calling mapArgument rule

                                              RULE: mapArgument... executing!
                                                Model Element ActualParameterExpression created
                                                Executing queries...
                                                  Query expArg with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                Executing mappings...
                                                  - QUERY_RESULT: 1 bindings:
                                                    (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                                    RULE: skipConditionalExpression... executing!
                                                    Skip Rule skipConditionalExpression executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipOr... executing!
                                                    Skip Rule skipOr executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAnd... executing!
                                                    Skip Rule skipAnd executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipEquality... executing!
                                                    Skip Rule skipEquality executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipComparators... executing!
                                                    Skip Rule skipComparators executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipAdditive... executing!
                                                    Skip Rule skipAdditive executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipMultiplicative... executing!
                                                    Skip Rule skipMultiplicative executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipPrimary... executing!
                                                    Skip Rule skipPrimary executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: skipUnaryExpressionNotPlusMinus... executing!
                                                    Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                                    Executing skip query...
                                                      Query exp with 1 result nodes - CONTENT : [bean . getTituloSeleccionado ( ) ]
                                                      Query next with 1 result nodes - CONTENT in line 18: [bean . getTituloSeleccionado ( ) ]
                                                    Locating skip query... skip located! 
                                                    Skipping to rule...
                                                    RULE: mapMethodCallWithReceptor... executing!
                                                      Model Element FunctionCallExpression created
                                                      Executing queries...
                                                        Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                                                        Query exp with 1 result nodes - CONTENT in line 18: [bean . getTituloSeleccionado ( ) ]
                                                        Query locInstVar with 0 result nodes
                                                        Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                                        Query args with 0 result nodes
                                                        Query locParam with 0 result nodes
                                                        Query containerCla with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                                                      Executing mappings...
                                                        - OPERATION_CREATION: NamedTypeReference created
                                                        - OPERATION_CREATION: Name created
                                                        - QUERY_ACCESS: variable: exp - 
                                                          node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                        - QUERY_RESULT: 1 bindings:
                                                          (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: type
                                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                                        - OPERATION_CREATION: FunctionCallExpression created
                                                        - OPERATION_CREATION: NamedTypeReference created
                                                        - OPERATION_CREATION: Name created
                                                        - QUERY_ACCESS: variable: exp - 
                                                          node: primary (kind) - leaf: Identifier (kind) - getTituloSeleccionado (value) 
                                                        - CALL RULE: THE VARIABLE DOESNT EXIST



                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: type (kind) calling mapTypeReference rule

                                    RULE: mapTypeReference... executing!
                                    Skip Rule mapTypeReference executing...
                                    Executing skip query...
                                      Query t with 1 result nodes - CONTENT in line 18: [Noticia ]
                                      Query primType with 0 result nodes
                                    - IF detected...false! executing ELSE part 
                                    Locating skip query... skip located! 
                                    Skipping to rule...
                                    RULE: mapsNamedTypeReference... executing!
                                      Model Element NamedTypeReference created
                                      Executing queries...
                                        Query locatedType with 0 result nodes
                                        Query t with 1 result nodes - CONTENT in line 18: [Noticia ]
                                      Executing mappings...
                                        - OPERATION_CREATION: Name created
                                        - QUERY_ACCESS: variable: t - 
                                          node: type (kind) - leaf: Identifier (kind) - Noticia (value) 
                                        - QUERY_RESULT: THE VARIABLE DOESNT EXIST



                        (3/7) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 19: [bean . setTitulo ( "" ) ; ]
                          Query bs with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapStatementExpression... executing!
                          Model Element ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                            Query st with 1 result nodes - CONTENT in line 19: [bean . setTitulo ( "" ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setTitulo ( "" ) ]
                                Query next with 1 result nodes - CONTENT in line 19: [bean . setTitulo ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapMethodCallWithReceptor... executing!
                                Model Element FunctionCallExpression created
                                Executing queries...
                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                                  Query exp with 1 result nodes - CONTENT in line 19: [bean . setTitulo ( "" ) ]
                                  Query locInstVar with 0 result nodes
                                  Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                  Query args with 1 result nodes - CONTENT : ["" ]
                                  Query locParam with 0 result nodes
                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                                Executing mappings...
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: type
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: FunctionCallExpression created
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - setTitulo (value) 
                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: expression (kind) calling mapArgument rule

                                    RULE: mapArgument... executing!
                                      Model Element ActualParameterExpression created
                                      Executing queries...
                                        Query expArg with 1 result nodes - CONTENT : ["" ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapLiteral... executing!
                                            Model Element Literal created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ["" ]
                                            Executing mappings...
                                              - CODE:  - node: primary (kind) - Result: "" 




                        (4/7) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 20: [bean . setContenido ( "" ) ; ]
                          Query bs with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapStatementExpression... executing!
                          Model Element ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                            Query st with 1 result nodes - CONTENT in line 20: [bean . setContenido ( "" ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setContenido ( "" ) ]
                                Query next with 1 result nodes - CONTENT in line 20: [bean . setContenido ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapMethodCallWithReceptor... executing!
                                Model Element FunctionCallExpression created
                                Executing queries...
                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                                  Query exp with 1 result nodes - CONTENT in line 20: [bean . setContenido ( "" ) ]
                                  Query locInstVar with 0 result nodes
                                  Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                  Query args with 1 result nodes - CONTENT : ["" ]
                                  Query locParam with 0 result nodes
                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                                Executing mappings...
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: type
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: FunctionCallExpression created
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - setContenido (value) 
                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: expression (kind) calling mapArgument rule

                                    RULE: mapArgument... executing!
                                      Model Element ActualParameterExpression created
                                      Executing queries...
                                        Query expArg with 1 result nodes - CONTENT : ["" ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapLiteral... executing!
                                            Model Element Literal created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ["" ]
                                            Executing mappings...
                                              - CODE:  - node: primary (kind) - Result: "" 




                        (5/7) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 21: [bean . setAutor ( "" ) ; ]
                          Query bs with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapStatementExpression... executing!
                          Model Element ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                            Query st with 1 result nodes - CONTENT in line 21: [bean . setAutor ( "" ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [bean . setAutor ( "" ) ]
                                Query next with 1 result nodes - CONTENT in line 21: [bean . setAutor ( "" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapMethodCallWithReceptor... executing!
                                Model Element FunctionCallExpression created
                                Executing queries...
                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                                  Query exp with 1 result nodes - CONTENT in line 21: [bean . setAutor ( "" ) ]
                                  Query locInstVar with 0 result nodes
                                  Query locVar with 1 result nodes - CONTENT : [BeanTablon bean = ( BeanTablon ) actionForm ; ]
                                  Query args with 1 result nodes - CONTENT : ["" ]
                                  Query locParam with 0 result nodes
                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                                Executing mappings...
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - bean (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: 1 bindings:
                                    (1/1) result node: blockStatement (kind). Rule... RULE NOT FOUND!  FROM: blockStatement TO: type
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: FunctionCallExpression created
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - setAutor (value) 
                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: expression (kind) calling mapArgument rule

                                    RULE: mapArgument... executing!
                                      Model Element ActualParameterExpression created
                                      Executing queries...
                                        Query expArg with 1 result nodes - CONTENT : ["" ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["" ]
                                            Query next with 1 result nodes - CONTENT : ["" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapLiteral... executing!
                                            Model Element Literal created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ["" ]
                                            Executing mappings...
                                              - CODE:  - node: primary (kind) - Result: "" 




                        (6/7) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 23: [request . setAttribute ( "noticia" , noticia ) ; ]
                          Query bs with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapStatementExpression... executing!
                          Model Element ExpressionStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                            Query st with 1 result nodes - CONTENT in line 23: [request . setAttribute ( "noticia" , noticia ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [request . setAttribute ( "noticia" , noticia ) ]
                                Query next with 1 result nodes - CONTENT in line 23: [request . setAttribute ( "noticia" , noticia ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapMethodCallWithReceptor... executing!
                                Model Element FunctionCallExpression created
                                Executing queries...
                                  Query containerMet with 1 result nodes - CONTENT : [ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } ]
                                  Query exp with 1 result nodes - CONTENT in line 23: [request . setAttribute ( "noticia" , noticia ) ]
                                  Query locInstVar with 0 result nodes
                                  Query locVar with 0 result nodes
                                  Query args with 2 result nodes
                                  Query locParam with 0 result nodes
                                  Query containerCla with 1 result nodes - CONTENT : [public class ActionVerNoticia extends Action { public ActionForward execute ( ActionMapping actionMapping , ActionForm actionForm , HttpServletRequest request , HttpServletResponse response ) throws Exception { BeanTablon bean = ( BeanTablon ) actionForm ; Noticia noticia = ControladorNoticias . getInstancia ( ) . findNoticia ( bean . getTituloSeleccionado ( ) ) ; bean . setTitulo ( "" ) ; bean . setContenido ( "" ) ; bean . setAutor ( "" ) ; request . setAttribute ( "noticia" , noticia ) ; return ( actionMapping . findForward ( "verNoticia" ) ) ; } } ]
                                Executing mappings...
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - request (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: FunctionCallExpression created
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - setAttribute (value) 
                                  - CALL RULE: 2 bindings:
                                    (1/2) result node: expression (kind) calling mapArgument rule

                                    RULE: mapArgument... executing!
                                      Model Element ActualParameterExpression created
                                      Executing queries...
                                        Query expArg with 1 result nodes - CONTENT : ["noticia" ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Query next with 1 result nodes - CONTENT : ["noticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapLiteral... executing!
                                            Model Element Literal created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ["noticia" ]
                                            Executing mappings...
                                              - CODE:  - node: primary (kind) - Result: "noticia" 


                                    (2/2) result node: expression (kind) calling mapArgument rule

                                    RULE: mapArgument... executing!
                                      Model Element ActualParameterExpression created
                                      Executing queries...
                                        Query expArg with 1 result nodes - CONTENT : [noticia ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT : [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT : [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT : [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT : [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT : [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT : [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT : [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT : [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : [noticia ]
                                            Query next with 1 result nodes - CONTENT in line 23: [noticia ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapVariableRef... executing!
                                            Model Element IdentifierReference created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT in line 23: [noticia ]
                                              Query thisloc with 0 result nodes
                                              Query locInstVar with 0 result nodes
                                              Query locVar with 0 result nodes
                                              Query method with 0 result nodes
                                              Query locParam with 0 result nodes
                                            Executing mappings...
                                              - OPERATION_CREATION: Name created
                                              - QUERY_ACCESS: variable: exp - 
                                                node: primary (kind) - leaf: Identifier (kind) - noticia (value) 
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                              - QUERY_RESULT: THE VARIABLE DOESNT EXIST




                        (7/7) result node: blockStatement (kind). Rule... calling skipBlockStatement rule

                        RULE: skipBlockStatement... executing!
                        Skip Rule skipBlockStatement executing...
                        Executing skip query...
                          Query next with 1 result nodes - CONTENT in line 24: [return ( actionMapping . findForward ( "verNoticia" ) ) ; ]
                          Query bs with 1 result nodes - CONTENT : [return ( actionMapping . findForward ( "verNoticia" ) ) ; ]
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapReturnStatement... executing!
                          Model Element ReturnStatement created
                          Executing queries...
                            Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                            Query st with 1 result nodes - CONTENT in line 24: [return ( actionMapping . findForward ( "verNoticia" ) ) ; ]
                          Executing mappings...
                            - QUERY_RESULT: 1 bindings:
                              (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipParenthesisFromPrimary... executing!
                              Skip Rule skipParenthesisFromPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [( actionMapping . findForward ( "verNoticia" ) ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipConditionalExpression... executing!
                              Skip Rule skipConditionalExpression executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipOr... executing!
                              Skip Rule skipOr executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAnd... executing!
                              Skip Rule skipAnd executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipEquality... executing!
                              Skip Rule skipEquality executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipComparators... executing!
                              Skip Rule skipComparators executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipAdditive... executing!
                              Skip Rule skipAdditive executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipMultiplicative... executing!
                              Skip Rule skipMultiplicative executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipPrimary... executing!
                              Skip Rule skipPrimary executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: skipUnaryExpressionNotPlusMinus... executing!
                              Skip Rule skipUnaryExpressionNotPlusMinus executing...
                              Executing skip query...
                                Query exp with 1 result nodes - CONTENT : [actionMapping . findForward ( "verNoticia" ) ]
                                Query next with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "verNoticia" ) ]
                              Locating skip query... skip located! 
                              Skipping to rule...
                              RULE: mapMethodCallWithReceptor... executing!
                                Model Element FunctionCallExpression created
                                Executing queries...
                                  Query containerMet with 0 result nodes
                                  Query exp with 1 result nodes - CONTENT in line 24: [actionMapping . findForward ( "verNoticia" ) ]
                                  Query locInstVar with 0 result nodes
                                  Query locVar with 0 result nodes
                                  Query args with 1 result nodes - CONTENT : ["verNoticia" ]
                                  Query locParam with 0 result nodes
                                  Query containerCla with 0 result nodes
                                Executing mappings...
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - actionMapping (value) 
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - QUERY_RESULT: THE VARIABLE DOESNT EXIST
                                  - OPERATION_CREATION: FunctionCallExpression created
                                  - OPERATION_CREATION: NamedTypeReference created
                                  - OPERATION_CREATION: Name created
                                  - QUERY_ACCESS: variable: exp - 
                                    node: primary (kind) - leaf: Identifier (kind) - findForward (value) 
                                  - CALL RULE: 1 bindings:
                                    (1/1) result node: expression (kind) calling mapArgument rule

                                    RULE: mapArgument... executing!
                                      Model Element ActualParameterExpression created
                                      Executing queries...
                                        Query expArg with 1 result nodes - CONTENT : ["verNoticia" ]
                                      Executing mappings...
                                        - QUERY_RESULT: 1 bindings:
                                          (1/1) result node: expression (kind). Rule... calling skipConditionalExpression rule

                                          RULE: skipConditionalExpression... executing!
                                          Skip Rule skipConditionalExpression executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipOr... executing!
                                          Skip Rule skipOr executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAnd... executing!
                                          Skip Rule skipAnd executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipEquality... executing!
                                          Skip Rule skipEquality executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipComparators... executing!
                                          Skip Rule skipComparators executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipAdditive... executing!
                                          Skip Rule skipAdditive executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipMultiplicative... executing!
                                          Skip Rule skipMultiplicative executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipPrimary... executing!
                                          Skip Rule skipPrimary executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: skipUnaryExpressionNotPlusMinus... executing!
                                          Skip Rule skipUnaryExpressionNotPlusMinus executing...
                                          Executing skip query...
                                            Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Query next with 1 result nodes - CONTENT : ["verNoticia" ]
                                          Locating skip query... skip located! 
                                          Skipping to rule...
                                          RULE: mapLiteral... executing!
                                            Model Element Literal created
                                            Executing queries...
                                              Query exp with 1 result nodes - CONTENT : ["verNoticia" ]
                                            Executing mappings...
                                              - CODE:  - node: primary (kind) - Result: "verNoticia" 




                      - CALL RULE: 1 bindings:
                        (1/1) result node: type (kind) calling mapTypeReference rule

                        RULE: mapTypeReference... executing!
                        Skip Rule mapTypeReference executing...
                        Executing skip query...
                          Query t with 1 result nodes - CONTENT in line 12: [ActionForward ]
                          Query primType with 0 result nodes
                        - IF detected...false! executing ELSE part 
                        Locating skip query... skip located! 
                        Skipping to rule...
                        RULE: mapsNamedTypeReference... executing!
                          Model Element NamedTypeReference created
                          Executing queries...
                            Query locatedType with 0 result nodes
                            Query t with 1 result nodes - CONTENT in line 12: [ActionForward ]
                          Executing mappings...
                            - OPERATION_CREATION: Name created
                            - QUERY_ACCESS: variable: t - 
                              node: type (kind) - leaf: Identifier (kind) - ActionForward (value) 
                            - QUERY_RESULT: THE VARIABLE DOESNT EXIST


                - CODE:  - node: qualifiedName (kind) - Result: actionsstruts 
                - CODE:  - node: importDeclaration (kind) - Result: import beansstruts . BeanTablon ;  - node: importDeclaration (kind) - Result: import controladores . ControladorNoticias ;  - node: importDeclaration (kind) - Result: import javax . servlet . http . * ;  - node: importDeclaration (kind) - Result: import logicaNegocio . Noticia ;  - node: importDeclaration (kind) - Result: import org . apache . struts . action . * ; 

            (4/4) result node: classOrInterfaceDeclaration (kind). Rule... calling mapClass rule

            RULE: mapClass... cached!!



Saving...